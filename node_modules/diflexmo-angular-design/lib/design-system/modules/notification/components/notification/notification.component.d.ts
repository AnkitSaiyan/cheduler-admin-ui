import { OnDestroy, OnInit } from '@angular/core';
import { PositionType } from '../../models/position-type';
import { NotificationType } from '../../models/notification-type';
import { NotificationService } from '../../services/notification.service';
import { DiflexmoNotification } from '../../models/diflexmo-notification';
import * as i0 from "@angular/core";
export declare class NotificationComponent implements OnInit, OnDestroy {
    private notificationService;
    position: PositionType;
    iconName: string | undefined;
    readonly timeToShowInSeconds: number;
    currentNotification?: DiflexmoNotification;
    notificationType: typeof NotificationType;
    positionType: typeof PositionType;
    private notifications;
    private takeUntil$;
    constructor(notificationService: NotificationService);
    ngOnInit(): void;
    hideAndShowNext(): void;
    private showNextNotification;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NotificationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NotificationComponent, "dfm-notification", never, { "position": "position"; "iconName": "iconName"; }, {}, never, never, false>;
}

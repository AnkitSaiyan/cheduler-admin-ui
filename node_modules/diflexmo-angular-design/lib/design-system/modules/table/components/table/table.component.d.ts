import { ElementRef, EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { ResizedEvent } from 'angular-resize-event';
import { Subject } from 'rxjs';
import { TableItem } from '../../models/table-item';
import * as i0 from "@angular/core";
export declare class TableComponent implements OnInit {
    items: TableItem[];
    selectable: boolean;
    clearSelected$?: Subject<void> | null;
    rowClickable: boolean;
    selected: EventEmitter<string[]>;
    rowClicked: EventEmitter<TableItem>;
    headerRowTemplate: TemplateRef<any>;
    bodyRowTemplate: TemplateRef<any>;
    tableWrapper: ElementRef;
    tableSizeChanged$: Subject<ResizedEvent>;
    isHorizontalScrollDisplayed: boolean;
    selectedItems: {
        [key: string]: boolean;
    };
    get areAllSelected(): boolean | 0;
    ngOnInit(): void;
    checkTableSize(event: ResizedEvent): void;
    selectAllItems(): void;
    selectItem(selected: boolean, id: string): void;
    click(item: TableItem): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TableComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TableComponent, "dfm-table", never, { "items": "items"; "selectable": "selectable"; "clearSelected$": "clearSelected$"; "rowClickable": "rowClickable"; }, { "selected": "selected"; "rowClicked": "rowClicked"; }, ["headerRowTemplate", "bodyRowTemplate"], ["*"], false>;
}

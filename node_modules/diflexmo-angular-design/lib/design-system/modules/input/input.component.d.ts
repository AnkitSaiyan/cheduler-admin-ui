import { ControlValueAccessor, NgControl } from '@angular/forms';
import { InputSize } from '../../types/input-size.type';
import { InputType } from './types/input-type.type';
import * as i0 from "@angular/core";
export declare class InputComponent implements ControlValueAccessor {
    control: NgControl;
    type: InputType;
    size: InputSize;
    label: string;
    placeholder: string;
    disabled: boolean;
    hint: string;
    icon: string;
    isInvalid: boolean;
    readonly: boolean;
    showHint: boolean;
    onChange: any;
    onTouched: any;
    value: any;
    private static DateFormat;
    constructor(control: NgControl);
    writeValue(obj: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState?(isDisabled: boolean): void;
    clickHintIcon(): void;
    onValueChanged(value: any): void;
    private isDate;
    static ɵfac: i0.ɵɵFactoryDeclaration<InputComponent, [{ optional: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<InputComponent, "dfm-input", never, { "type": "type"; "size": "size"; "label": "label"; "placeholder": "placeholder"; "disabled": "disabled"; "hint": "hint"; "icon": "icon"; "isInvalid": "isInvalid"; "readonly": "readonly"; }, {}, never, never, false>;
}

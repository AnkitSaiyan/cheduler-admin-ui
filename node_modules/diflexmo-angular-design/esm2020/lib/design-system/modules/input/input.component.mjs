import { Component, Input, Optional } from '@angular/core';
import moment from 'moment';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
import * as i3 from "../icon/components/icon/icon.component";
import * as i4 from "../error/error.component";
export class InputComponent {
    constructor(control) {
        this.control = control;
        this.type = 'text';
        this.size = 'sm';
        this.label = '';
        this.placeholder = '';
        this.disabled = false;
        this.hint = '';
        this.icon = '';
        this.isInvalid = false;
        this.readonly = false;
        this.showHint = false;
        this.onChange = () => { };
        this.onTouched = () => { };
        this.value = '';
        if (this.control != null) {
            this.control.valueAccessor = this;
        }
    }
    writeValue(obj) {
        this.value = this.isDate(obj) ? moment(obj).format(InputComponent.DateFormat) : obj;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    clickHintIcon() {
        this.showHint = !this.showHint;
    }
    onValueChanged(value) {
        const changedValue = this.type === 'datepicker' ? moment(value, InputComponent.DateFormat).toDate() : value;
        this.onChange(changedValue);
    }
    isDate(date) {
        return this.type === 'datepicker' && date && date instanceof Date && !Number.isNaN(date.getTime());
    }
}
InputComponent.DateFormat = 'DD.MM.YYYY';
InputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputComponent, deps: [{ token: i1.NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
InputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: InputComponent, selector: "dfm-input", inputs: { type: "type", size: "size", label: "label", placeholder: "placeholder", disabled: "disabled", hint: "hint", icon: "icon", isInvalid: "isInvalid", readonly: "readonly" }, ngImport: i0, template: "<label *ngIf=\"label\" class=\"dfm-input-label\">{{ label }}</label>\n<div class=\"input-container input-container-{{ size }}\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"leading-icon\"></dfm-icon>\n  <input\n    [type]=\"type\"\n    class=\"dfm-input dfm-input-{{ size }}\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': (control && control.touched && !control.valid) || isInvalid, 'leading-icon-control': icon }\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"onValueChanged($event)\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    (blur)=\"onTouched($event)\"\n    [readonly]=\"readonly\"\n  />\n  <dfm-icon *ngIf=\"hint && ((control && control.valid) || !control)\" name=\"help-circle\" class=\"hint-icon\" (click)=\"clickHintIcon()\"></dfm-icon>\n</div>\n<span *ngIf=\"showHint\" class=\"dfm-input-hint\">{{ hint }}</span>\n<dfm-error [control]=\"control\"></dfm-error>\n", styles: [".dfm-input-label{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;color:var(--dfm-input-label-color);padding-bottom:6px}.input-container .dfm-input-md,.input-container .dfm-input-sm{border-radius:8px;font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px;box-sizing:border-box;color:var(--dfm-input-color);background-color:var(--dfm-input-bg);box-shadow:0 1px 2px #1018280d;outline:none;border:1px solid var(--dfm-input-border);width:100%}.input-container{position:relative}.input-container .leading-icon{position:absolute;color:var(--dfm-input-leading-icon-color)}.input-container-sm .leading-icon{top:9px;left:14px;width:18px;height:18px}.input-container-md .leading-icon{top:12px;left:14px;width:20px;height:20px}.input-container .hint-icon{position:absolute;color:var(--dfm-input-hint-icon-color);top:12px;right:12px;width:16px;height:16px;cursor:pointer}.input-container .dfm-input-sm{height:40px;padding:8px 12px}.input-container .dfm-input-sm.hint-control{padding-right:40px}.input-container .dfm-input-sm:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-sm:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-sm[readonly]{cursor:pointer}.input-container .dfm-input-sm.leading-icon-control{padding-left:40px}.input-container .dfm-input-md{height:44px;padding:10px 14px}.input-container .dfm-input-md.hint-control{padding-right:44px}.input-container .dfm-input-md.leading-icon-control{padding-left:42px}.input-container .dfm-input-md~.hint-icon{top:14px;right:14px}.input-container .dfm-input-md:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-md:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-md[readonly]{cursor:pointer}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}:host-context(.input-dropdown-sm) .dfm-input.dfm-input-sm{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;height:36px}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i3.IconComponent, selector: "dfm-icon", inputs: ["name"] }, { kind: "component", type: i4.ErrorComponent, selector: "dfm-error", inputs: ["control"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-input', template: "<label *ngIf=\"label\" class=\"dfm-input-label\">{{ label }}</label>\n<div class=\"input-container input-container-{{ size }}\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"leading-icon\"></dfm-icon>\n  <input\n    [type]=\"type\"\n    class=\"dfm-input dfm-input-{{ size }}\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': (control && control.touched && !control.valid) || isInvalid, 'leading-icon-control': icon }\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"onValueChanged($event)\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    (blur)=\"onTouched($event)\"\n    [readonly]=\"readonly\"\n  />\n  <dfm-icon *ngIf=\"hint && ((control && control.valid) || !control)\" name=\"help-circle\" class=\"hint-icon\" (click)=\"clickHintIcon()\"></dfm-icon>\n</div>\n<span *ngIf=\"showHint\" class=\"dfm-input-hint\">{{ hint }}</span>\n<dfm-error [control]=\"control\"></dfm-error>\n", styles: [".dfm-input-label{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;color:var(--dfm-input-label-color);padding-bottom:6px}.input-container .dfm-input-md,.input-container .dfm-input-sm{border-radius:8px;font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px;box-sizing:border-box;color:var(--dfm-input-color);background-color:var(--dfm-input-bg);box-shadow:0 1px 2px #1018280d;outline:none;border:1px solid var(--dfm-input-border);width:100%}.input-container{position:relative}.input-container .leading-icon{position:absolute;color:var(--dfm-input-leading-icon-color)}.input-container-sm .leading-icon{top:9px;left:14px;width:18px;height:18px}.input-container-md .leading-icon{top:12px;left:14px;width:20px;height:20px}.input-container .hint-icon{position:absolute;color:var(--dfm-input-hint-icon-color);top:12px;right:12px;width:16px;height:16px;cursor:pointer}.input-container .dfm-input-sm{height:40px;padding:8px 12px}.input-container .dfm-input-sm.hint-control{padding-right:40px}.input-container .dfm-input-sm:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-sm:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-sm[readonly]{cursor:pointer}.input-container .dfm-input-sm.leading-icon-control{padding-left:40px}.input-container .dfm-input-md{height:44px;padding:10px 14px}.input-container .dfm-input-md.hint-control{padding-right:44px}.input-container .dfm-input-md.leading-icon-control{padding-left:42px}.input-container .dfm-input-md~.hint-icon{top:14px;right:14px}.input-container .dfm-input-md:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-md:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-md[readonly]{cursor:pointer}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}:host-context(.input-dropdown-sm) .dfm-input.dfm-input-sm{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;height:36px}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { type: [{
                type: Input
            }], size: [{
                type: Input
            }], label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], disabled: [{
                type: Input
            }], hint: [{
                type: Input
            }], icon: [{
                type: Input
            }], isInvalid: [{
                type: Input
            }], readonly: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZGlmbGV4bW8tYW5ndWxhci1kZXNpZ24vc3JjL2xpYi9kZXNpZ24tc3lzdGVtL21vZHVsZXMvaW5wdXQvaW5wdXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZGlmbGV4bW8tYW5ndWxhci1kZXNpZ24vc3JjL2xpYi9kZXNpZ24tc3lzdGVtL21vZHVsZXMvaW5wdXQvaW5wdXQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTNELE9BQU8sTUFBTSxNQUFNLFFBQVEsQ0FBQzs7Ozs7O0FBUzVCLE1BQU0sT0FBTyxjQUFjO0lBNkJ6QixZQUErQixPQUFrQjtRQUFsQixZQUFPLEdBQVAsT0FBTyxDQUFXO1FBNUJ4QyxTQUFJLEdBQWMsTUFBTSxDQUFDO1FBRXpCLFNBQUksR0FBYyxJQUFJLENBQUM7UUFFdkIsVUFBSyxHQUFXLEVBQUUsQ0FBQztRQUVuQixnQkFBVyxHQUFXLEVBQUUsQ0FBQztRQUV6QixhQUFRLEdBQVksS0FBSyxDQUFDO1FBRTFCLFNBQUksR0FBVyxFQUFFLENBQUM7UUFFbEIsU0FBSSxHQUFXLEVBQUUsQ0FBQztRQUVsQixjQUFTLEdBQVksS0FBSyxDQUFDO1FBRTNCLGFBQVEsR0FBWSxLQUFLLENBQUM7UUFFbkMsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUUxQixhQUFRLEdBQVEsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUFDO1FBRXpCLGNBQVMsR0FBUSxHQUFHLEVBQUUsR0FBRSxDQUFDLENBQUM7UUFFMUIsVUFBSyxHQUFRLEVBQUUsQ0FBQztRQUtkLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUU7WUFDeEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1NBQ25DO0lBQ0gsQ0FBQztJQUVELFVBQVUsQ0FBQyxHQUFRO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztJQUN0RixDQUFDO0lBRUQsZ0JBQWdCLENBQUMsRUFBTztRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRUQsaUJBQWlCLENBQUMsRUFBTztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQsZ0JBQWdCLENBQUUsVUFBbUI7UUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDN0IsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUNqQyxDQUFDO0lBRUQsY0FBYyxDQUFDLEtBQVU7UUFDdkIsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLElBQUksS0FBSyxZQUFZLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDNUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRU8sTUFBTSxDQUFDLElBQVM7UUFDdEIsT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFlBQVksSUFBSSxJQUFJLElBQUksSUFBSSxZQUFZLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7SUFDckcsQ0FBQzs7QUFuQ2MseUJBQVUsR0FBVyxZQUFhLENBQUE7NEdBM0J0QyxjQUFjO2dHQUFkLGNBQWMscU9DWDNCLDA1QkFrQkE7NEZEUGEsY0FBYztrQkFMMUIsU0FBUzsrQkFDRSxXQUFXOzswQkFpQ1IsUUFBUTs0Q0E1QlosSUFBSTtzQkFBWixLQUFLO2dCQUVHLElBQUk7c0JBQVosS0FBSztnQkFFRyxLQUFLO3NCQUFiLEtBQUs7Z0JBRUcsV0FBVztzQkFBbkIsS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLO2dCQUVHLElBQUk7c0JBQVosS0FBSztnQkFFRyxJQUFJO3NCQUFaLEtBQUs7Z0JBRUcsU0FBUztzQkFBakIsS0FBSztnQkFFRyxRQUFRO3NCQUFoQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBOZ0NvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBJbnB1dFNpemUgfSBmcm9tICcuLi8uLi90eXBlcy9pbnB1dC1zaXplLnR5cGUnO1xuaW1wb3J0IHsgSW5wdXRUeXBlIH0gZnJvbSAnLi90eXBlcy9pbnB1dC10eXBlLnR5cGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkZm0taW5wdXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcbiAgQElucHV0KCkgdHlwZTogSW5wdXRUeXBlID0gJ3RleHQnO1xuXG4gIEBJbnB1dCgpIHNpemU6IElucHV0U2l6ZSA9ICdzbSc7XG5cbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyOiBzdHJpbmcgPSAnJztcblxuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIGhpbnQ6IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgpIGljb246IHN0cmluZyA9ICcnO1xuXG4gIEBJbnB1dCgpIGlzSW52YWxpZDogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIHJlYWRvbmx5OiBib29sZWFuID0gZmFsc2U7XG5cbiAgc2hvd0hpbnQ6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBvbkNoYW5nZTogYW55ID0gKCkgPT4ge307XG5cbiAgb25Ub3VjaGVkOiBhbnkgPSAoKSA9PiB7fTtcblxuICB2YWx1ZTogYW55ID0gJyc7XG5cbiAgcHJpdmF0ZSBzdGF0aWMgRGF0ZUZvcm1hdDogc3RyaW5nID0gJ0RELk1NLllZWVknO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHB1YmxpYyBjb250cm9sOiBOZ0NvbnRyb2wpIHtcbiAgICBpZiAodGhpcy5jb250cm9sICE9IG51bGwpIHtcbiAgICAgIHRoaXMuY29udHJvbC52YWx1ZUFjY2Vzc29yID0gdGhpcztcbiAgICB9XG4gIH1cblxuICB3cml0ZVZhbHVlKG9iajogYW55KTogdm9pZCB7XG4gICAgdGhpcy52YWx1ZSA9IHRoaXMuaXNEYXRlKG9iaikgPyBtb21lbnQob2JqKS5mb3JtYXQoSW5wdXRDb21wb25lbnQuRGF0ZUZvcm1hdCkgOiBvYmo7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5vblRvdWNoZWQgPSBmbjtcbiAgfVxuXG4gIHNldERpc2FibGVkU3RhdGU/KGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmRpc2FibGVkID0gaXNEaXNhYmxlZDtcbiAgfVxuXG4gIGNsaWNrSGludEljb24oKTogdm9pZCB7XG4gICAgdGhpcy5zaG93SGludCA9ICF0aGlzLnNob3dIaW50O1xuICB9XG5cbiAgb25WYWx1ZUNoYW5nZWQodmFsdWU6IGFueSk6IHZvaWQge1xuICAgIGNvbnN0IGNoYW5nZWRWYWx1ZSA9IHRoaXMudHlwZSA9PT0gJ2RhdGVwaWNrZXInID8gbW9tZW50KHZhbHVlLCBJbnB1dENvbXBvbmVudC5EYXRlRm9ybWF0KS50b0RhdGUoKSA6IHZhbHVlO1xuICAgIHRoaXMub25DaGFuZ2UoY2hhbmdlZFZhbHVlKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNEYXRlKGRhdGU6IGFueSkge1xuICAgIHJldHVybiB0aGlzLnR5cGUgPT09ICdkYXRlcGlja2VyJyAmJiBkYXRlICYmIGRhdGUgaW5zdGFuY2VvZiBEYXRlICYmICFOdW1iZXIuaXNOYU4oZGF0ZS5nZXRUaW1lKCkpO1xuICB9XG59XG4iLCI8bGFiZWwgKm5nSWY9XCJsYWJlbFwiIGNsYXNzPVwiZGZtLWlucHV0LWxhYmVsXCI+e3sgbGFiZWwgfX08L2xhYmVsPlxuPGRpdiBjbGFzcz1cImlucHV0LWNvbnRhaW5lciBpbnB1dC1jb250YWluZXIte3sgc2l6ZSB9fVwiPlxuICA8ZGZtLWljb24gKm5nSWY9XCJpY29uXCIgW25hbWVdPVwiaWNvblwiIGNsYXNzPVwibGVhZGluZy1pY29uXCI+PC9kZm0taWNvbj5cbiAgPGlucHV0XG4gICAgW3R5cGVdPVwidHlwZVwiXG4gICAgY2xhc3M9XCJkZm0taW5wdXQgZGZtLWlucHV0LXt7IHNpemUgfX1cIlxuICAgIFtuZ0NsYXNzXT1cInsgJ2hpbnQtY29udHJvbCc6IGhpbnQsICdpcy1pbnZhbGlkJzogKGNvbnRyb2wgJiYgY29udHJvbC50b3VjaGVkICYmICFjb250cm9sLnZhbGlkKSB8fCBpc0ludmFsaWQsICdsZWFkaW5nLWljb24tY29udHJvbCc6IGljb24gfVwiXG4gICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgKG5nTW9kZWxDaGFuZ2UpPVwib25WYWx1ZUNoYW5nZWQoJGV2ZW50KVwiXG4gICAgW3BsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVyXCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIChibHVyKT1cIm9uVG91Y2hlZCgkZXZlbnQpXCJcbiAgICBbcmVhZG9ubHldPVwicmVhZG9ubHlcIlxuICAvPlxuICA8ZGZtLWljb24gKm5nSWY9XCJoaW50ICYmICgoY29udHJvbCAmJiBjb250cm9sLnZhbGlkKSB8fCAhY29udHJvbClcIiBuYW1lPVwiaGVscC1jaXJjbGVcIiBjbGFzcz1cImhpbnQtaWNvblwiIChjbGljayk9XCJjbGlja0hpbnRJY29uKClcIj48L2RmbS1pY29uPlxuPC9kaXY+XG48c3BhbiAqbmdJZj1cInNob3dIaW50XCIgY2xhc3M9XCJkZm0taW5wdXQtaGludFwiPnt7IGhpbnQgfX08L3NwYW4+XG48ZGZtLWVycm9yIFtjb250cm9sXT1cImNvbnRyb2xcIj48L2RmbS1lcnJvcj5cbiJdfQ==
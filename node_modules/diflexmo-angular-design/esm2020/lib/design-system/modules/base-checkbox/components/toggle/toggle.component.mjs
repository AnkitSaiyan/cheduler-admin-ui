import { Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { BaseCheckboxComponent } from '../base-checkbox.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class ToggleComponent extends BaseCheckboxComponent {
}
ToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ToggleComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ToggleComponent, selector: "dfm-toggle", providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => ToggleComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-toggle form-check form-switch dfm-toggle-{{ size }}\">\n  <input class=\"toggle form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"checkbox\" role=\"switch\" [id]=\"id\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-toggle{margin-top:0}.dfm-toggle .toggle{cursor:pointer;background-color:var(--dfm-toggle-bg);background-image:var(--dfm-toggle-bg-img);border:none}.dfm-toggle .toggle:hover{background-color:var(--dfm-toggle-hover-bg)}.dfm-toggle .toggle:checked{background-color:var(--dfm-toggle-checked-bg);background-image:var(--dfm-toggle-bg-img-checked)}.dfm-toggle .toggle:disabled{background-color:var(--dfm-toggle-disabled-bg);background-image:var(--dfm-toggle-bg-img-checked-disabled)}.dfm-toggle .toggle:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-toggle .toggle{margin-top:0;cursor:pointer}.dfm-toggle.dfm-toggle-sm{padding-left:48px}.dfm-toggle.dfm-toggle-sm .toggle{width:36px;height:20px;margin-left:-48px}.dfm-toggle.dfm-toggle-md{padding-left:58px}.dfm-toggle.dfm-toggle-md .toggle{width:44px;height:24px;margin-left:-58px}.form-check label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ToggleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-toggle', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => ToggleComponent),
                        },
                    ], template: "<div class=\"dfm-toggle form-check form-switch dfm-toggle-{{ size }}\">\n  <input class=\"toggle form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"checkbox\" role=\"switch\" [id]=\"id\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-toggle{margin-top:0}.dfm-toggle .toggle{cursor:pointer;background-color:var(--dfm-toggle-bg);background-image:var(--dfm-toggle-bg-img);border:none}.dfm-toggle .toggle:hover{background-color:var(--dfm-toggle-hover-bg)}.dfm-toggle .toggle:checked{background-color:var(--dfm-toggle-checked-bg);background-image:var(--dfm-toggle-bg-img-checked)}.dfm-toggle .toggle:disabled{background-color:var(--dfm-toggle-disabled-bg);background-image:var(--dfm-toggle-bg-img-checked-disabled)}.dfm-toggle .toggle:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-toggle .toggle{margin-top:0;cursor:pointer}.dfm-toggle.dfm-toggle-sm{padding-left:48px}.dfm-toggle.dfm-toggle-sm .toggle{width:36px;height:20px;margin-left:-48px}.dfm-toggle.dfm-toggle-md{padding-left:58px}.dfm-toggle.dfm-toggle-md .toggle{width:44px;height:24px;margin-left:-58px}.form-check label{cursor:pointer}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9nZ2xlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy90b2dnbGUvdG9nZ2xlLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy90b2dnbGUvdG9nZ2xlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDRCQUE0QixDQUFDOzs7QUFjbkUsTUFBTSxPQUFPLGVBQWdCLFNBQVEscUJBQXFCOzs2R0FBN0MsZUFBZTtpR0FBZixlQUFlLHFDQVJmO1FBQ1Q7WUFDRSxPQUFPLEVBQUUsaUJBQWlCO1lBQzFCLEtBQUssRUFBRSxJQUFJO1lBQ1gsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxlQUFlLENBQUM7U0FDL0M7S0FDRixpRENkSCx5YkFPQTs0RkRTYSxlQUFlO2tCQVozQixTQUFTOytCQUNFLFlBQVksYUFHWDt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixLQUFLLEVBQUUsSUFBSTs0QkFDWCxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQzt5QkFDL0M7cUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgQmFzZUNoZWNrYm94Q29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS1jaGVja2JveC5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkZm0tdG9nZ2xlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvZ2dsZS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3RvZ2dsZS5jb21wb25lbnQuc2NzcyddLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gVG9nZ2xlQ29tcG9uZW50KSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBUb2dnbGVDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hlY2tib3hDb21wb25lbnQge31cbiIsIjxkaXYgY2xhc3M9XCJkZm0tdG9nZ2xlIGZvcm0tY2hlY2sgZm9ybS1zd2l0Y2ggZGZtLXRvZ2dsZS17eyBzaXplIH19XCI+XG4gIDxpbnB1dCBjbGFzcz1cInRvZ2dsZSBmb3JtLWNoZWNrLWlucHV0XCIgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiIFtkaXNhYmxlZF09XCJkaXNhYmxlZFwiIHR5cGU9XCJjaGVja2JveFwiIHJvbGU9XCJzd2l0Y2hcIiBbaWRdPVwiaWRcIiAvPlxuICA8bGFiZWwgY2xhc3M9XCJkLWZsZXggZmxleC1jb2x1bW5cIiBbZm9yXT1cImlkXCI+XG4gICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXt7IHNpemUgfX0tbWVkaXVtIGRmbS10ZXh0LW1haW4tNzAwXCI+e3sgbGFiZWwgfX08L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXt7IHNpemUgfX0gZGZtLXRleHQtbWFpbi01MDBcIj57eyBoaW50IH19PC9zcGFuPlxuICA8L2xhYmVsPlxuPC9kaXY+XG4iXX0=
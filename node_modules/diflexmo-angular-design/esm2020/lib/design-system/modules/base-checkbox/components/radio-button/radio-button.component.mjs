import { Component, Input, Optional } from '@angular/core';
import { BaseCheckboxComponent } from '../base-checkbox.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class RadioButtonComponent extends BaseCheckboxComponent {
    constructor(control) {
        super();
        this.control = control;
        this.checkedValue = '';
        if (this.control != null) {
            this.control.valueAccessor = this;
        }
    }
}
RadioButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, deps: [{ token: i1.NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
RadioButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: RadioButtonComponent, selector: "dfm-radio-button", inputs: { checkedValue: "checkedValue" }, usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input\n    class=\"radio-button form-check-input\"\n    [(ngModel)]=\"value\"\n    [disabled]=\"disabled\"\n    type=\"radio\"\n    [id]=\"id\"\n    [value]=\"checkedValue\"\n    [name]=\"control.name?.toString() || ''\"\n  />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-radio-button', template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input\n    class=\"radio-button form-check-input\"\n    [(ngModel)]=\"value\"\n    [disabled]=\"disabled\"\n    type=\"radio\"\n    [id]=\"id\"\n    [value]=\"checkedValue\"\n    [name]=\"control.name?.toString() || ''\"\n  />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NgControl, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { checkedValue: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBT25FLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxxQkFBcUI7SUFHN0QsWUFBK0IsT0FBa0I7UUFDL0MsS0FBSyxFQUFFLENBQUM7UUFEcUIsWUFBTyxHQUFQLE9BQU8sQ0FBVztRQUZ4QyxpQkFBWSxHQUFRLEVBQUUsQ0FBQztRQUs5QixJQUFJLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQztTQUNuQztJQUNILENBQUM7O2tIQVRVLG9CQUFvQjtzR0FBcEIsb0JBQW9CLHlIQ1RqQyxxaEJBZUE7NEZETmEsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLGtCQUFrQjs7MEJBT2YsUUFBUTs0Q0FGWixZQUFZO3NCQUFwQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nQ29udHJvbCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IEJhc2VDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UtY2hlY2tib3guY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZGZtLXJhZGlvLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9yYWRpby1idXR0b24uY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgUmFkaW9CdXR0b25Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hlY2tib3hDb21wb25lbnQge1xuICBASW5wdXQoKSBjaGVja2VkVmFsdWU6IGFueSA9ICcnO1xuXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIHB1YmxpYyBjb250cm9sOiBOZ0NvbnRyb2wpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgaWYgKHRoaXMuY29udHJvbCAhPSBudWxsKSB7XG4gICAgICB0aGlzLmNvbnRyb2wudmFsdWVBY2Nlc3NvciA9IHRoaXM7XG4gICAgfVxuICB9XG59XG4iLCI8ZGl2IGNsYXNzPVwiZGZtLXJhZGlvLWJ1dHRvbiBmb3JtLWNoZWNrIGRmbS1yYWRpby1idXR0b24te3sgc2l6ZSB9fVwiPlxuICA8aW5wdXRcbiAgICBjbGFzcz1cInJhZGlvLWJ1dHRvbiBmb3JtLWNoZWNrLWlucHV0XCJcbiAgICBbKG5nTW9kZWwpXT1cInZhbHVlXCJcbiAgICBbZGlzYWJsZWRdPVwiZGlzYWJsZWRcIlxuICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgW2lkXT1cImlkXCJcbiAgICBbdmFsdWVdPVwiY2hlY2tlZFZhbHVlXCJcbiAgICBbbmFtZV09XCJjb250cm9sLm5hbWU/LnRvU3RyaW5nKCkgfHwgJydcIlxuICAvPlxuICA8bGFiZWwgY2xhc3M9XCJkLWZsZXggZmxleC1jb2x1bW5cIiBbZm9yXT1cImlkXCI+XG4gICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXt7IHNpemUgfX0tbWVkaXVtIGRmbS10ZXh0LW1haW4tNzAwXCI+e3sgbGFiZWwgfX08L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LXt7IHNpemUgfX0gZGZtLXRleHQtbWFpbi01MDBcIj57eyBoaW50IH19PC9zcGFuPlxuICA8L2xhYmVsPlxuPC9kaXY+XG4iXX0=
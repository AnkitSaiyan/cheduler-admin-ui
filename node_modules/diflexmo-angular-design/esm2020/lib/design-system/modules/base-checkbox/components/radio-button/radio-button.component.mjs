import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { BaseCheckboxComponent } from '../base-checkbox.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
export class RadioButtonComponent extends BaseCheckboxComponent {
    constructor() {
        super(...arguments);
        this.checkedValue = '';
    }
}
RadioButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
RadioButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: RadioButtonComponent, selector: "dfm-radio-button", inputs: { checkedValue: "checkedValue" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => RadioButtonComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input class=\"radio-button form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"radio\" [id]=\"id\" [value]=\"checkedValue\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-radio-button', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => RadioButtonComponent),
                        },
                    ], template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input class=\"radio-button form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"radio\" [id]=\"id\" [value]=\"checkedValue\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"] }]
        }], propDecorators: { checkedValue: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8tYnV0dG9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL2Jhc2UtY2hlY2tib3gvY29tcG9uZW50cy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7O0FBY25FLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxxQkFBcUI7SUFaL0Q7O1FBYVcsaUJBQVksR0FBUSxFQUFFLENBQUM7S0FDakM7O2tIQUZZLG9CQUFvQjtzR0FBcEIsb0JBQW9CLHFGQVJwQjtRQUNUO1lBQ0UsT0FBTyxFQUFFLGlCQUFpQjtZQUMxQixLQUFLLEVBQUUsSUFBSTtZQUNYLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsb0JBQW9CLENBQUM7U0FDcEQ7S0FDRixpRENkSCxxY0FPQTs0RkRTYSxvQkFBb0I7a0JBWmhDLFNBQVM7K0JBQ0Usa0JBQWtCLGFBR2pCO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxpQkFBaUI7NEJBQzFCLEtBQUssRUFBRSxJQUFJOzRCQUNYLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLHFCQUFxQixDQUFDO3lCQUNwRDtxQkFDRjs4QkFHUSxZQUFZO3NCQUFwQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTkdfVkFMVUVfQUNDRVNTT1IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCYXNlQ2hlY2tib3hDb21wb25lbnQgfSBmcm9tICcuLi9iYXNlLWNoZWNrYm94LmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2RmbS1yYWRpby1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcmFkaW8tYnV0dG9uLmNvbXBvbmVudC5zY3NzJ10sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBSYWRpb0J1dHRvbkNvbXBvbmVudCksXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgUmFkaW9CdXR0b25Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ2hlY2tib3hDb21wb25lbnQge1xuICBASW5wdXQoKSBjaGVja2VkVmFsdWU6IGFueSA9ICcnO1xufVxuIiwiPGRpdiBjbGFzcz1cImRmbS1yYWRpby1idXR0b24gZm9ybS1jaGVjayBkZm0tcmFkaW8tYnV0dG9uLXt7IHNpemUgfX1cIj5cbiAgPGlucHV0IGNsYXNzPVwicmFkaW8tYnV0dG9uIGZvcm0tY2hlY2staW5wdXRcIiBbKG5nTW9kZWwpXT1cInZhbHVlXCIgW2Rpc2FibGVkXT1cImRpc2FibGVkXCIgdHlwZT1cInJhZGlvXCIgW2lkXT1cImlkXCIgW3ZhbHVlXT1cImNoZWNrZWRWYWx1ZVwiIC8+XG4gIDxsYWJlbCBjbGFzcz1cImQtZmxleCBmbGV4LWNvbHVtblwiIFtmb3JdPVwiaWRcIj5cbiAgICA8c3BhbiBjbGFzcz1cInRleHQte3sgc2l6ZSB9fS1tZWRpdW0gZGZtLXRleHQtbWFpbi03MDBcIj57eyBsYWJlbCB9fTwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz1cInRleHQte3sgc2l6ZSB9fSBkZm0tdGV4dC1tYWluLTUwMFwiPnt7IGhpbnQgfX08L3NwYW4+XG4gIDwvbGFiZWw+XG48L2Rpdj5cbiJdfQ==
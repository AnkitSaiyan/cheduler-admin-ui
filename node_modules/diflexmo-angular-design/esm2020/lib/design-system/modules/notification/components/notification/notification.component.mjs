import { Subject, takeUntil } from 'rxjs';
import { Component, Input } from '@angular/core';
import { PositionType } from '../../models/position-type';
import { NotificationType } from '../../models/notification-type';
import * as i0 from "@angular/core";
import * as i1 from "../../services/notification.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../icon/components/icon/icon.component";
export class NotificationComponent {
    constructor(notificationService) {
        this.notificationService = notificationService;
        this.position = PositionType.BOTTOM_RIGHT;
        this.timeToShowInSeconds = 4;
        this.notificationType = NotificationType;
        this.positionType = PositionType;
        this.notifications = [];
        this.takeUntil$ = new Subject();
    }
    ngOnInit() {
        this.notificationService.notifications$.pipe(takeUntil(this.takeUntil$)).subscribe((notification) => {
            this.notifications.push(notification);
            this.showNextNotification();
        });
        this.hideAndShowNext(); // TODO remove
    }
    hideAndShowNext() {
        this.currentNotification = undefined;
        this.showNextNotification();
    }
    showNextNotification() {
        if (this.notifications.length > 0) {
            this.currentNotification = this.notifications.shift();
            if (!this.currentNotification.sticky) {
                setTimeout(() => {
                    this.hideAndShowNext();
                }, this.timeToShowInSeconds * 1000);
            }
        }
    }
    ngOnDestroy() {
        this.takeUntil$.next(true);
    }
}
NotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationComponent, deps: [{ token: i1.NotificationService }], target: i0.ɵɵFactoryTarget.Component });
NotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: NotificationComponent, selector: "dfm-notification", inputs: { position: "position", iconName: "iconName" }, ngImport: i0, template: "<div\n  *ngIf=\"currentNotification\"\n  class=\"dfm-notification dfm-p-12\"\n  [ngClass]=\"{\n    'dfm-notification-success': currentNotification.type === notificationType.SUCCESS,\n    'dfm-notification-danger': currentNotification.type === notificationType.DANGER,\n    'dfm-notification-warning': currentNotification.type === notificationType.WARNING,\n    'dfm-notification-info': currentNotification.type === notificationType.INFO,\n    'dfm-notification-top-left': position === positionType.TOP_LEFT,\n    'dfm-notification-top-right': position === positionType.TOP_RIGHT,\n    'dfm-notification-bottom-right': position === positionType.BOTTOM_RIGHT,\n    'dfm-notification-bottom-left': position === positionType.BOTTOM_LEFT\n  }\"\n  (click)=\"hideAndShowNext()\"\n>\n  <div class=\"dfm-notification-icon\">\n    <div class=\"dfm-icon-wrapper dfm-p-10\">\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.DANGER && !iconName\" name=\"x-close\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.WARNING && !iconName\" name=\"alert-triangle\"> </dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.SUCCESS && !iconName\" name=\"check\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.INFO && !iconName\" name=\"info-circle\"></dfm-icon>\n      <dfm-icon *ngIf=\"iconName\" [name]=\"iconName\"></dfm-icon>\n    </div>\n  </div>\n  <div class=\"dfm-notification-content\">\n    <span *ngIf=\"currentNotification.headerText\" class=\"dfm-notification-header dfm-text-main-700\">\n      {{ currentNotification.headerText }}\n    </span>\n    <span *ngIf=\"currentNotification.bodyText\" class=\"dfm-notification-body dfm-text-main-500\">{{ currentNotification.bodyText }}</span>\n  </div>\n</div>\n", styles: [".dfm-notification{box-shadow:0 12px 16px -4px #10182814,0 4px 6px -2px #10182808;border-radius:8px;width:328px;position:absolute;z-index:99;cursor:pointer;display:flex;justify-content:center;align-items:center;background-color:var(--dfm-notification-bg)}.dfm-notification .dfm-notification-header{width:100%;font-family:Montserrat;font-style:normal;font-size:18px;line-height:28px;font-weight:500;display:inline-block}.dfm-notification .dfm-notification-content{display:flex;justify-content:center;align-items:center}.dfm-notification .dfm-icon-wrapper{width:40px;height:40px;border-radius:20px}.dfm-notification .dfm-icon-wrapper dfm-icon{width:20px;height:20px}.dfm-notification .dfm-notification-body{display:block;width:100%;display:inline-block;font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px}.dfm-notification .dfm-notification-content{width:256px;margin-left:8px;display:inline-block}.dfm-notification .dfm-notification-icon{display:inline-block;vertical-align:top}.dfm-notification.dfm-notification-top-left{top:42px;left:42px}.dfm-notification.dfm-notification-top-right{top:42px;right:42px}.dfm-notification.dfm-notification-bottom-left{bottom:42px;left:42px}.dfm-notification.dfm-notification-bottom-right{bottom:42px;right:42px}.dfm-notification.dfm-notification-success .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-success);color:var(--dfm-notification-icon-color-success)}.dfm-notification.dfm-notification-danger .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-danger);color:var(--dfm-notification-icon-color-danger)}.dfm-notification.dfm-notification-info .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-info);color:var(--dfm-notification-icon-color-info)}.dfm-notification.dfm-notification-warning .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-warning);color:var(--dfm-notification-icon-color-warning)}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-notification', template: "<div\n  *ngIf=\"currentNotification\"\n  class=\"dfm-notification dfm-p-12\"\n  [ngClass]=\"{\n    'dfm-notification-success': currentNotification.type === notificationType.SUCCESS,\n    'dfm-notification-danger': currentNotification.type === notificationType.DANGER,\n    'dfm-notification-warning': currentNotification.type === notificationType.WARNING,\n    'dfm-notification-info': currentNotification.type === notificationType.INFO,\n    'dfm-notification-top-left': position === positionType.TOP_LEFT,\n    'dfm-notification-top-right': position === positionType.TOP_RIGHT,\n    'dfm-notification-bottom-right': position === positionType.BOTTOM_RIGHT,\n    'dfm-notification-bottom-left': position === positionType.BOTTOM_LEFT\n  }\"\n  (click)=\"hideAndShowNext()\"\n>\n  <div class=\"dfm-notification-icon\">\n    <div class=\"dfm-icon-wrapper dfm-p-10\">\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.DANGER && !iconName\" name=\"x-close\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.WARNING && !iconName\" name=\"alert-triangle\"> </dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.SUCCESS && !iconName\" name=\"check\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.INFO && !iconName\" name=\"info-circle\"></dfm-icon>\n      <dfm-icon *ngIf=\"iconName\" [name]=\"iconName\"></dfm-icon>\n    </div>\n  </div>\n  <div class=\"dfm-notification-content\">\n    <span *ngIf=\"currentNotification.headerText\" class=\"dfm-notification-header dfm-text-main-700\">\n      {{ currentNotification.headerText }}\n    </span>\n    <span *ngIf=\"currentNotification.bodyText\" class=\"dfm-notification-body dfm-text-main-500\">{{ currentNotification.bodyText }}</span>\n  </div>\n</div>\n", styles: [".dfm-notification{box-shadow:0 12px 16px -4px #10182814,0 4px 6px -2px #10182808;border-radius:8px;width:328px;position:absolute;z-index:99;cursor:pointer;display:flex;justify-content:center;align-items:center;background-color:var(--dfm-notification-bg)}.dfm-notification .dfm-notification-header{width:100%;font-family:Montserrat;font-style:normal;font-size:18px;line-height:28px;font-weight:500;display:inline-block}.dfm-notification .dfm-notification-content{display:flex;justify-content:center;align-items:center}.dfm-notification .dfm-icon-wrapper{width:40px;height:40px;border-radius:20px}.dfm-notification .dfm-icon-wrapper dfm-icon{width:20px;height:20px}.dfm-notification .dfm-notification-body{display:block;width:100%;display:inline-block;font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px}.dfm-notification .dfm-notification-content{width:256px;margin-left:8px;display:inline-block}.dfm-notification .dfm-notification-icon{display:inline-block;vertical-align:top}.dfm-notification.dfm-notification-top-left{top:42px;left:42px}.dfm-notification.dfm-notification-top-right{top:42px;right:42px}.dfm-notification.dfm-notification-bottom-left{bottom:42px;left:42px}.dfm-notification.dfm-notification-bottom-right{bottom:42px;right:42px}.dfm-notification.dfm-notification-success .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-success);color:var(--dfm-notification-icon-color-success)}.dfm-notification.dfm-notification-danger .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-danger);color:var(--dfm-notification-icon-color-danger)}.dfm-notification.dfm-notification-info .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-info);color:var(--dfm-notification-icon-color-info)}.dfm-notification.dfm-notification-warning .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-warning);color:var(--dfm-notification-icon-color-warning)}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.NotificationService }]; }, propDecorators: { position: [{
                type: Input
            }], iconName: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2RpZmxleG1vLWFuZ3VsYXItZGVzaWduL3NyYy9saWIvZGVzaWduLXN5c3RlbS9tb2R1bGVzL25vdGlmaWNhdGlvbi9jb21wb25lbnRzL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZGlmbGV4bW8tYW5ndWxhci1kZXNpZ24vc3JjL2xpYi9kZXNpZ24tc3lzdGVtL21vZHVsZXMvbm90aWZpY2F0aW9uL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uL25vdGlmaWNhdGlvbi5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUMxQyxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzFELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDOzs7OztBQVNsRSxNQUFNLE9BQU8scUJBQXFCO0lBbUJoQyxZQUFvQixtQkFBd0M7UUFBeEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQWpCckQsYUFBUSxHQUFpQixZQUFZLENBQUMsWUFBWSxDQUFDO1FBSzFDLHdCQUFtQixHQUFXLENBQUMsQ0FBQztRQUl6QyxxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUVwQyxpQkFBWSxHQUFHLFlBQVksQ0FBQztRQUUzQixrQkFBYSxHQUEyQixFQUFFLENBQUM7UUFFM0MsZUFBVSxHQUFxQixJQUFJLE9BQU8sRUFBVyxDQUFDO0lBRUMsQ0FBQztJQUV6RCxRQUFRO1FBQ2IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ2xHLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQzlCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDLENBQUMsY0FBYztJQUN4QyxDQUFDO0lBRU0sZUFBZTtRQUNwQixJQUFJLENBQUMsbUJBQW1CLEdBQUcsU0FBUyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTyxvQkFBb0I7UUFDMUIsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDakMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUEwQixDQUFDO1lBQzlFLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxFQUFFO2dCQUNwQyxVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNkLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztnQkFDekIsQ0FBQyxFQUFFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsQ0FBQzthQUNyQztTQUNGO0lBQ0gsQ0FBQztJQUVNLFdBQVc7UUFDaEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7bUhBL0NVLHFCQUFxQjt1R0FBckIscUJBQXFCLGdIQ1psQyw2eERBK0JBOzRGRG5CYSxxQkFBcUI7a0JBTGpDLFNBQVM7K0JBQ0Usa0JBQWtCOzBHQU1yQixRQUFRO3NCQURkLEtBQUs7Z0JBSUMsUUFBUTtzQkFEZCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ViamVjdCwgdGFrZVVudGlsIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9zaXRpb25UeXBlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL3Bvc2l0aW9uLXR5cGUnO1xuaW1wb3J0IHsgTm90aWZpY2F0aW9uVHlwZSB9IGZyb20gJy4uLy4uL21vZGVscy9ub3RpZmljYXRpb24tdHlwZSc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvbm90aWZpY2F0aW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGlmbGV4bW9Ob3RpZmljYXRpb24gfSBmcm9tICcuLi8uLi9tb2RlbHMvZGlmbGV4bW8tbm90aWZpY2F0aW9uJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZGZtLW5vdGlmaWNhdGlvbicsXG4gIHRlbXBsYXRlVXJsOiAnLi9ub3RpZmljYXRpb24uY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgTm90aWZpY2F0aW9uQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBASW5wdXQoKVxuICBwdWJsaWMgcG9zaXRpb246IFBvc2l0aW9uVHlwZSA9IFBvc2l0aW9uVHlwZS5CT1RUT01fUklHSFQ7XG5cbiAgQElucHV0KClcbiAgcHVibGljIGljb25OYW1lOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG5cbiAgcHVibGljIHJlYWRvbmx5IHRpbWVUb1Nob3dJblNlY29uZHM6IG51bWJlciA9IDQ7XG5cbiAgcHVibGljIGN1cnJlbnROb3RpZmljYXRpb24/OiBEaWZsZXhtb05vdGlmaWNhdGlvbjtcblxuICBwdWJsaWMgbm90aWZpY2F0aW9uVHlwZSA9IE5vdGlmaWNhdGlvblR5cGU7XG5cbiAgcHVibGljIHBvc2l0aW9uVHlwZSA9IFBvc2l0aW9uVHlwZTtcblxuICBwcml2YXRlIG5vdGlmaWNhdGlvbnM6IERpZmxleG1vTm90aWZpY2F0aW9uW10gPSBbXTtcblxuICBwcml2YXRlIHRha2VVbnRpbCQ6IFN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgU3ViamVjdDxib29sZWFuPigpO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbm90aWZpY2F0aW9uU2VydmljZTogTm90aWZpY2F0aW9uU2VydmljZSkge31cblxuICBwdWJsaWMgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5ub3RpZmljYXRpb25TZXJ2aWNlLm5vdGlmaWNhdGlvbnMkLnBpcGUodGFrZVVudGlsKHRoaXMudGFrZVVudGlsJCkpLnN1YnNjcmliZSgobm90aWZpY2F0aW9uKSA9PiB7XG4gICAgICB0aGlzLm5vdGlmaWNhdGlvbnMucHVzaChub3RpZmljYXRpb24pO1xuICAgICAgdGhpcy5zaG93TmV4dE5vdGlmaWNhdGlvbigpO1xuICAgIH0pO1xuICAgIHRoaXMuaGlkZUFuZFNob3dOZXh0KCk7IC8vIFRPRE8gcmVtb3ZlXG4gIH1cblxuICBwdWJsaWMgaGlkZUFuZFNob3dOZXh0KCk6IHZvaWQge1xuICAgIHRoaXMuY3VycmVudE5vdGlmaWNhdGlvbiA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnNob3dOZXh0Tm90aWZpY2F0aW9uKCk7XG4gIH1cblxuICBwcml2YXRlIHNob3dOZXh0Tm90aWZpY2F0aW9uKCk6IHZvaWQge1xuICAgIGlmICh0aGlzLm5vdGlmaWNhdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5jdXJyZW50Tm90aWZpY2F0aW9uID0gdGhpcy5ub3RpZmljYXRpb25zLnNoaWZ0KCkgYXMgRGlmbGV4bW9Ob3RpZmljYXRpb247XG4gICAgICBpZiAoIXRoaXMuY3VycmVudE5vdGlmaWNhdGlvbi5zdGlja3kpIHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5oaWRlQW5kU2hvd05leHQoKTtcbiAgICAgICAgfSwgdGhpcy50aW1lVG9TaG93SW5TZWNvbmRzICogMTAwMCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMudGFrZVVudGlsJC5uZXh0KHRydWUpO1xuICB9XG59XG4iLCI8ZGl2XG4gICpuZ0lmPVwiY3VycmVudE5vdGlmaWNhdGlvblwiXG4gIGNsYXNzPVwiZGZtLW5vdGlmaWNhdGlvbiBkZm0tcC0xMlwiXG4gIFtuZ0NsYXNzXT1cIntcbiAgICAnZGZtLW5vdGlmaWNhdGlvbi1zdWNjZXNzJzogY3VycmVudE5vdGlmaWNhdGlvbi50eXBlID09PSBub3RpZmljYXRpb25UeXBlLlNVQ0NFU1MsXG4gICAgJ2RmbS1ub3RpZmljYXRpb24tZGFuZ2VyJzogY3VycmVudE5vdGlmaWNhdGlvbi50eXBlID09PSBub3RpZmljYXRpb25UeXBlLkRBTkdFUixcbiAgICAnZGZtLW5vdGlmaWNhdGlvbi13YXJuaW5nJzogY3VycmVudE5vdGlmaWNhdGlvbi50eXBlID09PSBub3RpZmljYXRpb25UeXBlLldBUk5JTkcsXG4gICAgJ2RmbS1ub3RpZmljYXRpb24taW5mbyc6IGN1cnJlbnROb3RpZmljYXRpb24udHlwZSA9PT0gbm90aWZpY2F0aW9uVHlwZS5JTkZPLFxuICAgICdkZm0tbm90aWZpY2F0aW9uLXRvcC1sZWZ0JzogcG9zaXRpb24gPT09IHBvc2l0aW9uVHlwZS5UT1BfTEVGVCxcbiAgICAnZGZtLW5vdGlmaWNhdGlvbi10b3AtcmlnaHQnOiBwb3NpdGlvbiA9PT0gcG9zaXRpb25UeXBlLlRPUF9SSUdIVCxcbiAgICAnZGZtLW5vdGlmaWNhdGlvbi1ib3R0b20tcmlnaHQnOiBwb3NpdGlvbiA9PT0gcG9zaXRpb25UeXBlLkJPVFRPTV9SSUdIVCxcbiAgICAnZGZtLW5vdGlmaWNhdGlvbi1ib3R0b20tbGVmdCc6IHBvc2l0aW9uID09PSBwb3NpdGlvblR5cGUuQk9UVE9NX0xFRlRcbiAgfVwiXG4gIChjbGljayk9XCJoaWRlQW5kU2hvd05leHQoKVwiXG4+XG4gIDxkaXYgY2xhc3M9XCJkZm0tbm90aWZpY2F0aW9uLWljb25cIj5cbiAgICA8ZGl2IGNsYXNzPVwiZGZtLWljb24td3JhcHBlciBkZm0tcC0xMFwiPlxuICAgICAgPGRmbS1pY29uICpuZ0lmPVwiY3VycmVudE5vdGlmaWNhdGlvbi50eXBlID09PSBub3RpZmljYXRpb25UeXBlLkRBTkdFUiAmJiAhaWNvbk5hbWVcIiBuYW1lPVwieC1jbG9zZVwiPjwvZGZtLWljb24+XG4gICAgICA8ZGZtLWljb24gKm5nSWY9XCJjdXJyZW50Tm90aWZpY2F0aW9uLnR5cGUgPT09IG5vdGlmaWNhdGlvblR5cGUuV0FSTklORyAmJiAhaWNvbk5hbWVcIiBuYW1lPVwiYWxlcnQtdHJpYW5nbGVcIj4gPC9kZm0taWNvbj5cbiAgICAgIDxkZm0taWNvbiAqbmdJZj1cImN1cnJlbnROb3RpZmljYXRpb24udHlwZSA9PT0gbm90aWZpY2F0aW9uVHlwZS5TVUNDRVNTICYmICFpY29uTmFtZVwiIG5hbWU9XCJjaGVja1wiPjwvZGZtLWljb24+XG4gICAgICA8ZGZtLWljb24gKm5nSWY9XCJjdXJyZW50Tm90aWZpY2F0aW9uLnR5cGUgPT09IG5vdGlmaWNhdGlvblR5cGUuSU5GTyAmJiAhaWNvbk5hbWVcIiBuYW1lPVwiaW5mby1jaXJjbGVcIj48L2RmbS1pY29uPlxuICAgICAgPGRmbS1pY29uICpuZ0lmPVwiaWNvbk5hbWVcIiBbbmFtZV09XCJpY29uTmFtZVwiPjwvZGZtLWljb24+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiZGZtLW5vdGlmaWNhdGlvbi1jb250ZW50XCI+XG4gICAgPHNwYW4gKm5nSWY9XCJjdXJyZW50Tm90aWZpY2F0aW9uLmhlYWRlclRleHRcIiBjbGFzcz1cImRmbS1ub3RpZmljYXRpb24taGVhZGVyIGRmbS10ZXh0LW1haW4tNzAwXCI+XG4gICAgICB7eyBjdXJyZW50Tm90aWZpY2F0aW9uLmhlYWRlclRleHQgfX1cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gKm5nSWY9XCJjdXJyZW50Tm90aWZpY2F0aW9uLmJvZHlUZXh0XCIgY2xhc3M9XCJkZm0tbm90aWZpY2F0aW9uLWJvZHkgZGZtLXRleHQtbWFpbi01MDBcIj57eyBjdXJyZW50Tm90aWZpY2F0aW9uLmJvZHlUZXh0IH19PC9zcGFuPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19
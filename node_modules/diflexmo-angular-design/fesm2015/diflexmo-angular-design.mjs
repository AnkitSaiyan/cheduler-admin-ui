import * as i0 from '@angular/core';
import { Component, Input, NgModule, Injectable, forwardRef, EventEmitter, Output, ViewChild, Optional, ContentChild, Directive, ElementRef, ViewChildren, HostListener } from '@angular/core';
import * as i1$1 from '@angular/common';
import { CommonModule } from '@angular/common';
import * as i1 from 'angular-svg-icon';
import { AngularSvgIconModule } from 'angular-svg-icon';
import { HttpClientModule } from '@angular/common/http';
import * as i2$2 from 'angular-svg-icon-preloader';
import { AngularSvgIconPreloaderModule } from 'angular-svg-icon-preloader';
import { Subject, takeUntil, debounceTime } from 'rxjs';
import * as i1$2 from '@angular/forms';
import { NG_VALUE_ACCESSOR, FormsModule, ReactiveFormsModule, FormGroup, FormControl } from '@angular/forms';
import moment from 'moment';
import * as i2 from 'angular-resize-event';
import { AngularResizeEventModule } from 'angular-resize-event';
import { Dropdown, Tooltip } from 'bootstrap';
import * as i2$1 from '@angular/router';
import { RouterModule } from '@angular/router';
import * as i1$3 from '@ngx-translate/core';
import { TranslateModule } from '@ngx-translate/core';
import { debounceTime as debounceTime$1, map } from 'rxjs/operators';

var iconImageFiles = [
    {
        iconName: "activity",
        iconPath: "/assets/icons/activity.svg"
    },
    {
        iconName: "alert-circle",
        iconPath: "/assets/icons/alert-circle.svg"
    },
    {
        iconName: "alert-hexagon",
        iconPath: "/assets/icons/alert-hexagon.svg"
    },
    {
        iconName: "alert-triangle",
        iconPath: "/assets/icons/alert-triangle.svg"
    },
    {
        iconName: "anchor",
        iconPath: "/assets/icons/anchor.svg"
    },
    {
        iconName: "arrow-down",
        iconPath: "/assets/icons/arrow-down.svg"
    },
    {
        iconName: "arrow-left",
        iconPath: "/assets/icons/arrow-left.svg"
    },
    {
        iconName: "arrow-right",
        iconPath: "/assets/icons/arrow-right.svg"
    },
    {
        iconName: "arrow-up",
        iconPath: "/assets/icons/arrow-up.svg"
    },
    {
        iconName: "bar-chart-07",
        iconPath: "/assets/icons/bar-chart-07.svg"
    },
    {
        iconName: "bell-03",
        iconPath: "/assets/icons/bell-03.svg"
    },
    {
        iconName: "calendar-check-01",
        iconPath: "/assets/icons/calendar-check-01.svg"
    },
    {
        iconName: "calendar-date",
        iconPath: "/assets/icons/calendar-date.svg"
    },
    {
        iconName: "check",
        iconPath: "/assets/icons/check.svg"
    },
    {
        iconName: "check-circle",
        iconPath: "/assets/icons/check-circle.svg"
    },
    {
        iconName: "check-circle-broken",
        iconPath: "/assets/icons/check-circle-broken.svg"
    },
    {
        iconName: "chevron-down",
        iconPath: "/assets/icons/chevron-down.svg"
    },
    {
        iconName: "chevron-left",
        iconPath: "/assets/icons/chevron-left.svg"
    },
    {
        iconName: "chevron-right",
        iconPath: "/assets/icons/chevron-right.svg"
    },
    {
        iconName: "clock-rewind",
        iconPath: "/assets/icons/clock-rewind.svg"
    },
    {
        iconName: "copy-03",
        iconPath: "/assets/icons/copy-03.svg"
    },
    {
        iconName: "copy-06",
        iconPath: "/assets/icons/copy-06.svg"
    },
    {
        iconName: "dots-grid",
        iconPath: "/assets/icons/dots-grid.svg"
    },
    {
        iconName: "drag",
        iconPath: "/assets/icons/drag.svg"
    },
    {
        iconName: "file-06",
        iconPath: "/assets/icons/file-06.svg"
    },
    {
        iconName: "filter-funnel-01",
        iconPath: "/assets/icons/filter-funnel-01.svg"
    },
    {
        iconName: "filter-funnel-01-fill",
        iconPath: "/assets/icons/filter-funnel-01-fill.svg"
    },
    {
        iconName: "help-circle",
        iconPath: "/assets/icons/help-circle.svg"
    },
    {
        iconName: "home-03",
        iconPath: "/assets/icons/home-03.svg"
    },
    {
        iconName: "info-circle",
        iconPath: "/assets/icons/info-circle.svg"
    },
    {
        iconName: "key-01",
        iconPath: "/assets/icons/key-01.svg"
    },
    {
        iconName: "layout-alt-02",
        iconPath: "/assets/icons/layout-alt-02.svg"
    },
    {
        iconName: "line-chart-up-01",
        iconPath: "/assets/icons/line-chart-up-01.svg"
    },
    {
        iconName: "list",
        iconPath: "/assets/icons/list.svg"
    },
    {
        iconName: "mail-05",
        iconPath: "/assets/icons/mail-05.svg"
    },
    {
        iconName: "map-01",
        iconPath: "/assets/icons/map-01.svg"
    },
    {
        iconName: "maximize-01",
        iconPath: "/assets/icons/maximize-01.svg"
    },
    {
        iconName: "message-text-square-01",
        iconPath: "/assets/icons/message-text-square-01.svg"
    },
    {
        iconName: "minimize-01",
        iconPath: "/assets/icons/minimize-01.svg"
    },
    {
        iconName: "minus",
        iconPath: "/assets/icons/minus.svg"
    },
    {
        iconName: "notification-text",
        iconPath: "/assets/icons/notification-text.svg"
    },
    {
        iconName: "package-x",
        iconPath: "/assets/icons/package-x.svg"
    },
    {
        iconName: "passcode-lock",
        iconPath: "/assets/icons/passcode-lock.svg"
    },
    {
        iconName: "passport",
        iconPath: "/assets/icons/passport.svg"
    },
    {
        iconName: "pencil-02",
        iconPath: "/assets/icons/pencil-02.svg"
    },
    {
        iconName: "placeholder",
        iconPath: "/assets/icons/placeholder.svg"
    },
    {
        iconName: "plus",
        iconPath: "/assets/icons/plus.svg"
    },
    {
        iconName: "route-01",
        iconPath: "/assets/icons/route-01.svg"
    },
    {
        iconName: "reverse-right",
        iconPath: "/assets/icons/reverse-right.svg"
    },
    {
        iconName: "rocket-02",
        iconPath: "/assets/icons/rocket-02.svg"
    },
    {
        iconName: "save-01",
        iconPath: "/assets/icons/save-01.svg"
    },
    {
        iconName: "search-sm",
        iconPath: "/assets/icons/search-sm.svg"
    },
    {
        iconName: "search-lg",
        iconPath: "/assets/icons/search-lg.svg"
    },
    {
        iconName: "settings-01",
        iconPath: "/assets/icons/settings-01.svg"
    },
    {
        iconName: "speedometer-02",
        iconPath: "/assets/icons/speedometer-02.svg"
    },
    {
        iconName: "tool-02",
        iconPath: "/assets/icons/tool-02.svg"
    },
    {
        iconName: "trash-01",
        iconPath: "/assets/icons/trash-01.svg"
    },
    {
        iconName: "user-01",
        iconPath: "/assets/icons/user-01.svg"
    },
    {
        iconName: "x-close",
        iconPath: "/assets/icons/x-close.svg"
    },
    {
        iconName: "zoom-in",
        iconPath: "/assets/icons/zoom-in.svg"
    },
    {
        iconName: "zoom-out",
        iconPath: "/assets/icons/zoom-out.svg"
    },
    {
        iconName: "radio-circle",
        iconPath: "/assets/icons/radio-circle.svg"
    },
    {
        iconName: "question",
        iconPath: "/assets/icons/question.svg"
    }
];
var customIcons = [];
var iconsConfig = {
    iconImageFiles: iconImageFiles,
    customIcons: customIcons
};

class IconComponent {
    constructor() {
        this.name = '';
    }
}
IconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
IconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: IconComponent, selector: "dfm-icon", inputs: { name: "name" }, ngImport: i0, template: "<svg-icon [name]=\"name\" svgClass=\"svg-icon\"></svg-icon>\n", styles: [".svg-icon{width:100%;height:100%;vertical-align:top}\n"], dependencies: [{ kind: "component", type: i1.SvgIconComponent, selector: "svg-icon", inputs: ["src", "name", "stretch", "applyClass", "applyCss", "svgClass", "class", "viewBox", "svgAriaLabel", "svgStyle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-icon', template: "<svg-icon [name]=\"name\" svgClass=\"svg-icon\"></svg-icon>\n", styles: [".svg-icon{width:100%;height:100%;vertical-align:top}\n"] }]
        }], propDecorators: { name: [{
                type: Input
            }] } });

class CardComponent {
    constructor() {
        this.title = '';
    }
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: CardComponent, selector: "dfm-card", inputs: { title: "title" }, ngImport: i0, template: `
    <div class="dfm-card">
      <div class="dfm-card-header">
        <div class="dfm-card-title d-flex dfm-gap-8">
          <div class="dfm-card-icon drag-handler">
            <dfm-icon name="drag"></dfm-icon>
          </div>
          {{ title }}
        </div>
        <div>
          <ng-content select="[toolbar]"></ng-content>
        </div>
      </div>

      <div class="dfm-card-body-no-gutter">
        <ng-content></ng-content>
      </div>
    </div>
  `, isInline: true, styles: [".dfm-card{background-color:var(--dfm-card-bg);box-shadow:0 1px 2px #1018280f;border-radius:20px;width:100%}.dfm-card>.dfm-card-header{display:flex;justify-content:space-between;align-items:stretch;flex-wrap:wrap;padding:16px;margin-bottom:0;background-color:transparent;position:relative}.dfm-card-header>.dfm-card-title{align-items:center;font-family:Montserrat;font-style:normal;font-weight:500;font-size:16px;line-height:24px;color:var(--dfm-card-title-color)}.dfm-card-title>.dfm-card-icon{color:var(--dfm-card-icon-color);cursor:pointer}.dfm-card>.dfm-card-body{padding-left:16px;padding-bottom:35px;padding-right:16px;word-wrap:break-word}.dfm-card>.dfm-card-body-no-gutter{word-wrap:break-word;height:calc(100% - 56px);border-bottom-left-radius:20px;border-bottom-right-radius:20px;overflow:hidden}:host{display:flex;align-items:stretch;height:100%;width:100%;min-height:134px}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-card', template: `
    <div class="dfm-card">
      <div class="dfm-card-header">
        <div class="dfm-card-title d-flex dfm-gap-8">
          <div class="dfm-card-icon drag-handler">
            <dfm-icon name="drag"></dfm-icon>
          </div>
          {{ title }}
        </div>
        <div>
          <ng-content select="[toolbar]"></ng-content>
        </div>
      </div>

      <div class="dfm-card-body-no-gutter">
        <ng-content></ng-content>
      </div>
    </div>
  `, styles: [".dfm-card{background-color:var(--dfm-card-bg);box-shadow:0 1px 2px #1018280f;border-radius:20px;width:100%}.dfm-card>.dfm-card-header{display:flex;justify-content:space-between;align-items:stretch;flex-wrap:wrap;padding:16px;margin-bottom:0;background-color:transparent;position:relative}.dfm-card-header>.dfm-card-title{align-items:center;font-family:Montserrat;font-style:normal;font-weight:500;font-size:16px;line-height:24px;color:var(--dfm-card-title-color)}.dfm-card-title>.dfm-card-icon{color:var(--dfm-card-icon-color);cursor:pointer}.dfm-card>.dfm-card-body{padding-left:16px;padding-bottom:35px;padding-right:16px;word-wrap:break-word}.dfm-card>.dfm-card-body-no-gutter{word-wrap:break-word;height:calc(100% - 56px);border-bottom-left-radius:20px;border-bottom-right-radius:20px;overflow:hidden}:host{display:flex;align-items:stretch;height:100%;width:100%;min-height:134px}\n"] }]
        }], propDecorators: { title: [{
                type: Input
            }] } });

class FeaturedIconComponent {
    constructor() {
        this.name = '';
        this.size = 'md';
        this.color = 'primary';
        this.theme = 'light-circle';
    }
}
FeaturedIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FeaturedIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
FeaturedIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: FeaturedIconComponent, selector: "dfm-featured-icon", inputs: { name: "name", size: "size", color: "color", theme: "theme" }, ngImport: i0, template: "<div class=\"dfm-featured-icon dfm-featured-icon-{{ color }} dfm-featured-icon-{{ theme }} dfm-featured-icon-{{ size }}\">\n  <svg-icon [name]=\"name\" svgClass=\"icon d-block\"></svg-icon>\n</div>\n", styles: [".dfm-featured-icon{display:flex;align-items:center;justify-content:center;border-radius:50%;border-style:solid;border-width:0}.dfm-featured-icon-xs{width:24px;height:24px}.dfm-featured-icon-xs.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-xs.dfm-featured-icon-dark-circle{border-width:2px;width:25px;height:25px}.dfm-featured-icon-xs .icon{width:12px;height:12px}.dfm-featured-icon-sm{width:32px;height:32px}.dfm-featured-icon-sm.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-sm.dfm-featured-icon-dark-circle{border-width:4px;width:34px;height:34px}.dfm-featured-icon-sm .icon{width:16px;height:16px}.dfm-featured-icon-md{width:40px;height:40px}.dfm-featured-icon-md.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-md.dfm-featured-icon-dark-circle{border-width:6px;width:43px;height:43px}.dfm-featured-icon-md .icon{width:20px;height:20px}.dfm-featured-icon-lg{width:48px;height:48px}.dfm-featured-icon-lg.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-lg.dfm-featured-icon-dark-circle{border-width:8px;width:52px;height:52px}.dfm-featured-icon-lg .icon{width:24px;height:24px}.dfm-featured-icon-xl{width:56px;height:56px}.dfm-featured-icon-xl.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-xl.dfm-featured-icon-dark-circle{width:61px;height:61px;border-width:10px}.dfm-featured-icon-xl .icon{width:28px;height:28px}.dfm-featured-icon-primary{background-color:var(--dfm-featured-icon-primary-bg);color:var(--dfm-featured-icon-primary-color)}.dfm-featured-icon-primary.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-primary-light-circle-outline-border-color)}.dfm-featured-icon-primary.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-primary-dark-circle-bg);color:var(--dfm-featured-icon-primary-dark-circle-color);border-color:var(--dfm-featured-icon-primary-dark-circle-border-color)}.dfm-featured-icon-gray{background-color:var(--dfm-featured-icon-gray-bg);color:var(--dfm-featured-icon-gray-color)}.dfm-featured-icon-gray.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-gray-light-circle-outline-border-color)}.dfm-featured-icon-gray.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-gray-dark-circle-bg);color:var(--dfm-featured-icon-gray-dark-circle-color);border-color:var(--dfm-featured-icon-gray-dark-circle-border-color)}.dfm-featured-icon-error{background-color:var(--dfm-featured-icon-error-bg);color:var(--dfm-featured-icon-error-color)}.dfm-featured-icon-error.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-error-light-circle-outline-border-color)}.dfm-featured-icon-error.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-error-dark-circle-bg);color:var(--dfm-featured-icon-error-dark-circle-color);border-color:var(--dfm-featured-icon-error-dark-circle-border-color)}.dfm-featured-icon-warning{background-color:var(--dfm-featured-icon-warning-bg);color:var(--dfm-featured-icon-warning-color)}.dfm-featured-icon-warning.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-warning-light-circle-outline-border-color)}.dfm-featured-icon-warning.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-warning-dark-circle-bg);color:var(--dfm-featured-icon-warning-dark-circle-color);border-color:var(--dfm-featured-icon-warning-dark-circle-border-color)}.dfm-featured-icon-success{background-color:var(--dfm-featured-icon-success-bg);color:var(--dfm-featured-icon-success-color)}.dfm-featured-icon-success.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-success-light-circle-outline-border-color)}.dfm-featured-icon-success.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-success-dark-circle-bg);color:var(--dfm-featured-icon-success-dark-circle-color);border-color:var(--dfm-featured-icon-success-dark-circle-border-color)}\n"], dependencies: [{ kind: "component", type: i1.SvgIconComponent, selector: "svg-icon", inputs: ["src", "name", "stretch", "applyClass", "applyCss", "svgClass", "class", "viewBox", "svgAriaLabel", "svgStyle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: FeaturedIconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-featured-icon', template: "<div class=\"dfm-featured-icon dfm-featured-icon-{{ color }} dfm-featured-icon-{{ theme }} dfm-featured-icon-{{ size }}\">\n  <svg-icon [name]=\"name\" svgClass=\"icon d-block\"></svg-icon>\n</div>\n", styles: [".dfm-featured-icon{display:flex;align-items:center;justify-content:center;border-radius:50%;border-style:solid;border-width:0}.dfm-featured-icon-xs{width:24px;height:24px}.dfm-featured-icon-xs.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-xs.dfm-featured-icon-dark-circle{border-width:2px;width:25px;height:25px}.dfm-featured-icon-xs .icon{width:12px;height:12px}.dfm-featured-icon-sm{width:32px;height:32px}.dfm-featured-icon-sm.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-sm.dfm-featured-icon-dark-circle{border-width:4px;width:34px;height:34px}.dfm-featured-icon-sm .icon{width:16px;height:16px}.dfm-featured-icon-md{width:40px;height:40px}.dfm-featured-icon-md.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-md.dfm-featured-icon-dark-circle{border-width:6px;width:43px;height:43px}.dfm-featured-icon-md .icon{width:20px;height:20px}.dfm-featured-icon-lg{width:48px;height:48px}.dfm-featured-icon-lg.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-lg.dfm-featured-icon-dark-circle{border-width:8px;width:52px;height:52px}.dfm-featured-icon-lg .icon{width:24px;height:24px}.dfm-featured-icon-xl{width:56px;height:56px}.dfm-featured-icon-xl.dfm-featured-icon-light-circle-outline,.dfm-featured-icon-xl.dfm-featured-icon-dark-circle{width:61px;height:61px;border-width:10px}.dfm-featured-icon-xl .icon{width:28px;height:28px}.dfm-featured-icon-primary{background-color:var(--dfm-featured-icon-primary-bg);color:var(--dfm-featured-icon-primary-color)}.dfm-featured-icon-primary.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-primary-light-circle-outline-border-color)}.dfm-featured-icon-primary.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-primary-dark-circle-bg);color:var(--dfm-featured-icon-primary-dark-circle-color);border-color:var(--dfm-featured-icon-primary-dark-circle-border-color)}.dfm-featured-icon-gray{background-color:var(--dfm-featured-icon-gray-bg);color:var(--dfm-featured-icon-gray-color)}.dfm-featured-icon-gray.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-gray-light-circle-outline-border-color)}.dfm-featured-icon-gray.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-gray-dark-circle-bg);color:var(--dfm-featured-icon-gray-dark-circle-color);border-color:var(--dfm-featured-icon-gray-dark-circle-border-color)}.dfm-featured-icon-error{background-color:var(--dfm-featured-icon-error-bg);color:var(--dfm-featured-icon-error-color)}.dfm-featured-icon-error.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-error-light-circle-outline-border-color)}.dfm-featured-icon-error.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-error-dark-circle-bg);color:var(--dfm-featured-icon-error-dark-circle-color);border-color:var(--dfm-featured-icon-error-dark-circle-border-color)}.dfm-featured-icon-warning{background-color:var(--dfm-featured-icon-warning-bg);color:var(--dfm-featured-icon-warning-color)}.dfm-featured-icon-warning.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-warning-light-circle-outline-border-color)}.dfm-featured-icon-warning.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-warning-dark-circle-bg);color:var(--dfm-featured-icon-warning-dark-circle-color);border-color:var(--dfm-featured-icon-warning-dark-circle-border-color)}.dfm-featured-icon-success{background-color:var(--dfm-featured-icon-success-bg);color:var(--dfm-featured-icon-success-color)}.dfm-featured-icon-success.dfm-featured-icon-light-circle-outline{border-color:var(--dfm-featured-icon-success-light-circle-outline-border-color)}.dfm-featured-icon-success.dfm-featured-icon-dark-circle{background-color:var(--dfm-featured-icon-success-dark-circle-bg);color:var(--dfm-featured-icon-success-dark-circle-color);border-color:var(--dfm-featured-icon-success-dark-circle-border-color)}\n"] }]
        }], propDecorators: { name: [{
                type: Input
            }], size: [{
                type: Input
            }], color: [{
                type: Input
            }], theme: [{
                type: Input
            }] } });

class IconModule {
}
IconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: IconModule, declarations: [IconComponent, FeaturedIconComponent], imports: [CommonModule, AngularSvgIconModule, AngularSvgIconPreloaderModule, HttpClientModule], exports: [IconComponent, FeaturedIconComponent] });
IconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconModule, imports: [CommonModule, AngularSvgIconModule, AngularSvgIconPreloaderModule, HttpClientModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [IconComponent, FeaturedIconComponent],
                    imports: [CommonModule, AngularSvgIconModule, AngularSvgIconPreloaderModule, HttpClientModule],
                    exports: [IconComponent, FeaturedIconComponent],
                }]
        }] });

class CardModule {
}
CardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: CardModule, declarations: [CardComponent], imports: [CommonModule, IconModule], exports: [CardComponent] });
CardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CardModule, imports: [CommonModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CardModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [CardComponent],
                    imports: [CommonModule, IconModule],
                    exports: [CardComponent],
                }]
        }] });

var PositionType;
(function (PositionType) {
    PositionType[PositionType["TOP_LEFT"] = 0] = "TOP_LEFT";
    PositionType[PositionType["BOTTOM_LEFT"] = 1] = "BOTTOM_LEFT";
    PositionType[PositionType["TOP_RIGHT"] = 2] = "TOP_RIGHT";
    PositionType[PositionType["BOTTOM_RIGHT"] = 3] = "BOTTOM_RIGHT";
})(PositionType || (PositionType = {}));

var NotificationType;
(function (NotificationType) {
    NotificationType[NotificationType["SUCCESS"] = 0] = "SUCCESS";
    NotificationType[NotificationType["DANGER"] = 1] = "DANGER";
    NotificationType[NotificationType["WARNING"] = 2] = "WARNING";
    NotificationType[NotificationType["INFO"] = 3] = "INFO";
})(NotificationType || (NotificationType = {}));

class NotificationService {
    constructor() {
        this.notificationsSubject = new Subject();
        this.notifications$ = this.notificationsSubject.asObservable();
    }
    addNotification(notification) {
        this.notificationsSubject.next(notification);
    }
}
NotificationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
NotificationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });

class NotificationComponent {
    constructor(notificationService) {
        this.notificationService = notificationService;
        this.position = PositionType.BOTTOM_RIGHT;
        this.timeToShowInSeconds = 4;
        this.notificationType = NotificationType;
        this.positionType = PositionType;
        this.notifications = [];
        this.takeUntil$ = new Subject();
    }
    ngOnInit() {
        this.notificationService.notifications$.pipe(takeUntil(this.takeUntil$)).subscribe((notification) => {
            this.notifications.push(notification);
            this.showNextNotification();
        });
        this.hideAndShowNext(); // TODO remove
    }
    hideAndShowNext() {
        this.currentNotification = undefined;
        this.showNextNotification();
    }
    showNextNotification() {
        if (this.notifications.length > 0) {
            this.currentNotification = this.notifications.shift();
            if (!this.currentNotification.sticky) {
                setTimeout(() => {
                    this.hideAndShowNext();
                }, this.timeToShowInSeconds * 1000);
            }
        }
    }
    ngOnDestroy() {
        this.takeUntil$.next(true);
    }
}
NotificationComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationComponent, deps: [{ token: NotificationService }], target: i0.ɵɵFactoryTarget.Component });
NotificationComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: NotificationComponent, selector: "dfm-notification", inputs: { position: "position", iconName: "iconName" }, ngImport: i0, template: "<div\n  *ngIf=\"currentNotification\"\n  class=\"dfm-notification dfm-p-12\"\n  [ngClass]=\"{\n    'dfm-notification-success': currentNotification.type === notificationType.SUCCESS,\n    'dfm-notification-danger': currentNotification.type === notificationType.DANGER,\n    'dfm-notification-warning': currentNotification.type === notificationType.WARNING,\n    'dfm-notification-info': currentNotification.type === notificationType.INFO,\n    'dfm-notification-top-left': position === positionType.TOP_LEFT,\n    'dfm-notification-top-right': position === positionType.TOP_RIGHT,\n    'dfm-notification-bottom-right': position === positionType.BOTTOM_RIGHT,\n    'dfm-notification-bottom-left': position === positionType.BOTTOM_LEFT\n  }\"\n  (click)=\"hideAndShowNext()\"\n>\n  <div class=\"dfm-notification-icon\">\n    <div class=\"dfm-icon-wrapper dfm-p-10\">\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.DANGER && !iconName\" name=\"x-close\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.WARNING && !iconName\" name=\"alert-triangle\"> </dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.SUCCESS && !iconName\" name=\"check\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.INFO && !iconName\" name=\"info-circle\"></dfm-icon>\n      <dfm-icon *ngIf=\"iconName\" [name]=\"iconName\"></dfm-icon>\n    </div>\n  </div>\n  <div class=\"dfm-notification-content\">\n    <span *ngIf=\"currentNotification.headerText\" class=\"dfm-notification-header dfm-text-main-700\">\n      {{ currentNotification.headerText }}\n    </span>\n    <span *ngIf=\"currentNotification.bodyText\" class=\"dfm-notification-body dfm-text-main-500\">{{ currentNotification.bodyText }}</span>\n  </div>\n</div>\n", styles: [".dfm-notification{box-shadow:0 12px 16px -4px #10182814,0 4px 6px -2px #10182808;border-radius:8px;width:328px;position:absolute;z-index:99;cursor:pointer;display:flex;justify-content:center;align-items:center;background-color:var(--dfm-notification-bg)}.dfm-notification .dfm-notification-header{width:100%;font-family:Montserrat;font-style:normal;font-size:18px;line-height:28px;font-weight:500;display:inline-block}.dfm-notification .dfm-notification-content{display:flex;justify-content:center;align-items:center}.dfm-notification .dfm-icon-wrapper{width:40px;height:40px;border-radius:20px}.dfm-notification .dfm-icon-wrapper dfm-icon{width:20px;height:20px}.dfm-notification .dfm-notification-body{display:block;width:100%;display:inline-block;font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px}.dfm-notification .dfm-notification-content{width:256px;margin-left:8px;display:inline-block}.dfm-notification .dfm-notification-icon{display:inline-block;vertical-align:top}.dfm-notification.dfm-notification-top-left{top:42px;left:42px}.dfm-notification.dfm-notification-top-right{top:42px;right:42px}.dfm-notification.dfm-notification-bottom-left{bottom:42px;left:42px}.dfm-notification.dfm-notification-bottom-right{bottom:42px;right:42px}.dfm-notification.dfm-notification-success .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-success);color:var(--dfm-notification-icon-color-success)}.dfm-notification.dfm-notification-danger .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-danger);color:var(--dfm-notification-icon-color-danger)}.dfm-notification.dfm-notification-info .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-info);color:var(--dfm-notification-icon-color-info)}.dfm-notification.dfm-notification-warning .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-warning);color:var(--dfm-notification-icon-color-warning)}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-notification', template: "<div\n  *ngIf=\"currentNotification\"\n  class=\"dfm-notification dfm-p-12\"\n  [ngClass]=\"{\n    'dfm-notification-success': currentNotification.type === notificationType.SUCCESS,\n    'dfm-notification-danger': currentNotification.type === notificationType.DANGER,\n    'dfm-notification-warning': currentNotification.type === notificationType.WARNING,\n    'dfm-notification-info': currentNotification.type === notificationType.INFO,\n    'dfm-notification-top-left': position === positionType.TOP_LEFT,\n    'dfm-notification-top-right': position === positionType.TOP_RIGHT,\n    'dfm-notification-bottom-right': position === positionType.BOTTOM_RIGHT,\n    'dfm-notification-bottom-left': position === positionType.BOTTOM_LEFT\n  }\"\n  (click)=\"hideAndShowNext()\"\n>\n  <div class=\"dfm-notification-icon\">\n    <div class=\"dfm-icon-wrapper dfm-p-10\">\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.DANGER && !iconName\" name=\"x-close\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.WARNING && !iconName\" name=\"alert-triangle\"> </dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.SUCCESS && !iconName\" name=\"check\"></dfm-icon>\n      <dfm-icon *ngIf=\"currentNotification.type === notificationType.INFO && !iconName\" name=\"info-circle\"></dfm-icon>\n      <dfm-icon *ngIf=\"iconName\" [name]=\"iconName\"></dfm-icon>\n    </div>\n  </div>\n  <div class=\"dfm-notification-content\">\n    <span *ngIf=\"currentNotification.headerText\" class=\"dfm-notification-header dfm-text-main-700\">\n      {{ currentNotification.headerText }}\n    </span>\n    <span *ngIf=\"currentNotification.bodyText\" class=\"dfm-notification-body dfm-text-main-500\">{{ currentNotification.bodyText }}</span>\n  </div>\n</div>\n", styles: [".dfm-notification{box-shadow:0 12px 16px -4px #10182814,0 4px 6px -2px #10182808;border-radius:8px;width:328px;position:absolute;z-index:99;cursor:pointer;display:flex;justify-content:center;align-items:center;background-color:var(--dfm-notification-bg)}.dfm-notification .dfm-notification-header{width:100%;font-family:Montserrat;font-style:normal;font-size:18px;line-height:28px;font-weight:500;display:inline-block}.dfm-notification .dfm-notification-content{display:flex;justify-content:center;align-items:center}.dfm-notification .dfm-icon-wrapper{width:40px;height:40px;border-radius:20px}.dfm-notification .dfm-icon-wrapper dfm-icon{width:20px;height:20px}.dfm-notification .dfm-notification-body{display:block;width:100%;display:inline-block;font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px}.dfm-notification .dfm-notification-content{width:256px;margin-left:8px;display:inline-block}.dfm-notification .dfm-notification-icon{display:inline-block;vertical-align:top}.dfm-notification.dfm-notification-top-left{top:42px;left:42px}.dfm-notification.dfm-notification-top-right{top:42px;right:42px}.dfm-notification.dfm-notification-bottom-left{bottom:42px;left:42px}.dfm-notification.dfm-notification-bottom-right{bottom:42px;right:42px}.dfm-notification.dfm-notification-success .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-success);color:var(--dfm-notification-icon-color-success)}.dfm-notification.dfm-notification-danger .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-danger);color:var(--dfm-notification-icon-color-danger)}.dfm-notification.dfm-notification-info .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-info);color:var(--dfm-notification-icon-color-info)}.dfm-notification.dfm-notification-warning .dfm-icon-wrapper{background-color:var(--dfm-notification-icon-bg-warning);color:var(--dfm-notification-icon-color-warning)}\n"] }]
        }], ctorParameters: function () { return [{ type: NotificationService }]; }, propDecorators: { position: [{
                type: Input
            }], iconName: [{
                type: Input
            }] } });

class NotificationModule {
}
NotificationModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NotificationModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: NotificationModule, declarations: [NotificationComponent], imports: [CommonModule, CardModule, IconModule], exports: [NotificationComponent] });
NotificationModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationModule, imports: [CommonModule, CardModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NotificationModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NotificationComponent],
                    exports: [NotificationComponent],
                    imports: [CommonModule, CardModule, IconModule],
                }]
        }] });

class BaseControlValueAccessor {
    constructor() {
        this.privateValue = '';
        this.disabled = false;
        this.onChange = () => { };
        this.onTouch = () => { };
    }
    set value(value) {
        this.privateValue = value;
        this.onTouch(value);
        this.onChange(value);
    }
    get value() {
        return this.privateValue;
    }
    writeValue(value) {
        this.value = value;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouch = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}

class BaseCheckboxComponent extends BaseControlValueAccessor {
    constructor() {
        super();
        this.label = '';
        this.hint = '';
        this.size = 'md';
        this.id = Math.random().toString(36).slice(2, 7);
        this.value = false;
    }
}
BaseCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BaseCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: BaseCheckboxComponent, selector: "dfm-base-checkbox", inputs: { label: "label", hint: "hint", size: "size" }, usesInheritance: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-base-checkbox', template: '' }]
        }], ctorParameters: function () { return []; }, propDecorators: { label: [{
                type: Input
            }], hint: [{
                type: Input
            }], size: [{
                type: Input
            }] } });

class RadioButtonComponent extends BaseCheckboxComponent {
    constructor() {
        super(...arguments);
        this.checkedValue = '';
    }
}
RadioButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
RadioButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: RadioButtonComponent, selector: "dfm-radio-button", inputs: { checkedValue: "checkedValue" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => RadioButtonComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input class=\"radio-button form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"radio\" [id]=\"id\" [value]=\"checkedValue\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1$2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1$2.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: RadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-radio-button', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => RadioButtonComponent),
                        },
                    ], template: "<div class=\"dfm-radio-button form-check dfm-radio-button-{{ size }}\">\n  <input class=\"radio-button form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"radio\" [id]=\"id\" [value]=\"checkedValue\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-radio-button.dfm-radio-button-sm{font-size:16px}.dfm-radio-button.dfm-radio-button-md{font-size:20px}.dfm-radio-button .radio-button{margin-top:2px}.dfm-radio-button .radio-button:hover{background-color:var(--dfm-radio-hover-bg);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:hover:checked{background-color:var(--dfm-radio-hover-bg)}.dfm-radio-button .radio-button:checked{background-color:var(--dfm-radio-checked-bg);background-image:var(--dfm-radio-bg-img-checked);border:1px solid var(--dfm-radio-hover-border)}.dfm-radio-button .radio-button:checked:disabled{background-image:var(--dfm-radio-bg-img-checked-disabled)}.dfm-radio-button .radio-button:disabled{background-color:var(--dfm-radio-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-radio-button .radio-button:hover{cursor:pointer}.dfm-radio-button .radio-button:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-radio-button label{cursor:pointer}\n"] }]
        }], propDecorators: { checkedValue: [{
                type: Input
            }] } });

class CheckboxComponent extends BaseCheckboxComponent {
    constructor() {
        super(...arguments);
        this.indeterminate = false;
    }
}
CheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CheckboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: CheckboxComponent, selector: "dfm-checkbox", inputs: { indeterminate: "indeterminate" }, providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => CheckboxComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-checkbox form-check dfm-checkbox-{{ size }}\" [class.disabled]=\"disabled\">\n  <input class=\"checkbox form-check-input\" [(ngModel)]=\"value\" [indeterminate]=\"indeterminate\" [disabled]=\"disabled\" type=\"checkbox\" [id]=\"id\" />\n  <label class=\"d-flex flex-column label-{{ size }}\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-checkbox.dfm-checkbox-sm{font-size:16px}.dfm-checkbox.dfm-checkbox-md{font-size:20px}.dfm-checkbox .checkbox{margin-top:2px}.dfm-checkbox .checkbox:hover{background-color:var(--dfm-checkbox-hover-bg);border:1px solid var(--dfm-checkbox-border-hover)}.dfm-checkbox .checkbox:hover:checked{background-color:var(--dfm-checkbox-hover-bg)}.dfm-checkbox .checkbox:checked{background-color:var(--dfm-checkbox-checked-bg);background-image:var(--dfm-checkbox-bg-img-checked)}.dfm-checkbox .checkbox:checked:disabled{background-image:var(--dfm-checkbox-bg-img-checked-disabled)}.dfm-checkbox .checkbox:disabled{background-color:var(--dfm-checkbox-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-checkbox .checkbox:hover{cursor:pointer}.dfm-checkbox .checkbox:focus{box-shadow:0 0 0 4px var(--dfm-checkbox-focus-shadow);border:1px solid var(--dfm-checkbox-focus-border)}.dfm-checkbox .checkbox:indeterminate{background-color:var(--dfm-checkbox-checked-bg);background-image:var(--dfm-checkbox-bg-img-indeterminate)}.dfm-checkbox .checkbox:indeterminate:disabled{background-color:var(--dfm-checkbox-disabled-bg);background-image:var(--dfm-checkbox-bg-img-indeterminate-disabled)}.dfm-checkbox:not(.disabled) label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1$2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: CheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-checkbox', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => CheckboxComponent),
                        },
                    ], template: "<div class=\"dfm-checkbox form-check dfm-checkbox-{{ size }}\" [class.disabled]=\"disabled\">\n  <input class=\"checkbox form-check-input\" [(ngModel)]=\"value\" [indeterminate]=\"indeterminate\" [disabled]=\"disabled\" type=\"checkbox\" [id]=\"id\" />\n  <label class=\"d-flex flex-column label-{{ size }}\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-checkbox.dfm-checkbox-sm{font-size:16px}.dfm-checkbox.dfm-checkbox-md{font-size:20px}.dfm-checkbox .checkbox{margin-top:2px}.dfm-checkbox .checkbox:hover{background-color:var(--dfm-checkbox-hover-bg);border:1px solid var(--dfm-checkbox-border-hover)}.dfm-checkbox .checkbox:hover:checked{background-color:var(--dfm-checkbox-hover-bg)}.dfm-checkbox .checkbox:checked{background-color:var(--dfm-checkbox-checked-bg);background-image:var(--dfm-checkbox-bg-img-checked)}.dfm-checkbox .checkbox:checked:disabled{background-image:var(--dfm-checkbox-bg-img-checked-disabled)}.dfm-checkbox .checkbox:disabled{background-color:var(--dfm-checkbox-disabled-bg);border:1px solid var(--dfm-checkbox-disabled-border)}.dfm-checkbox .checkbox:hover{cursor:pointer}.dfm-checkbox .checkbox:focus{box-shadow:0 0 0 4px var(--dfm-checkbox-focus-shadow);border:1px solid var(--dfm-checkbox-focus-border)}.dfm-checkbox .checkbox:indeterminate{background-color:var(--dfm-checkbox-checked-bg);background-image:var(--dfm-checkbox-bg-img-indeterminate)}.dfm-checkbox .checkbox:indeterminate:disabled{background-color:var(--dfm-checkbox-disabled-bg);background-image:var(--dfm-checkbox-bg-img-indeterminate-disabled)}.dfm-checkbox:not(.disabled) label{cursor:pointer}\n"] }]
        }], propDecorators: { indeterminate: [{
                type: Input
            }] } });

class ToggleComponent extends BaseCheckboxComponent {
}
ToggleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ToggleComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToggleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ToggleComponent, selector: "dfm-toggle", providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            multi: true,
            useExisting: forwardRef(() => ToggleComponent),
        },
    ], usesInheritance: true, ngImport: i0, template: "<div class=\"dfm-toggle form-check form-switch dfm-toggle-{{ size }}\">\n  <input class=\"toggle form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"checkbox\" role=\"switch\" [id]=\"id\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-toggle{margin-top:0}.dfm-toggle .toggle{cursor:pointer;background-color:var(--dfm-toggle-bg);background-image:var(--dfm-toggle-bg-img);border:none}.dfm-toggle .toggle:hover{background-color:var(--dfm-toggle-hover-bg)}.dfm-toggle .toggle:checked{background-color:var(--dfm-toggle-checked-bg);background-image:var(--dfm-toggle-bg-img-checked)}.dfm-toggle .toggle:disabled{background-color:var(--dfm-toggle-disabled-bg);background-image:var(--dfm-toggle-bg-img-checked-disabled)}.dfm-toggle .toggle:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-toggle .toggle{margin-top:0;cursor:pointer}.dfm-toggle.dfm-toggle-sm{padding-left:48px}.dfm-toggle.dfm-toggle-sm .toggle{width:36px;height:20px;margin-left:-48px}.dfm-toggle.dfm-toggle-md{padding-left:58px}.dfm-toggle.dfm-toggle-md .toggle{width:44px;height:24px;margin-left:-58px}.form-check label{cursor:pointer}\n"], dependencies: [{ kind: "directive", type: i1$2.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ToggleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-toggle', providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            multi: true,
                            useExisting: forwardRef(() => ToggleComponent),
                        },
                    ], template: "<div class=\"dfm-toggle form-check form-switch dfm-toggle-{{ size }}\">\n  <input class=\"toggle form-check-input\" [(ngModel)]=\"value\" [disabled]=\"disabled\" type=\"checkbox\" role=\"switch\" [id]=\"id\" />\n  <label class=\"d-flex flex-column\" [for]=\"id\">\n    <span class=\"text-{{ size }}-medium dfm-text-main-700\">{{ label }}</span>\n    <span class=\"text-{{ size }} dfm-text-main-500\">{{ hint }}</span>\n  </label>\n</div>\n", styles: [".dfm-toggle{margin-top:0}.dfm-toggle .toggle{cursor:pointer;background-color:var(--dfm-toggle-bg);background-image:var(--dfm-toggle-bg-img);border:none}.dfm-toggle .toggle:hover{background-color:var(--dfm-toggle-hover-bg)}.dfm-toggle .toggle:checked{background-color:var(--dfm-toggle-checked-bg);background-image:var(--dfm-toggle-bg-img-checked)}.dfm-toggle .toggle:disabled{background-color:var(--dfm-toggle-disabled-bg);background-image:var(--dfm-toggle-bg-img-checked-disabled)}.dfm-toggle .toggle:focus{box-shadow:0 0 0 4px var(--dfm-toggle-focus-shadow)}.dfm-toggle .toggle{margin-top:0;cursor:pointer}.dfm-toggle.dfm-toggle-sm{padding-left:48px}.dfm-toggle.dfm-toggle-sm .toggle{width:36px;height:20px;margin-left:-48px}.dfm-toggle.dfm-toggle-md{padding-left:58px}.dfm-toggle.dfm-toggle-md .toggle{width:44px;height:24px;margin-left:-58px}.form-check label{cursor:pointer}\n"] }]
        }] });

class BaseCheckboxModule {
}
BaseCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BaseCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxModule, declarations: [BaseCheckboxComponent, RadioButtonComponent, CheckboxComponent, ToggleComponent], imports: [CommonModule, FormsModule], exports: [RadioButtonComponent, CheckboxComponent, ToggleComponent] });
BaseCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxModule, imports: [CommonModule, FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BaseCheckboxModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BaseCheckboxComponent, RadioButtonComponent, CheckboxComponent, ToggleComponent],
                    imports: [CommonModule, FormsModule],
                    exports: [RadioButtonComponent, CheckboxComponent, ToggleComponent],
                }]
        }] });

class ButtonComponent {
    constructor() {
        this.color = 'primary';
        this.size = 'lg';
        this.disabled = false;
        this.leadingIcon = '';
        this.trailingIcon = '';
        this.clicked = new EventEmitter();
    }
    click() {
        this.clicked.emit();
    }
}
ButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ButtonComponent, selector: "dfm-button", inputs: { color: "color", size: "size", disabled: "disabled", leadingIcon: "leadingIcon", trailingIcon: "trailingIcon" }, outputs: { clicked: "clicked" }, ngImport: i0, template: "<button class=\"dfm-btn dfm-btn-{{ color }}-{{ size }}\" [disabled]=\"disabled\" (click)=\"click()\">\n  <dfm-icon *ngIf=\"leadingIcon\" [name]=\"leadingIcon\" class=\"icon\"></dfm-icon>\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"trailingIcon\" [name]=\"trailingIcon\" class=\"icon\"></dfm-icon>\n</button>\n", styles: [".dfm-btn-link-gray-2xl,.dfm-btn-link-gray-xl,.dfm-btn-link-gray-lg,.dfm-btn-link-gray-md,.dfm-btn-link-gray-sm,.dfm-btn-link-2xl,.dfm-btn-link-xl,.dfm-btn-link-lg,.dfm-btn-link-md,.dfm-btn-link-sm,.dfm-btn-tertiary-gray-2xl,.dfm-btn-tertiary-gray-xl,.dfm-btn-tertiary-gray-lg,.dfm-btn-tertiary-gray-md,.dfm-btn-tertiary-gray-sm,.dfm-btn-tertiary-2xl,.dfm-btn-tertiary-xl,.dfm-btn-tertiary-lg,.dfm-btn-tertiary-md,.dfm-btn-tertiary-sm,.dfm-btn-secondary-gray-2xl,.dfm-btn-secondary-gray-xl,.dfm-btn-secondary-gray-lg,.dfm-btn-secondary-gray-md,.dfm-btn-secondary-gray-sm,.dfm-btn-secondary-2xl,.dfm-btn-secondary-xl,.dfm-btn-secondary-lg,.dfm-btn-secondary-md,.dfm-btn-secondary-sm,.dfm-btn-primary-2xl,.dfm-btn-primary-xl,.dfm-btn-primary-lg,.dfm-btn-primary-md,.dfm-btn-primary-sm{display:flex;flex-direction:row;justify-content:center;align-items:center;border-radius:8px;font-weight:500;outline:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}.dfm-btn-primary-sm{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-primary-sm .icon{width:20px;height:20px}.dfm-btn-primary-sm:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-sm:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-sm:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-md{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-primary-md .icon{width:20px;height:20px}.dfm-btn-primary-md:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-md:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-md:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-lg{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-primary-lg .icon{width:20px;height:20px}.dfm-btn-primary-lg:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-lg:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-lg:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-xl{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-primary-xl .icon{width:20px;height:20px}.dfm-btn-primary-xl:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-xl:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-xl:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-2xl{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-primary-2xl .icon{width:24px;height:24px}.dfm-btn-primary-2xl:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-2xl:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-2xl:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-secondary-sm{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-sm .icon{width:20px;height:20px}.dfm-btn-secondary-sm:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-sm:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-sm:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-md{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-md .icon{width:20px;height:20px}.dfm-btn-secondary-md:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-md:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-md:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-lg{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-lg .icon{width:20px;height:20px}.dfm-btn-secondary-lg:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-lg:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-lg:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-xl{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-xl .icon{width:20px;height:20px}.dfm-btn-secondary-xl:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-xl:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-xl:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-2xl{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-secondary-2xl .icon{width:24px;height:24px}.dfm-btn-secondary-2xl:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-2xl:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-2xl:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-gray-sm{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-gray-sm .icon{width:20px;height:20px}.dfm-btn-secondary-gray-sm:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-sm:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-sm:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-md{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-gray-md .icon{width:20px;height:20px}.dfm-btn-secondary-gray-md:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-md:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-md:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-lg{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-gray-lg .icon{width:20px;height:20px}.dfm-btn-secondary-gray-lg:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-lg:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-lg:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-xl{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-gray-xl .icon{width:20px;height:20px}.dfm-btn-secondary-gray-xl:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-xl:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-xl:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-2xl{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-secondary-gray-2xl .icon{width:24px;height:24px}.dfm-btn-secondary-gray-2xl:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-2xl:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-2xl:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-tertiary-sm{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:7px 13px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-sm .icon{width:20px;height:20px}.dfm-btn-tertiary-sm:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-sm:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-sm:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-md{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:9px 15px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-md .icon{width:20px;height:20px}.dfm-btn-tertiary-md:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-md:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-md:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-lg{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:9px 17px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-lg .icon{width:20px;height:20px}.dfm-btn-tertiary-lg:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-lg:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-lg:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-xl{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:11px 19px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-xl .icon{width:20px;height:20px}.dfm-btn-tertiary-xl:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-xl:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-xl:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-2xl{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:15px 27px;gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-tertiary-2xl .icon{width:24px;height:24px}.dfm-btn-tertiary-2xl:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-2xl:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-2xl:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-gray-sm{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:7px 13px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-gray-sm .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-sm:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-sm:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-sm:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-md{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:9px 15px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-gray-md .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-md:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-md:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-md:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-lg{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:9px 17px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-gray-lg .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-lg:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-lg:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-lg:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-xl{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:11px 19px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-gray-xl .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-xl:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-xl:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-xl:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-2xl{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:15px 27px;gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-tertiary-gray-2xl .icon{width:24px;height:24px}.dfm-btn-tertiary-gray-2xl:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-2xl:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-2xl:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-link-sm{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-sm .icon{width:20px;height:20px}.dfm-btn-link-sm:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-sm:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-sm:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-md{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-md .icon{width:20px;height:20px}.dfm-btn-link-md:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-md:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-md:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-lg{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-lg .icon{width:20px;height:20px}.dfm-btn-link-lg:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-lg:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-lg:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-xl{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-xl .icon{width:20px;height:20px}.dfm-btn-link-xl:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-xl:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-xl:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-2xl{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-link-2xl .icon{width:24px;height:24px}.dfm-btn-link-2xl:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-2xl:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-2xl:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-gray-sm{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-gray-sm .icon{width:20px;height:20px}.dfm-btn-link-gray-sm:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-sm:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-sm:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-md{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-gray-md .icon{width:20px;height:20px}.dfm-btn-link-gray-md:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-md:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-md:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-lg{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-gray-lg .icon{width:20px;height:20px}.dfm-btn-link-gray-lg:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-lg:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-lg:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-xl{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-gray-xl .icon{width:20px;height:20px}.dfm-btn-link-gray-xl:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-xl:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-xl:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-2xl{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-link-gray-2xl .icon{width:24px;height:24px}.dfm-btn-link-gray-2xl:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-2xl:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-2xl:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}@media (max-width: 680px){.dfm-btn{width:100%}}\n"], dependencies: [{ kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-button', template: "<button class=\"dfm-btn dfm-btn-{{ color }}-{{ size }}\" [disabled]=\"disabled\" (click)=\"click()\">\n  <dfm-icon *ngIf=\"leadingIcon\" [name]=\"leadingIcon\" class=\"icon\"></dfm-icon>\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"trailingIcon\" [name]=\"trailingIcon\" class=\"icon\"></dfm-icon>\n</button>\n", styles: [".dfm-btn-link-gray-2xl,.dfm-btn-link-gray-xl,.dfm-btn-link-gray-lg,.dfm-btn-link-gray-md,.dfm-btn-link-gray-sm,.dfm-btn-link-2xl,.dfm-btn-link-xl,.dfm-btn-link-lg,.dfm-btn-link-md,.dfm-btn-link-sm,.dfm-btn-tertiary-gray-2xl,.dfm-btn-tertiary-gray-xl,.dfm-btn-tertiary-gray-lg,.dfm-btn-tertiary-gray-md,.dfm-btn-tertiary-gray-sm,.dfm-btn-tertiary-2xl,.dfm-btn-tertiary-xl,.dfm-btn-tertiary-lg,.dfm-btn-tertiary-md,.dfm-btn-tertiary-sm,.dfm-btn-secondary-gray-2xl,.dfm-btn-secondary-gray-xl,.dfm-btn-secondary-gray-lg,.dfm-btn-secondary-gray-md,.dfm-btn-secondary-gray-sm,.dfm-btn-secondary-2xl,.dfm-btn-secondary-xl,.dfm-btn-secondary-lg,.dfm-btn-secondary-md,.dfm-btn-secondary-sm,.dfm-btn-primary-2xl,.dfm-btn-primary-xl,.dfm-btn-primary-lg,.dfm-btn-primary-md,.dfm-btn-primary-sm{display:flex;flex-direction:row;justify-content:center;align-items:center;border-radius:8px;font-weight:500;outline:none;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}.dfm-btn-primary-sm{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-primary-sm .icon{width:20px;height:20px}.dfm-btn-primary-sm:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-sm:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-sm:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-md{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-primary-md .icon{width:20px;height:20px}.dfm-btn-primary-md:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-md:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-md:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-lg{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-primary-lg .icon{width:20px;height:20px}.dfm-btn-primary-lg:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-lg:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-lg:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-xl{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-primary-xl .icon{width:20px;height:20px}.dfm-btn-primary-xl:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-xl:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-xl:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-primary-2xl{background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-primary-2xl .icon{width:24px;height:24px}.dfm-btn-primary-2xl:hover{background-color:var(--dfm-btn-primary-bg-hover);color:var(--dfm-btn-primary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-2xl:focus{background-color:var(--dfm-btn-primary-bg-focus);color:var(--dfm-btn-primary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border)}.dfm-btn-primary-2xl:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-primary-border-disabled)}.dfm-btn-secondary-sm{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-sm .icon{width:20px;height:20px}.dfm-btn-secondary-sm:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-sm:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-sm:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-md{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-md .icon{width:20px;height:20px}.dfm-btn-secondary-md:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-md:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-md:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-lg{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-lg .icon{width:20px;height:20px}.dfm-btn-secondary-lg:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-lg:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-lg:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-xl{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-xl .icon{width:20px;height:20px}.dfm-btn-secondary-xl:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-xl:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-xl:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-2xl{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-secondary-2xl .icon{width:24px;height:24px}.dfm-btn-secondary-2xl:hover{background-color:var(--dfm-btn-secondary-bg-hover);color:var(--dfm-btn-secondary-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-2xl:focus{background-color:var(--dfm-btn-secondary-bg-focus);color:var(--dfm-btn-secondary-color-focus);box-shadow:0 0 0 1px #f4e3cf!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border)}.dfm-btn-secondary-2xl:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-border-disabled)}.dfm-btn-secondary-gray-sm{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:7px 13px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-gray-sm .icon{width:20px;height:20px}.dfm-btn-secondary-gray-sm:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-sm:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-sm:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-md{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:9px 15px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:14px;line-height:20px}.dfm-btn-secondary-gray-md .icon{width:20px;height:20px}.dfm-btn-secondary-gray-md:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-md:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-md:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-lg{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:9px 17px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-gray-lg .icon{width:20px;height:20px}.dfm-btn-secondary-gray-lg:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-lg:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-lg:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-xl{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:11px 19px;gap:8px;box-shadow:0 1px 2px #1018280d;font-size:16px;line-height:24px}.dfm-btn-secondary-gray-xl .icon{width:20px;height:20px}.dfm-btn-secondary-gray-xl:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-xl:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-xl:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-secondary-gray-2xl{background-color:var(--dfm-btn-secondary-gray-bg);color:var(--dfm-btn-secondary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border);padding:15px 27px;gap:12px;box-shadow:0 1px 2px #1018280d;font-size:18px;line-height:28px}.dfm-btn-secondary-gray-2xl .icon{width:24px;height:24px}.dfm-btn-secondary-gray-2xl:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-2xl:focus{background-color:var(--dfm-btn-secondary-gray-bg-focus);color:var(--dfm-btn-secondary-gray-color-focus);box-shadow:0 0 0 4px #f2f4f7!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border)}.dfm-btn-secondary-gray-2xl:disabled{background-color:var(--dfm-btn-secondary-gray-bg-disabled);color:var(--dfm-btn-secondary-gray-color-disabled);box-shadow:0 1px 2px #1018280d;border-width:1px;border-style:solid;border-color:var(--dfm-btn-secondary-gray-border-disabled)}.dfm-btn-tertiary-sm{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:7px 13px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-sm .icon{width:20px;height:20px}.dfm-btn-tertiary-sm:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-sm:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-sm:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-md{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:9px 15px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-md .icon{width:20px;height:20px}.dfm-btn-tertiary-md:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-md:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-md:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-lg{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:9px 17px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-lg .icon{width:20px;height:20px}.dfm-btn-tertiary-lg:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-lg:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-lg:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-xl{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:11px 19px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-xl .icon{width:20px;height:20px}.dfm-btn-tertiary-xl:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-xl:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-xl:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-2xl{background-color:var(--dfm-btn-tertiary-bg);color:var(--dfm-btn-tertiary-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border);padding:15px 27px;gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-tertiary-2xl .icon{width:24px;height:24px}.dfm-btn-tertiary-2xl:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-2xl:focus{background-color:var(--dfm-btn-tertiary-bg-focus);color:var(--dfm-btn-tertiary-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border)}.dfm-btn-tertiary-2xl:disabled{background-color:var(--dfm-btn-tertiary-bg-disabled);color:var(--dfm-btn-tertiary-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-border-disabled)}.dfm-btn-tertiary-gray-sm{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:7px 13px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-gray-sm .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-sm:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-sm:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-sm:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-md{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:9px 15px;gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-tertiary-gray-md .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-md:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-md:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-md:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-lg{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:9px 17px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-gray-lg .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-lg:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-lg:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-lg:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-xl{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:11px 19px;gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-tertiary-gray-xl .icon{width:20px;height:20px}.dfm-btn-tertiary-gray-xl:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-xl:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-xl:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-tertiary-gray-2xl{background-color:var(--dfm-btn-tertiary-gray-bg);color:var(--dfm-btn-tertiary-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border);padding:15px 27px;gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-tertiary-gray-2xl .icon{width:24px;height:24px}.dfm-btn-tertiary-gray-2xl:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-2xl:focus{background-color:var(--dfm-btn-tertiary-gray-bg-focus);color:var(--dfm-btn-tertiary-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border)}.dfm-btn-tertiary-gray-2xl:disabled{background-color:var(--dfm-btn-tertiary-gray-bg-disabled);color:var(--dfm-btn-tertiary-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-tertiary-gray-border-disabled)}.dfm-btn-link-sm{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-sm .icon{width:20px;height:20px}.dfm-btn-link-sm:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-sm:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-sm:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-md{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-md .icon{width:20px;height:20px}.dfm-btn-link-md:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-md:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-md:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-lg{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-lg .icon{width:20px;height:20px}.dfm-btn-link-lg:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-lg:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-lg:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-xl{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-xl .icon{width:20px;height:20px}.dfm-btn-link-xl:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-xl:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-xl:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-2xl{background-color:var(--dfm-btn-link-bg);color:var(--dfm-btn-link-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border);gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-link-2xl .icon{width:24px;height:24px}.dfm-btn-link-2xl:hover{background-color:var(--dfm-btn-link-bg-hover);color:var(--dfm-btn-link-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-2xl:focus{background-color:var(--dfm-btn-link-bg-focus);color:var(--dfm-btn-link-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border)}.dfm-btn-link-2xl:disabled{background-color:var(--dfm-btn-link-bg-disabled);color:var(--dfm-btn-link-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-border-disabled)}.dfm-btn-link-gray-sm{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-gray-sm .icon{width:20px;height:20px}.dfm-btn-link-gray-sm:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-sm:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-sm:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-md{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:14px;line-height:20px}.dfm-btn-link-gray-md .icon{width:20px;height:20px}.dfm-btn-link-gray-md:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-md:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-md:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-lg{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-gray-lg .icon{width:20px;height:20px}.dfm-btn-link-gray-lg:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-lg:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-lg:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-xl{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:8px;box-shadow:none;font-size:16px;line-height:24px}.dfm-btn-link-gray-xl .icon{width:20px;height:20px}.dfm-btn-link-gray-xl:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-xl:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-xl:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}.dfm-btn-link-gray-2xl{background-color:var(--dfm-btn-link-gray-bg);color:var(--dfm-btn-link-gray-color);border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border);gap:12px;box-shadow:none;font-size:18px;line-height:28px}.dfm-btn-link-gray-2xl .icon{width:24px;height:24px}.dfm-btn-link-gray-2xl:hover{background-color:var(--dfm-btn-link-gray-bg-hover);color:var(--dfm-btn-link-gray-color-hover);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-2xl:focus{background-color:var(--dfm-btn-link-gray-bg-focus);color:var(--dfm-btn-link-gray-color-focus);box-shadow:none!important;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border)}.dfm-btn-link-gray-2xl:disabled{background-color:var(--dfm-btn-link-gray-bg-disabled);color:var(--dfm-btn-link-gray-color-disabled);box-shadow:none;border-width:1px;border-style:solid;border-color:var(--dfm-btn-link-gray-border-disabled)}@media (max-width: 680px){.dfm-btn{width:100%}}\n"] }]
        }], propDecorators: { color: [{
                type: Input
            }], size: [{
                type: Input
            }], disabled: [{
                type: Input
            }], leadingIcon: [{
                type: Input
            }], trailingIcon: [{
                type: Input
            }], clicked: [{
                type: Output
            }] } });

class ButtonGroupComponent {
}
ButtonGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ButtonGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ButtonGroupComponent, selector: "dfm-button-group", ngImport: i0, template: "<div class=\"d-flex\">\n  <ng-content></ng-content>\n</div>\n", styles: [""] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonGroupComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-button-group', template: "<div class=\"d-flex\">\n  <ng-content></ng-content>\n</div>\n" }]
        }] });

class ButtonIconComponent {
    constructor() {
        this.color = 'primary';
        this.size = 'lg';
        this.disabled = false;
        this.icon = '';
    }
}
ButtonIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ButtonIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ButtonIconComponent, selector: "dfm-button-icon", inputs: { color: "color", size: "size", disabled: "disabled", icon: "icon" }, ngImport: i0, template: "<button class=\"btn btn-icon btn-icon-{{ size }} btn-icon-{{ color }}\" [disabled]=\"disabled\">\n  <dfm-icon [name]=\"icon\" class=\"icon\"></dfm-icon>\n</button>\n", styles: [".btn-icon{width:max-content;border-radius:8px;cursor:pointer}.btn-icon .icon{display:block;width:20px;height:20px}.btn-icon.btn-icon-sm{padding:8px}.btn-icon.btn-icon-md{padding:10px}.btn-icon.btn-icon-lg{padding:12px}.btn-icon.btn-icon-xl{padding:14px}.btn-icon.btn-icon-2xl{padding:16px}.btn-icon.btn-icon-2xl .icon{width:24px;height:24px}.btn-icon.btn-icon-primary{border:1px solid var(--dfm-btn-primary-bg);box-shadow:0 1px 2px #1018280d;background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color)}.btn-icon.btn-icon-primary:hover{color:var(--dfm-btn-primary-color-hover)}.btn-icon.btn-icon-primary:focus{color:var(--dfm-btn-primary-color-focus);box-shadow:0 1px 2px #1018280d,0 0 0 1px #f4e3cf}.btn-icon.btn-icon-primary:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);border-color:var(--dfm-btn-primary-border-disabled)}.btn-icon.btn-icon-secondary{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);box-shadow:0 1px 2px #1018280d;border:1px solid var(--dfm-btn-secondary-bg)}.btn-icon.btn-icon-secondary:hover{color:var(--dfm-btn-secondary-color-hover)}.btn-icon.btn-icon-secondary:focus{box-shadow:0 1px 2px #1018280d,0 0 0 1px var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color-focus)}.btn-icon.btn-icon-secondary:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);border-color:var(--dfm-btn-secondary-border-disabled)}.btn-icon.btn-icon-secondary-gray{color:var(--dfm-btn-secondary-gray-color);border:1px solid var(--dfm-btn-secondary-gray-border);background-color:var(--dfm-btn-secondary-gray-bg);box-shadow:0 1px 2px #1018280d}.btn-icon.btn-icon-secondary-gray:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover)}.btn-icon.btn-icon-secondary-gray:focus{box-shadow:0 1px 2px #1018280d,0 0 0 4px #f2f4f7}.btn-icon.btn-icon-secondary-gray:disabled{color:var(--dfm-btn-secondary-gray-color-disabled);border-color:var(--dfm-btn-secondary-gray-bg-disabled)}.btn-icon.btn-icon-tertiary-gray{color:var(--dfm-btn-tertiary-gray-color);background-color:var(--dfm-btn-tertiary-gray-bg);border:none;box-shadow:none}.btn-icon.btn-icon-tertiary-gray:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover)}.btn-icon.btn-icon-tertiary-gray:disabled{color:var(--dfm-btn-tertiary-gray-bg-disabled)}.btn-icon.btn-icon-tertiary{color:var(--dfm-btn-tertiary-color);background-color:var(--dfm-btn-tertiary-bg);border:none;box-shadow:none}.btn-icon.btn-icon-tertiary:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover)}.btn-icon.btn-icon-tertiary:disabled{color:var(--dfm-btn-tertiary-color-disabled)}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonIconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-button-icon', template: "<button class=\"btn btn-icon btn-icon-{{ size }} btn-icon-{{ color }}\" [disabled]=\"disabled\">\n  <dfm-icon [name]=\"icon\" class=\"icon\"></dfm-icon>\n</button>\n", styles: [".btn-icon{width:max-content;border-radius:8px;cursor:pointer}.btn-icon .icon{display:block;width:20px;height:20px}.btn-icon.btn-icon-sm{padding:8px}.btn-icon.btn-icon-md{padding:10px}.btn-icon.btn-icon-lg{padding:12px}.btn-icon.btn-icon-xl{padding:14px}.btn-icon.btn-icon-2xl{padding:16px}.btn-icon.btn-icon-2xl .icon{width:24px;height:24px}.btn-icon.btn-icon-primary{border:1px solid var(--dfm-btn-primary-bg);box-shadow:0 1px 2px #1018280d;background-color:var(--dfm-btn-primary-bg);color:var(--dfm-btn-primary-color)}.btn-icon.btn-icon-primary:hover{color:var(--dfm-btn-primary-color-hover)}.btn-icon.btn-icon-primary:focus{color:var(--dfm-btn-primary-color-focus);box-shadow:0 1px 2px #1018280d,0 0 0 1px #f4e3cf}.btn-icon.btn-icon-primary:disabled{background-color:var(--dfm-btn-primary-bg-disabled);color:var(--dfm-btn-primary-color-disabled);border-color:var(--dfm-btn-primary-border-disabled)}.btn-icon.btn-icon-secondary{background-color:var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color);box-shadow:0 1px 2px #1018280d;border:1px solid var(--dfm-btn-secondary-bg)}.btn-icon.btn-icon-secondary:hover{color:var(--dfm-btn-secondary-color-hover)}.btn-icon.btn-icon-secondary:focus{box-shadow:0 1px 2px #1018280d,0 0 0 1px var(--dfm-btn-secondary-bg);color:var(--dfm-btn-secondary-color-focus)}.btn-icon.btn-icon-secondary:disabled{background-color:var(--dfm-btn-secondary-bg-disabled);color:var(--dfm-btn-secondary-color-disabled);border-color:var(--dfm-btn-secondary-border-disabled)}.btn-icon.btn-icon-secondary-gray{color:var(--dfm-btn-secondary-gray-color);border:1px solid var(--dfm-btn-secondary-gray-border);background-color:var(--dfm-btn-secondary-gray-bg);box-shadow:0 1px 2px #1018280d}.btn-icon.btn-icon-secondary-gray:hover{background-color:var(--dfm-btn-secondary-gray-bg-hover);color:var(--dfm-btn-secondary-gray-color-hover)}.btn-icon.btn-icon-secondary-gray:focus{box-shadow:0 1px 2px #1018280d,0 0 0 4px #f2f4f7}.btn-icon.btn-icon-secondary-gray:disabled{color:var(--dfm-btn-secondary-gray-color-disabled);border-color:var(--dfm-btn-secondary-gray-bg-disabled)}.btn-icon.btn-icon-tertiary-gray{color:var(--dfm-btn-tertiary-gray-color);background-color:var(--dfm-btn-tertiary-gray-bg);border:none;box-shadow:none}.btn-icon.btn-icon-tertiary-gray:hover{background-color:var(--dfm-btn-tertiary-gray-bg-hover);color:var(--dfm-btn-tertiary-gray-color-hover)}.btn-icon.btn-icon-tertiary-gray:disabled{color:var(--dfm-btn-tertiary-gray-bg-disabled)}.btn-icon.btn-icon-tertiary{color:var(--dfm-btn-tertiary-color);background-color:var(--dfm-btn-tertiary-bg);border:none;box-shadow:none}.btn-icon.btn-icon-tertiary:hover{background-color:var(--dfm-btn-tertiary-bg-hover);color:var(--dfm-btn-tertiary-color-hover)}.btn-icon.btn-icon-tertiary:disabled{color:var(--dfm-btn-tertiary-color-disabled)}\n"] }]
        }], propDecorators: { color: [{
                type: Input
            }], size: [{
                type: Input
            }], disabled: [{
                type: Input
            }], icon: [{
                type: Input
            }] } });

class ButtonGroupItemComponent {
    constructor() {
        this.disabled = false;
        this.icon = '';
        this.buttonContent = null;
    }
}
ButtonGroupItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonGroupItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ButtonGroupItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ButtonGroupItemComponent, selector: "dfm-button-group-item", inputs: { disabled: "disabled", icon: "icon" }, viewQueries: [{ propertyName: "buttonContent", first: true, predicate: ["buttonContent"], descendants: true }], ngImport: i0, template: "<button class=\"btn btn-group-item\" [disabled]=\"disabled\" [class.btn-group-item-only-icon]=\"!buttonContent?.children.length\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"icon\"></dfm-icon>\n  <ng-content #buttonContent></ng-content>\n</button>\n", styles: [":host:first-child .btn-group-item{border-left:1px solid var(--dfm-btn-group-border);border-top-left-radius:8px;border-bottom-left-radius:8px}:host:last-child .btn-group-item{border-top-right-radius:8px;border-bottom-right-radius:8px}.btn-group-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:0;color:var(--dfm-btn-group-color);background-color:var(--dfm-btn-group-bg);display:flex;gap:8px;border:1px solid var(--dfm-btn-group-border);border-left:none;padding:10px 16px;white-space:nowrap}.btn-group-item:hover{background-color:var(--dfm-btn-group-hover-bg);color:var(--dfm-btn-group-hover-color);border:1px solid var(--dfm-btn-group-border);border-left:none}.btn-group-item:hover .icon{color:var(--dfm-btn-group-hover-color)}.btn-group-item:disabled{color:var(--dfm-btn-group-disabed-color)}.btn-group-item:disabled .icon{color:var(--dfm-btn-group-disabed-color)}.btn-group-item .icon{display:block;width:20px;height:20px;color:var(--dfm-btn-group-icon)}.btn-group-item-only-icon{padding:10px 12px}\n"], dependencies: [{ kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonGroupItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-button-group-item', template: "<button class=\"btn btn-group-item\" [disabled]=\"disabled\" [class.btn-group-item-only-icon]=\"!buttonContent?.children.length\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"icon\"></dfm-icon>\n  <ng-content #buttonContent></ng-content>\n</button>\n", styles: [":host:first-child .btn-group-item{border-left:1px solid var(--dfm-btn-group-border);border-top-left-radius:8px;border-bottom-left-radius:8px}:host:last-child .btn-group-item{border-top-right-radius:8px;border-bottom-right-radius:8px}.btn-group-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:0;color:var(--dfm-btn-group-color);background-color:var(--dfm-btn-group-bg);display:flex;gap:8px;border:1px solid var(--dfm-btn-group-border);border-left:none;padding:10px 16px;white-space:nowrap}.btn-group-item:hover{background-color:var(--dfm-btn-group-hover-bg);color:var(--dfm-btn-group-hover-color);border:1px solid var(--dfm-btn-group-border);border-left:none}.btn-group-item:hover .icon{color:var(--dfm-btn-group-hover-color)}.btn-group-item:disabled{color:var(--dfm-btn-group-disabed-color)}.btn-group-item:disabled .icon{color:var(--dfm-btn-group-disabed-color)}.btn-group-item .icon{display:block;width:20px;height:20px;color:var(--dfm-btn-group-icon)}.btn-group-item-only-icon{padding:10px 12px}\n"] }]
        }], propDecorators: { disabled: [{
                type: Input
            }], icon: [{
                type: Input
            }], buttonContent: [{
                type: ViewChild,
                args: ['buttonContent']
            }] } });

class ButtonModule {
}
ButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: ButtonModule, declarations: [ButtonComponent, ButtonGroupComponent, ButtonIconComponent, ButtonGroupItemComponent], imports: [CommonModule, IconModule], exports: [ButtonComponent, ButtonGroupComponent, ButtonGroupItemComponent, ButtonIconComponent] });
ButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonModule, imports: [CommonModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ButtonModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ButtonComponent, ButtonGroupComponent, ButtonIconComponent, ButtonGroupItemComponent],
                    imports: [CommonModule, IconModule],
                    exports: [ButtonComponent, ButtonGroupComponent, ButtonGroupItemComponent, ButtonIconComponent],
                }]
        }] });

class ErrorComponent {
    constructor() {
        this.control = null;
    }
}
ErrorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ErrorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ErrorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ErrorComponent, selector: "dfm-error", inputs: { control: "control" }, ngImport: i0, template: "<span *ngIf=\"control && control.touched && control.hasError('required')\" class=\"invalid-feedback\">The field is required.</span>\n", styles: [".invalid-feedback{display:block}\n"], dependencies: [{ kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ErrorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-error', template: "<span *ngIf=\"control && control.touched && control.hasError('required')\" class=\"invalid-feedback\">The field is required.</span>\n", styles: [".invalid-feedback{display:block}\n"] }]
        }], propDecorators: { control: [{
                type: Input
            }] } });

class InputComponent {
    constructor(control) {
        this.control = control;
        this.type = 'text';
        this.size = 'sm';
        this.label = '';
        this.placeholder = '';
        this.disabled = false;
        this.hint = '';
        this.icon = '';
        this.isInvalid = false;
        this.readonly = false;
        this.showHint = false;
        this.onChange = () => { };
        this.onTouched = () => { };
        this.value = '';
        if (this.control != null) {
            this.control.valueAccessor = this;
        }
    }
    writeValue(obj) {
        this.value = this.isDate(obj) ? moment(obj).format(InputComponent.DateFormat) : obj;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    clickHintIcon() {
        this.showHint = !this.showHint;
    }
    onValueChanged(value) {
        const changedValue = this.type === 'datepicker' ? moment(value, InputComponent.DateFormat).toDate() : value;
        this.onChange(changedValue);
    }
    isDate(date) {
        return this.type === 'datepicker' && date && date instanceof Date && !Number.isNaN(date.getTime());
    }
}
InputComponent.DateFormat = 'DD.MM.YYYY';
InputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputComponent, deps: [{ token: i1$2.NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
InputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: InputComponent, selector: "dfm-input", inputs: { type: "type", size: "size", label: "label", placeholder: "placeholder", disabled: "disabled", hint: "hint", icon: "icon", isInvalid: "isInvalid", readonly: "readonly" }, ngImport: i0, template: "<label *ngIf=\"label\" class=\"dfm-input-label\">{{ label }}</label>\n<div class=\"input-container input-container-{{ size }}\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"leading-icon\"></dfm-icon>\n  <input\n    [type]=\"type\"\n    class=\"dfm-input dfm-input-{{ size }}\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': (control && control.touched && !control.valid) || isInvalid, 'leading-icon-control': icon }\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"onValueChanged($event)\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    (blur)=\"onTouched($event)\"\n    [readonly]=\"readonly\"\n  />\n  <dfm-icon *ngIf=\"hint && ((control && control.valid) || !control)\" name=\"help-circle\" class=\"hint-icon\" (click)=\"clickHintIcon()\"></dfm-icon>\n</div>\n<span *ngIf=\"showHint\" class=\"dfm-input-hint\">{{ hint }}</span>\n<dfm-error [control]=\"control\"></dfm-error>\n", styles: [".dfm-input-label{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;color:var(--dfm-input-label-color);padding-bottom:6px}.input-container .dfm-input-md,.input-container .dfm-input-sm{border-radius:8px;font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px;box-sizing:border-box;color:var(--dfm-input-color);background-color:var(--dfm-input-bg);box-shadow:0 1px 2px #1018280d;outline:none;border:1px solid var(--dfm-input-border);width:100%}.input-container{position:relative}.input-container .leading-icon{position:absolute;color:var(--dfm-input-leading-icon-color)}.input-container-sm .leading-icon{top:9px;left:14px;width:18px;height:18px}.input-container-md .leading-icon{top:12px;left:14px;width:20px;height:20px}.input-container .hint-icon{position:absolute;color:var(--dfm-input-hint-icon-color);top:12px;right:12px;width:16px;height:16px;cursor:pointer}.input-container .dfm-input-sm{height:40px;padding:8px 12px}.input-container .dfm-input-sm.hint-control{padding-right:40px}.input-container .dfm-input-sm:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-sm:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-sm[readonly]{cursor:pointer}.input-container .dfm-input-sm.leading-icon-control{padding-left:40px}.input-container .dfm-input-md{height:44px;padding:10px 14px}.input-container .dfm-input-md.hint-control{padding-right:44px}.input-container .dfm-input-md.leading-icon-control{padding-left:42px}.input-container .dfm-input-md~.hint-icon{top:14px;right:14px}.input-container .dfm-input-md:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-md:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-md[readonly]{cursor:pointer}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}:host-context(.input-dropdown-sm) .dfm-input.dfm-input-sm{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;height:36px}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1$2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }, { kind: "component", type: ErrorComponent, selector: "dfm-error", inputs: ["control"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-input', template: "<label *ngIf=\"label\" class=\"dfm-input-label\">{{ label }}</label>\n<div class=\"input-container input-container-{{ size }}\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"leading-icon\"></dfm-icon>\n  <input\n    [type]=\"type\"\n    class=\"dfm-input dfm-input-{{ size }}\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': (control && control.touched && !control.valid) || isInvalid, 'leading-icon-control': icon }\"\n    [(ngModel)]=\"value\"\n    (ngModelChange)=\"onValueChanged($event)\"\n    [placeholder]=\"placeholder\"\n    [disabled]=\"disabled\"\n    (blur)=\"onTouched($event)\"\n    [readonly]=\"readonly\"\n  />\n  <dfm-icon *ngIf=\"hint && ((control && control.valid) || !control)\" name=\"help-circle\" class=\"hint-icon\" (click)=\"clickHintIcon()\"></dfm-icon>\n</div>\n<span *ngIf=\"showHint\" class=\"dfm-input-hint\">{{ hint }}</span>\n<dfm-error [control]=\"control\"></dfm-error>\n", styles: [".dfm-input-label{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;color:var(--dfm-input-label-color);padding-bottom:6px}.input-container .dfm-input-md,.input-container .dfm-input-sm{border-radius:8px;font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px;box-sizing:border-box;color:var(--dfm-input-color);background-color:var(--dfm-input-bg);box-shadow:0 1px 2px #1018280d;outline:none;border:1px solid var(--dfm-input-border);width:100%}.input-container{position:relative}.input-container .leading-icon{position:absolute;color:var(--dfm-input-leading-icon-color)}.input-container-sm .leading-icon{top:9px;left:14px;width:18px;height:18px}.input-container-md .leading-icon{top:12px;left:14px;width:20px;height:20px}.input-container .hint-icon{position:absolute;color:var(--dfm-input-hint-icon-color);top:12px;right:12px;width:16px;height:16px;cursor:pointer}.input-container .dfm-input-sm{height:40px;padding:8px 12px}.input-container .dfm-input-sm.hint-control{padding-right:40px}.input-container .dfm-input-sm:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-sm:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-sm[readonly]{cursor:pointer}.input-container .dfm-input-sm.leading-icon-control{padding-left:40px}.input-container .dfm-input-md{height:44px;padding:10px 14px}.input-container .dfm-input-md.hint-control{padding-right:44px}.input-container .dfm-input-md.leading-icon-control{padding-left:42px}.input-container .dfm-input-md~.hint-icon{top:14px;right:14px}.input-container .dfm-input-md:focus{color:var(--dfm-input-color-focus);background-color:var(--dfm-input-bg-focus);border:1px solid var(--dfm-input-border-focus)}.input-container .dfm-input-md:disabled{color:var(--dfm-input-color-disabled);background-color:var(--dfm-input-bg-disabled);border:1px solid var(--dfm-input-border-disabled);box-shadow:0 1px 2px #1018280d}.input-container .dfm-input-md[readonly]{cursor:pointer}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}:host-context(.input-dropdown-sm) .dfm-input.dfm-input-sm{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;height:36px}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i1$2.NgControl, decorators: [{
                        type: Optional
                    }] }];
    }, propDecorators: { type: [{
                type: Input
            }], size: [{
                type: Input
            }], label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], disabled: [{
                type: Input
            }], hint: [{
                type: Input
            }], icon: [{
                type: Input
            }], isInvalid: [{
                type: Input
            }], readonly: [{
                type: Input
            }] } });

class ErrorModule {
}
ErrorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ErrorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ErrorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: ErrorModule, declarations: [ErrorComponent], imports: [CommonModule, FormsModule], exports: [ErrorComponent] });
ErrorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ErrorModule, imports: [CommonModule, FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ErrorModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ErrorComponent],
                    imports: [CommonModule, FormsModule],
                    exports: [ErrorComponent],
                }]
        }] });

class InputModule {
}
InputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
InputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: InputModule, declarations: [InputComponent], imports: [CommonModule, FormsModule, ReactiveFormsModule, IconModule, ErrorModule], exports: [InputComponent] });
InputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, IconModule, ErrorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [InputComponent],
                    imports: [CommonModule, FormsModule, ReactiveFormsModule, IconModule, ErrorModule],
                    exports: [InputComponent],
                }]
        }] });

class BadgeComponent {
    constructor() {
        this.size = 'sm';
        this.iconStyle = 'none';
        this.icon = 'placeholder';
        this.color = 'primary';
        this.fontWeight = 'medium';
        this.closed = new EventEmitter();
    }
    getStyles() {
        const color = `dfm-badge-${this.color}`;
        const bold = `font-weight-${this.fontWeight}`;
        let style = `dfm-badge-${this.size}`;
        switch (this.iconStyle) {
            case 'none':
                break;
            case 'bullet':
                style += '-bullet';
                break;
            case 'icon-left':
                style += '-icon-left';
                break;
            case 'icon-right':
                style += '-icon-right';
                break;
            case 'avatar':
                style += '-avatar';
                break;
            case 'close':
                style += '-close';
                break;
            default:
                break;
        }
        return [`${style}`, `${color}`, `${bold}`];
    }
    close() {
        this.closed.next(true);
    }
}
BadgeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: BadgeComponent, selector: "dfm-badge", inputs: { size: "size", iconStyle: "iconStyle", icon: "icon", color: "color", fontWeight: "fontWeight" }, outputs: { closed: "closed" }, ngImport: i0, template: `
    <div [ngClass]="getStyles()">
      <div *ngIf="iconStyle === 'bullet'" class="dfm-bullet dfm-bullet-{{ color }}"></div>
      <dfm-icon class="icon-12" *ngIf="iconStyle === 'icon-left'" [name]="icon"></dfm-icon>
      <ng-content></ng-content>
      <dfm-icon class="icon-12" *ngIf="iconStyle === 'icon-right'" [name]="icon"></dfm-icon>
      <dfm-icon class="icon-12 pointer" *ngIf="iconStyle === 'close'" name="x-close" (click)="close()"></dfm-icon>
    </div>
  `, isInline: true, styles: [".dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet,.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet,.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{border-radius:16px;display:flex;flex-direction:row;justify-content:center;align-items:center;width:-moz-fit-content;width:fit-content;white-space:nowrap}.dfm-badge-lg .dfm-bullet,.dfm-badge-lg-icon .dfm-bullet,.dfm-badge-lg-icon-left .dfm-bullet,.dfm-badge-lg-icon-right .dfm-bullet,.dfm-badge-lg-close .dfm-bullet,.dfm-badge-lg-avatar .dfm-bullet,.dfm-badge-lg-bullet .dfm-bullet,.dfm-badge-md .dfm-bullet,.dfm-badge-md-icon .dfm-bullet,.dfm-badge-md-icon-left .dfm-bullet,.dfm-badge-md-icon-right .dfm-bullet,.dfm-badge-md-close .dfm-bullet,.dfm-badge-md-avatar .dfm-bullet,.dfm-badge-md-bullet .dfm-bullet,.dfm-badge-sm .dfm-bullet,.dfm-badge-sm-icon .dfm-bullet,.dfm-badge-sm-icon-left .dfm-bullet,.dfm-badge-sm-icon-right .dfm-bullet,.dfm-badge-sm-close .dfm-bullet,.dfm-badge-sm-avatar .dfm-bullet,.dfm-badge-sm-bullet .dfm-bullet{height:6px;width:6px;border-radius:50%}.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:2px 8px}.dfm-badge-sm-bullet{padding:2px 8px 2px 6px;gap:6px}.dfm-badge-sm-avatar{padding:2px 8px 2px 3px;gap:6px}.dfm-badge-sm-close,.dfm-badge-sm-icon-right{padding:2px 6px 2px 8px;gap:4px}.dfm-badge-sm-icon-left{padding:2px 8px 2px 6px;gap:4px}.dfm-badge-sm-icon{padding:4px}.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:2px 10px}.dfm-badge-md-bullet{padding:2px 10px 2px 8px;gap:6px}.dfm-badge-md-avatar{padding:2px 10px 2px 4px;gap:6px}.dfm-badge-md-close{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon-right{padding:2px 6px 2px 10px;gap:4px}.dfm-badge-md-icon-left{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon{padding:6px}.dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:4px 12px}.dfm-badge-lg-bullet{padding:4px 12px 4px 10px;gap:6px}.dfm-badge-lg-avatar{padding:4px 12px 4px 6px;gap:6px}.dfm-badge-lg-close,.dfm-badge-lg-icon-right,.dfm-badge-lg-icon-left{padding:4px 10px 4px 12px;gap:4px}.dfm-badge-lg-icon{padding:8px}.dfm-badge-gray{color:var(--dfm-badge-gray-color);background-color:var(--dfm-badge-gray-bg)}.dfm-badge-gray .dfm-bullet-gray{background-color:var(--dfm-badge-gray-color)}.dfm-badge-primary{color:var(--dfm-badge-primary-color);background-color:var(--dfm-badge-primary-bg)}.dfm-badge-primary .dfm-bullet-primary{background-color:var(--dfm-badge-primary-color)}.dfm-badge-primary-dark{color:var(--dfm-badge-primary-dark-color);background-color:var(--dfm-badge-primary-dark-bg)}.dfm-badge-primary-dark .dfm-bullet-primary-dark{background-color:var(--dfm-badge-primary-dark-color)}.dfm-badge-warning{color:var(--dfm-badge-warning-color);background-color:var(--dfm-badge-warning-bg)}.dfm-badge-warning .dfm-bullet-warning{background-color:var(--dfm-badge-warning-color)}.dfm-badge-success{color:var(--dfm-badge-success-color);background-color:var(--dfm-badge-success-bg)}.dfm-badge-success .dfm-bullet-success{background-color:var(--dfm-badge-success-color)}.dfm-badge-success-dark{color:var(--dfm-badge-success-dark-color);background-color:var(--dfm-badge-success-dark-bg)}.dfm-badge-success-dark .dfm-bullet-success-dark{background-color:var(--dfm-badge-success-dark-color)}.dfm-badge-gray-blue{color:var(--dfm-badge-gray-blue-color);background-color:var(--dfm-badge-gray-blue-bg)}.dfm-badge-gray-blue .dfm-bullet-gray-blue{background-color:var(--dfm-badge-gray-blue-color)}.dfm-badge-secondary{color:var(--dfm-badge-secondary-color);background:var(--dfm-badge-secondary-bg)}.dfm-badge-secondary .dfm-bullet-secondary{background-color:var(--dfm-badge-secondary-color)}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-badge', template: `
    <div [ngClass]="getStyles()">
      <div *ngIf="iconStyle === 'bullet'" class="dfm-bullet dfm-bullet-{{ color }}"></div>
      <dfm-icon class="icon-12" *ngIf="iconStyle === 'icon-left'" [name]="icon"></dfm-icon>
      <ng-content></ng-content>
      <dfm-icon class="icon-12" *ngIf="iconStyle === 'icon-right'" [name]="icon"></dfm-icon>
      <dfm-icon class="icon-12 pointer" *ngIf="iconStyle === 'close'" name="x-close" (click)="close()"></dfm-icon>
    </div>
  `, styles: [".dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet,.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet,.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{border-radius:16px;display:flex;flex-direction:row;justify-content:center;align-items:center;width:-moz-fit-content;width:fit-content;white-space:nowrap}.dfm-badge-lg .dfm-bullet,.dfm-badge-lg-icon .dfm-bullet,.dfm-badge-lg-icon-left .dfm-bullet,.dfm-badge-lg-icon-right .dfm-bullet,.dfm-badge-lg-close .dfm-bullet,.dfm-badge-lg-avatar .dfm-bullet,.dfm-badge-lg-bullet .dfm-bullet,.dfm-badge-md .dfm-bullet,.dfm-badge-md-icon .dfm-bullet,.dfm-badge-md-icon-left .dfm-bullet,.dfm-badge-md-icon-right .dfm-bullet,.dfm-badge-md-close .dfm-bullet,.dfm-badge-md-avatar .dfm-bullet,.dfm-badge-md-bullet .dfm-bullet,.dfm-badge-sm .dfm-bullet,.dfm-badge-sm-icon .dfm-bullet,.dfm-badge-sm-icon-left .dfm-bullet,.dfm-badge-sm-icon-right .dfm-bullet,.dfm-badge-sm-close .dfm-bullet,.dfm-badge-sm-avatar .dfm-bullet,.dfm-badge-sm-bullet .dfm-bullet{height:6px;width:6px;border-radius:50%}.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:2px 8px}.dfm-badge-sm-bullet{padding:2px 8px 2px 6px;gap:6px}.dfm-badge-sm-avatar{padding:2px 8px 2px 3px;gap:6px}.dfm-badge-sm-close,.dfm-badge-sm-icon-right{padding:2px 6px 2px 8px;gap:4px}.dfm-badge-sm-icon-left{padding:2px 8px 2px 6px;gap:4px}.dfm-badge-sm-icon{padding:4px}.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:2px 10px}.dfm-badge-md-bullet{padding:2px 10px 2px 8px;gap:6px}.dfm-badge-md-avatar{padding:2px 10px 2px 4px;gap:6px}.dfm-badge-md-close{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon-right{padding:2px 6px 2px 10px;gap:4px}.dfm-badge-md-icon-left{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon{padding:6px}.dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:4px 12px}.dfm-badge-lg-bullet{padding:4px 12px 4px 10px;gap:6px}.dfm-badge-lg-avatar{padding:4px 12px 4px 6px;gap:6px}.dfm-badge-lg-close,.dfm-badge-lg-icon-right,.dfm-badge-lg-icon-left{padding:4px 10px 4px 12px;gap:4px}.dfm-badge-lg-icon{padding:8px}.dfm-badge-gray{color:var(--dfm-badge-gray-color);background-color:var(--dfm-badge-gray-bg)}.dfm-badge-gray .dfm-bullet-gray{background-color:var(--dfm-badge-gray-color)}.dfm-badge-primary{color:var(--dfm-badge-primary-color);background-color:var(--dfm-badge-primary-bg)}.dfm-badge-primary .dfm-bullet-primary{background-color:var(--dfm-badge-primary-color)}.dfm-badge-primary-dark{color:var(--dfm-badge-primary-dark-color);background-color:var(--dfm-badge-primary-dark-bg)}.dfm-badge-primary-dark .dfm-bullet-primary-dark{background-color:var(--dfm-badge-primary-dark-color)}.dfm-badge-warning{color:var(--dfm-badge-warning-color);background-color:var(--dfm-badge-warning-bg)}.dfm-badge-warning .dfm-bullet-warning{background-color:var(--dfm-badge-warning-color)}.dfm-badge-success{color:var(--dfm-badge-success-color);background-color:var(--dfm-badge-success-bg)}.dfm-badge-success .dfm-bullet-success{background-color:var(--dfm-badge-success-color)}.dfm-badge-success-dark{color:var(--dfm-badge-success-dark-color);background-color:var(--dfm-badge-success-dark-bg)}.dfm-badge-success-dark .dfm-bullet-success-dark{background-color:var(--dfm-badge-success-dark-color)}.dfm-badge-gray-blue{color:var(--dfm-badge-gray-blue-color);background-color:var(--dfm-badge-gray-blue-bg)}.dfm-badge-gray-blue .dfm-bullet-gray-blue{background-color:var(--dfm-badge-gray-blue-color)}.dfm-badge-secondary{color:var(--dfm-badge-secondary-color);background:var(--dfm-badge-secondary-bg)}.dfm-badge-secondary .dfm-bullet-secondary{background-color:var(--dfm-badge-secondary-color)}\n"] }]
        }], propDecorators: { size: [{
                type: Input
            }], iconStyle: [{
                type: Input
            }], icon: [{
                type: Input
            }], color: [{
                type: Input
            }], fontWeight: [{
                type: Input
            }], closed: [{
                type: Output
            }] } });

class BadgeIconComponent {
    constructor() {
        this.size = 'sm';
        this.icon = 'placeholder';
        this.color = 'primary';
    }
}
BadgeIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
BadgeIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: BadgeIconComponent, selector: "dfm-badge-icon", inputs: { size: "size", icon: "icon", color: "color" }, ngImport: i0, template: `
    <div class="dfm-badge-{{ size }}-icon dfm-badge-{{ color }}">
      <dfm-icon class="icon-12" [name]="icon"></dfm-icon>
    </div>
  `, isInline: true, styles: [".dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet,.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet,.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{border-radius:16px;display:flex;flex-direction:row;justify-content:center;align-items:center;width:-moz-fit-content;width:fit-content;white-space:nowrap}.dfm-badge-lg .dfm-bullet,.dfm-badge-lg-icon .dfm-bullet,.dfm-badge-lg-icon-left .dfm-bullet,.dfm-badge-lg-icon-right .dfm-bullet,.dfm-badge-lg-close .dfm-bullet,.dfm-badge-lg-avatar .dfm-bullet,.dfm-badge-lg-bullet .dfm-bullet,.dfm-badge-md .dfm-bullet,.dfm-badge-md-icon .dfm-bullet,.dfm-badge-md-icon-left .dfm-bullet,.dfm-badge-md-icon-right .dfm-bullet,.dfm-badge-md-close .dfm-bullet,.dfm-badge-md-avatar .dfm-bullet,.dfm-badge-md-bullet .dfm-bullet,.dfm-badge-sm .dfm-bullet,.dfm-badge-sm-icon .dfm-bullet,.dfm-badge-sm-icon-left .dfm-bullet,.dfm-badge-sm-icon-right .dfm-bullet,.dfm-badge-sm-close .dfm-bullet,.dfm-badge-sm-avatar .dfm-bullet,.dfm-badge-sm-bullet .dfm-bullet{height:6px;width:6px;border-radius:50%}.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:2px 8px}.dfm-badge-sm-bullet{padding:2px 8px 2px 6px;gap:6px}.dfm-badge-sm-avatar{padding:2px 8px 2px 3px;gap:6px}.dfm-badge-sm-close,.dfm-badge-sm-icon-right{padding:2px 6px 2px 8px;gap:4px}.dfm-badge-sm-icon-left{padding:2px 8px 2px 6px;gap:4px}.dfm-badge-sm-icon{padding:4px}.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:2px 10px}.dfm-badge-md-bullet{padding:2px 10px 2px 8px;gap:6px}.dfm-badge-md-avatar{padding:2px 10px 2px 4px;gap:6px}.dfm-badge-md-close{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon-right{padding:2px 6px 2px 10px;gap:4px}.dfm-badge-md-icon-left{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon{padding:6px}.dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:4px 12px}.dfm-badge-lg-bullet{padding:4px 12px 4px 10px;gap:6px}.dfm-badge-lg-avatar{padding:4px 12px 4px 6px;gap:6px}.dfm-badge-lg-close,.dfm-badge-lg-icon-right,.dfm-badge-lg-icon-left{padding:4px 10px 4px 12px;gap:4px}.dfm-badge-lg-icon{padding:8px}.dfm-badge-gray{color:var(--dfm-badge-gray-color);background-color:var(--dfm-badge-gray-bg)}.dfm-badge-gray .dfm-bullet-gray{background-color:var(--dfm-badge-gray-color)}.dfm-badge-primary{color:var(--dfm-badge-primary-color);background-color:var(--dfm-badge-primary-bg)}.dfm-badge-primary .dfm-bullet-primary{background-color:var(--dfm-badge-primary-color)}.dfm-badge-primary-dark{color:var(--dfm-badge-primary-dark-color);background-color:var(--dfm-badge-primary-dark-bg)}.dfm-badge-primary-dark .dfm-bullet-primary-dark{background-color:var(--dfm-badge-primary-dark-color)}.dfm-badge-warning{color:var(--dfm-badge-warning-color);background-color:var(--dfm-badge-warning-bg)}.dfm-badge-warning .dfm-bullet-warning{background-color:var(--dfm-badge-warning-color)}.dfm-badge-success{color:var(--dfm-badge-success-color);background-color:var(--dfm-badge-success-bg)}.dfm-badge-success .dfm-bullet-success{background-color:var(--dfm-badge-success-color)}.dfm-badge-success-dark{color:var(--dfm-badge-success-dark-color);background-color:var(--dfm-badge-success-dark-bg)}.dfm-badge-success-dark .dfm-bullet-success-dark{background-color:var(--dfm-badge-success-dark-color)}.dfm-badge-gray-blue{color:var(--dfm-badge-gray-blue-color);background-color:var(--dfm-badge-gray-blue-bg)}.dfm-badge-gray-blue .dfm-bullet-gray-blue{background-color:var(--dfm-badge-gray-blue-color)}.dfm-badge-secondary{color:var(--dfm-badge-secondary-color);background:var(--dfm-badge-secondary-bg)}.dfm-badge-secondary .dfm-bullet-secondary{background-color:var(--dfm-badge-secondary-color)}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeIconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-badge-icon', template: `
    <div class="dfm-badge-{{ size }}-icon dfm-badge-{{ color }}">
      <dfm-icon class="icon-12" [name]="icon"></dfm-icon>
    </div>
  `, styles: [".dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet,.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet,.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{border-radius:16px;display:flex;flex-direction:row;justify-content:center;align-items:center;width:-moz-fit-content;width:fit-content;white-space:nowrap}.dfm-badge-lg .dfm-bullet,.dfm-badge-lg-icon .dfm-bullet,.dfm-badge-lg-icon-left .dfm-bullet,.dfm-badge-lg-icon-right .dfm-bullet,.dfm-badge-lg-close .dfm-bullet,.dfm-badge-lg-avatar .dfm-bullet,.dfm-badge-lg-bullet .dfm-bullet,.dfm-badge-md .dfm-bullet,.dfm-badge-md-icon .dfm-bullet,.dfm-badge-md-icon-left .dfm-bullet,.dfm-badge-md-icon-right .dfm-bullet,.dfm-badge-md-close .dfm-bullet,.dfm-badge-md-avatar .dfm-bullet,.dfm-badge-md-bullet .dfm-bullet,.dfm-badge-sm .dfm-bullet,.dfm-badge-sm-icon .dfm-bullet,.dfm-badge-sm-icon-left .dfm-bullet,.dfm-badge-sm-icon-right .dfm-bullet,.dfm-badge-sm-close .dfm-bullet,.dfm-badge-sm-avatar .dfm-bullet,.dfm-badge-sm-bullet .dfm-bullet{height:6px;width:6px;border-radius:50%}.dfm-badge-sm,.dfm-badge-sm-icon,.dfm-badge-sm-icon-left,.dfm-badge-sm-icon-right,.dfm-badge-sm-close,.dfm-badge-sm-avatar,.dfm-badge-sm-bullet{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:2px 8px}.dfm-badge-sm-bullet{padding:2px 8px 2px 6px;gap:6px}.dfm-badge-sm-avatar{padding:2px 8px 2px 3px;gap:6px}.dfm-badge-sm-close,.dfm-badge-sm-icon-right{padding:2px 6px 2px 8px;gap:4px}.dfm-badge-sm-icon-left{padding:2px 8px 2px 6px;gap:4px}.dfm-badge-sm-icon{padding:4px}.dfm-badge-md,.dfm-badge-md-icon,.dfm-badge-md-icon-left,.dfm-badge-md-icon-right,.dfm-badge-md-close,.dfm-badge-md-avatar,.dfm-badge-md-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:2px 10px}.dfm-badge-md-bullet{padding:2px 10px 2px 8px;gap:6px}.dfm-badge-md-avatar{padding:2px 10px 2px 4px;gap:6px}.dfm-badge-md-close{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon-right{padding:2px 6px 2px 10px;gap:4px}.dfm-badge-md-icon-left{padding:2px 8px 2px 10px;gap:4px}.dfm-badge-md-icon{padding:6px}.dfm-badge-lg,.dfm-badge-lg-icon,.dfm-badge-lg-icon-left,.dfm-badge-lg-icon-right,.dfm-badge-lg-close,.dfm-badge-lg-avatar,.dfm-badge-lg-bullet{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;padding:4px 12px}.dfm-badge-lg-bullet{padding:4px 12px 4px 10px;gap:6px}.dfm-badge-lg-avatar{padding:4px 12px 4px 6px;gap:6px}.dfm-badge-lg-close,.dfm-badge-lg-icon-right,.dfm-badge-lg-icon-left{padding:4px 10px 4px 12px;gap:4px}.dfm-badge-lg-icon{padding:8px}.dfm-badge-gray{color:var(--dfm-badge-gray-color);background-color:var(--dfm-badge-gray-bg)}.dfm-badge-gray .dfm-bullet-gray{background-color:var(--dfm-badge-gray-color)}.dfm-badge-primary{color:var(--dfm-badge-primary-color);background-color:var(--dfm-badge-primary-bg)}.dfm-badge-primary .dfm-bullet-primary{background-color:var(--dfm-badge-primary-color)}.dfm-badge-primary-dark{color:var(--dfm-badge-primary-dark-color);background-color:var(--dfm-badge-primary-dark-bg)}.dfm-badge-primary-dark .dfm-bullet-primary-dark{background-color:var(--dfm-badge-primary-dark-color)}.dfm-badge-warning{color:var(--dfm-badge-warning-color);background-color:var(--dfm-badge-warning-bg)}.dfm-badge-warning .dfm-bullet-warning{background-color:var(--dfm-badge-warning-color)}.dfm-badge-success{color:var(--dfm-badge-success-color);background-color:var(--dfm-badge-success-bg)}.dfm-badge-success .dfm-bullet-success{background-color:var(--dfm-badge-success-color)}.dfm-badge-success-dark{color:var(--dfm-badge-success-dark-color);background-color:var(--dfm-badge-success-dark-bg)}.dfm-badge-success-dark .dfm-bullet-success-dark{background-color:var(--dfm-badge-success-dark-color)}.dfm-badge-gray-blue{color:var(--dfm-badge-gray-blue-color);background-color:var(--dfm-badge-gray-blue-bg)}.dfm-badge-gray-blue .dfm-bullet-gray-blue{background-color:var(--dfm-badge-gray-blue-color)}.dfm-badge-secondary{color:var(--dfm-badge-secondary-color);background:var(--dfm-badge-secondary-bg)}.dfm-badge-secondary .dfm-bullet-secondary{background-color:var(--dfm-badge-secondary-color)}\n"] }]
        }], propDecorators: { size: [{
                type: Input
            }], icon: [{
                type: Input
            }], color: [{
                type: Input
            }] } });

class BadgeModule {
}
BadgeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BadgeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: BadgeModule, declarations: [BadgeIconComponent, BadgeComponent], imports: [CommonModule, IconModule], exports: [BadgeIconComponent, BadgeComponent] });
BadgeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeModule, imports: [CommonModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: BadgeModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [BadgeIconComponent, BadgeComponent],
                    imports: [CommonModule, IconModule],
                    exports: [BadgeIconComponent, BadgeComponent],
                }]
        }] });

class TagComponent {
    constructor() {
        this.color = 'default';
        this.size = 'md';
        this.action = null;
        this.count = null;
        this.icon = '';
        this.closeAction = new EventEmitter();
    }
    clickCloseAction() {
        this.closeAction.emit();
    }
}
TagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TagComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TagComponent, selector: "dfm-tag", inputs: { color: "color", size: "size", action: "action", count: "count", icon: "icon" }, outputs: { closeAction: "closeAction" }, ngImport: i0, template: "<span class=\"tag tag-{{ color }} tag-{{ size }}\" [ngClass]=\"{ 'tag-with-action': action, 'tag-with-icon': icon }\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"icon icon-{{ size }}\"></dfm-icon>\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"action === 'close'\" name=\"x-close\" class=\"close-action\" (click)=\"clickCloseAction()\"></dfm-icon>\n  <div *ngIf=\"action === 'count'\" class=\"count-action\">{{ count }}</div>\n</span>\n", styles: [".tag{display:inline-flex;align-items:center;border-radius:6px;white-space:nowrap}.tag .close-action{color:var(--dfm-tag-close-color);cursor:pointer}.tag .count-action{background-color:var(--dfm-tag-count-bg);border-radius:3px}.tag.tag-default{color:var(--dfm-tag-color);background-color:var(--dfm-tag-bg);border:1px solid var(--dfm-tag-default-border)}.tag.tag-brown{color:var(--dfm-tag-primary-color);background-color:var(--dfm-tag-primary-bg);border:1px solid var(--dfm-tag-primary-border)}.tag.tag-brown .count-action{background-color:var(--dfm-tag-primary-bg)}.tag.tag-brown .close-action,.tag.tag-brown .icon{color:var(--dfm-tag-primary-color)}.tag.tag-sm{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;font-weight:500;padding:3px 8px}.tag.tag-sm.tag-with-action{padding:3px 4px 3px 8px}.tag.tag-sm .close-action{width:10px;height:10px;margin:2px 2px 2px 5px}.tag.tag-sm .count-action{padding:0 4.5px;line-height:16px;margin-left:4px}.tag.tag-sm.tag-with-icon{padding-left:4px}.tag.tag-md{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;padding:2px 9px}.tag.tag-md.tag-with-action{padding:2px 3px 2px 9px}.tag.tag-md .close-action{width:12px;height:12px;margin:2px 2px 2px 5px}.tag.tag-md .count-action{padding:0 5.5px;margin-left:5px}.tag.tag-md.tag-with-icon{padding-left:5px}.tag.tag-lg{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;padding:4px 10px}.tag.tag-lg.tag-with-action{padding:4px 4px 4px 10px}.tag.tag-lg .close-action{width:14px;height:14px;margin:3px 3px 3px 6px}.tag.tag-lg .count-action{padding:0 6px;margin-left:6px}.tag.tag-lg.tag-with-icon{padding-left:7px}.tag .icon{color:var(--dfm-tag-icon-color);width:16px;height:16px}.tag .icon.icon-sm{margin-right:4px}.tag .icon.icon-md{margin-right:5px}.tag .icon.icon-lg{margin-right:6px}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TagComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-tag', template: "<span class=\"tag tag-{{ color }} tag-{{ size }}\" [ngClass]=\"{ 'tag-with-action': action, 'tag-with-icon': icon }\">\n  <dfm-icon *ngIf=\"icon\" [name]=\"icon\" class=\"icon icon-{{ size }}\"></dfm-icon>\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"action === 'close'\" name=\"x-close\" class=\"close-action\" (click)=\"clickCloseAction()\"></dfm-icon>\n  <div *ngIf=\"action === 'count'\" class=\"count-action\">{{ count }}</div>\n</span>\n", styles: [".tag{display:inline-flex;align-items:center;border-radius:6px;white-space:nowrap}.tag .close-action{color:var(--dfm-tag-close-color);cursor:pointer}.tag .count-action{background-color:var(--dfm-tag-count-bg);border-radius:3px}.tag.tag-default{color:var(--dfm-tag-color);background-color:var(--dfm-tag-bg);border:1px solid var(--dfm-tag-default-border)}.tag.tag-brown{color:var(--dfm-tag-primary-color);background-color:var(--dfm-tag-primary-bg);border:1px solid var(--dfm-tag-primary-border)}.tag.tag-brown .count-action{background-color:var(--dfm-tag-primary-bg)}.tag.tag-brown .close-action,.tag.tag-brown .icon{color:var(--dfm-tag-primary-color)}.tag.tag-sm{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;font-weight:500;padding:3px 8px}.tag.tag-sm.tag-with-action{padding:3px 4px 3px 8px}.tag.tag-sm .close-action{width:10px;height:10px;margin:2px 2px 2px 5px}.tag.tag-sm .count-action{padding:0 4.5px;line-height:16px;margin-left:4px}.tag.tag-sm.tag-with-icon{padding-left:4px}.tag.tag-md{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;padding:2px 9px}.tag.tag-md.tag-with-action{padding:2px 3px 2px 9px}.tag.tag-md .close-action{width:12px;height:12px;margin:2px 2px 2px 5px}.tag.tag-md .count-action{padding:0 5.5px;margin-left:5px}.tag.tag-md.tag-with-icon{padding-left:5px}.tag.tag-lg{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;padding:4px 10px}.tag.tag-lg.tag-with-action{padding:4px 4px 4px 10px}.tag.tag-lg .close-action{width:14px;height:14px;margin:3px 3px 3px 6px}.tag.tag-lg .count-action{padding:0 6px;margin-left:6px}.tag.tag-lg.tag-with-icon{padding-left:7px}.tag .icon{color:var(--dfm-tag-icon-color);width:16px;height:16px}.tag .icon.icon-sm{margin-right:4px}.tag .icon.icon-md{margin-right:5px}.tag .icon.icon-lg{margin-right:6px}\n"] }]
        }], propDecorators: { color: [{
                type: Input
            }], size: [{
                type: Input
            }], action: [{
                type: Input
            }], count: [{
                type: Input
            }], icon: [{
                type: Input
            }], closeAction: [{
                type: Output
            }] } });

class TagModule {
}
TagModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TagModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TagModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: TagModule, declarations: [TagComponent], imports: [CommonModule, IconModule], exports: [TagComponent] });
TagModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TagModule, imports: [CommonModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TagModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TagComponent],
                    imports: [CommonModule, IconModule],
                    exports: [TagComponent],
                }]
        }] });

class TextAreaComponent {
    constructor(control) {
        this.control = control;
        this.label = '';
        this.placeholder = '';
        this.hint = '';
        this.disabled = false;
        this.value = '';
        // eslint-disable-next-line class-methods-use-this
        this.onChange = () => { };
        // eslint-disable-next-line class-methods-use-this
        this.onTouched = () => { };
        if (this.control != null) {
            this.control.valueAccessor = this;
        }
    }
    writeValue(obj) {
        this.value = obj;
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
}
TextAreaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TextAreaComponent, deps: [{ token: i1$2.NgControl, optional: true }], target: i0.ɵɵFactoryTarget.Component });
TextAreaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TextAreaComponent, selector: "dfm-text-area", inputs: { label: "label", placeholder: "placeholder", hint: "hint", disabled: "disabled" }, ngImport: i0, template: "<div class=\"form-group\">\n  <label *ngIf=\"label\" class=\"form-label\">{{ label }}</label>\n  <textarea\n    class=\"form-control dfm-text-area\"\n    rows=\"3\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': control && control.touched && !control.valid }\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"onChange($event)\"\n    [disabled]=\"disabled\"\n    [placeholder]=\"placeholder\"\n    (blur)=\"onTouched($event)\"\n  >\n  </textarea>\n  <span *ngIf=\"hint\" class=\"dfm-input-hint\">{{ hint }}</span>\n  <dfm-error [control]=\"control\"></dfm-error>\n</div>\n", styles: [".dfm-text-area{font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px}.dfm-text-area:focus{border:1px solid var(--dfm-text-area-focus-border-color);box-shadow:0 1px 2px #1018280d,0 0 0 1px var(--dfm-text-area-focus-shadow)}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1$2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: ErrorComponent, selector: "dfm-error", inputs: ["control"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TextAreaComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-text-area', template: "<div class=\"form-group\">\n  <label *ngIf=\"label\" class=\"form-label\">{{ label }}</label>\n  <textarea\n    class=\"form-control dfm-text-area\"\n    rows=\"3\"\n    [ngClass]=\"{ 'hint-control': hint, 'is-invalid': control && control.touched && !control.valid }\"\n    [ngModel]=\"value\"\n    (ngModelChange)=\"onChange($event)\"\n    [disabled]=\"disabled\"\n    [placeholder]=\"placeholder\"\n    (blur)=\"onTouched($event)\"\n  >\n  </textarea>\n  <span *ngIf=\"hint\" class=\"dfm-input-hint\">{{ hint }}</span>\n  <dfm-error [control]=\"control\"></dfm-error>\n</div>\n", styles: [".dfm-text-area{font-family:Montserrat;font-style:normal;font-size:16px;line-height:24px}.dfm-text-area:focus{border:1px solid var(--dfm-text-area-focus-border-color);box-shadow:0 1px 2px #1018280d,0 0 0 1px var(--dfm-text-area-focus-shadow)}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i1$2.NgControl, decorators: [{
                        type: Optional
                    }] }];
    }, propDecorators: { label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], hint: [{
                type: Input
            }], disabled: [{
                type: Input
            }] } });

class TextAreaModule {
}
TextAreaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TextAreaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TextAreaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: TextAreaModule, declarations: [TextAreaComponent], imports: [CommonModule, FormsModule, ReactiveFormsModule, ErrorModule], exports: [TextAreaComponent] });
TextAreaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TextAreaModule, imports: [CommonModule, FormsModule, ReactiveFormsModule, ErrorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TextAreaModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TextAreaComponent],
                    imports: [CommonModule, FormsModule, ReactiveFormsModule, ErrorModule],
                    exports: [TextAreaComponent],
                }]
        }] });

class Day {
    constructor(newDate, isCurrentMonth = false) {
        this.date = new Date();
        this.isCurrentMonth = false;
        this.date = newDate;
        this.isCurrentMonth = isCurrentMonth;
    }
}

function weekCount(year, monthNumber) {
    const firstOfMonth = new Date(year, monthNumber, 1);
    const lastOfMonth = new Date(year, monthNumber + 1, 0);
    const day = 7 - (7 - firstOfMonth.getDay() + 1) + 1;
    const day2 = 7 - (lastOfMonth.getDay() + 1);
    const used = day + day2 + lastOfMonth.getDate();
    return Math.ceil(used / 7);
}

class Week {
    constructor(days) {
        this.days = [];
        this.days = days;
    }
}

class DatepickerComponent {
    constructor() {
        this.datesApplied = new EventEmitter();
        this.cancelled = new EventEmitter();
        this.dateRange = new FormGroup({
            startDate: new FormControl(null),
            endDate: new FormControl(null),
        });
        this.weekNames = ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sat', 'Su'];
        this.firstMonthWeeks = [];
        this.secondMonthWeeks = [];
        this.firstMonth = new Date();
        this.secondMonth = new Date();
    }
    get firstSelectedDate() {
        return this.privateFirstSelectedDate;
    }
    set firstSelectedDate(value) {
        this.privateFirstSelectedDate = value;
        this.dateRange.controls['startDate'].setValue(value || null);
    }
    get secondSelectedDate() {
        return this.privateSecondSelectedDate;
    }
    set secondSelectedDate(value) {
        this.privateSecondSelectedDate = value;
        this.dateRange.controls['endDate'].setValue(value || null);
    }
    ngOnInit() {
        this.secondMonth.setMonth(new Date().getMonth() + 1);
        this.setWeeks();
    }
    setWeeks() {
        const month = this.firstMonth.getMonth();
        const year = this.firstMonth.getFullYear();
        const daysInFirstMonth = new Date(year, month, 0).getDate();
        const secondMonth = this.secondMonth.getMonth();
        const secondYear = this.secondMonth.getFullYear();
        const daysInSecondMonth = new Date(year, month, 0).getDate();
        let firstDay = 0;
        let monthRows = 0;
        if (daysInFirstMonth >= daysInSecondMonth) {
            firstDay = DatepickerComponent.getFirstDayOfMonthIndex(month, year);
            monthRows = Math.ceil((daysInFirstMonth + firstDay) / 7);
        }
        else {
            firstDay = DatepickerComponent.getFirstDayOfMonthIndex(secondMonth, secondYear);
            monthRows = Math.ceil((daysInSecondMonth + firstDay) / 7);
        }
        const weeks = weekCount(year, month);
        const weeksSecondMonth = weekCount(secondYear, secondMonth);
        if (weeks > weeksSecondMonth) {
            monthRows = weeks;
        }
        else {
            monthRows = weeksSecondMonth;
        }
        let dayInMonth = 1;
        let dayInSecondMonth = 1;
        const firstDate = new Date(year, month, 1);
        const firstDateSecondMonth = new Date(year, secondMonth, 1);
        this.firstMonthWeeks = [];
        this.secondMonthWeeks = [];
        for (let i = 0; i < monthRows; i += 1) {
            const days = [];
            const secondMonthDays = [];
            for (let j = 0; j < 7; j += 1) {
                if (i === 0) {
                    if (j < firstDate.getDay() - 1) {
                        const day = new Date(year, month, 0);
                        const dayNumber = day.getDate() - (firstDate.getDay() - 2 - j);
                        day.setDate(dayNumber);
                        days.push(new Day(day));
                    }
                    else {
                        const date = new Date(year, month, dayInMonth);
                        const isCurrentMonth = date.getMonth() === month;
                        days.push(new Day(date, isCurrentMonth));
                        dayInMonth += 1;
                    }
                    if (j < firstDateSecondMonth.getDay() - 1) {
                        const day2 = new Date(secondYear, secondMonth, 0);
                        const day2Number = day2.getDate() - (firstDateSecondMonth.getDay() - 2 - j);
                        day2.setDate(day2Number);
                        secondMonthDays.push(new Day(day2));
                    }
                    else {
                        secondMonthDays.push(new Day(new Date(secondYear, secondMonth, dayInSecondMonth), true));
                        dayInSecondMonth += 1;
                    }
                }
                else {
                    const date = new Date(year, month, dayInMonth);
                    const isCurrentMonth = date.getMonth() === month;
                    days.push(new Day(date, isCurrentMonth));
                    dayInMonth += 1;
                    const date2 = new Date(secondYear, secondMonth, dayInSecondMonth);
                    const isCurrentMonth2 = date2.getMonth() === secondMonth;
                    secondMonthDays.push(new Day(date2, isCurrentMonth2));
                    dayInSecondMonth += 1;
                }
            }
            const week = new Week(days);
            const week2 = new Week(secondMonthDays);
            this.firstMonthWeeks.push(week);
            this.secondMonthWeeks.push(week2);
        }
    }
    static getFirstDayOfMonthIndex(month, year) {
        const day = new Date();
        day.setDate(1);
        day.setMonth(month);
        day.setFullYear(year);
        const dayIndex = day.getDay() + 7;
        return dayIndex >= 7 ? dayIndex - 7 : dayIndex;
    }
    isSelectedDate(date) {
        var _a, _b;
        return ((_a = this.firstSelectedDate) === null || _a === void 0 ? void 0 : _a.getTime()) === date.getTime() || ((_b = this.secondSelectedDate) === null || _b === void 0 ? void 0 : _b.getTime()) === date.getTime();
    }
    isBetweenSelection(date) {
        if (!this.firstSelectedDate || !this.secondSelectedDate || !date) {
            return false;
        }
        return this.firstSelectedDate < date && this.secondSelectedDate > date;
    }
    selectDate(date) {
        if (!date) {
            return;
        }
        if (this.secondSelectedDate && date === this.secondSelectedDate) {
            this.secondSelectedDate = undefined;
            return;
        }
        if (this.firstSelectedDate && this.firstSelectedDate === date) {
            this.firstSelectedDate = undefined;
            if (this.secondSelectedDate) {
                this.firstSelectedDate = this.secondSelectedDate;
                this.secondSelectedDate = undefined;
            }
            return;
        }
        if (!this.firstSelectedDate) {
            this.firstSelectedDate = date;
        }
        if (this.firstSelectedDate > date) {
            if (!this.secondSelectedDate) {
                this.secondSelectedDate = this.firstSelectedDate;
            }
            this.firstSelectedDate = date;
        }
        if (date > this.firstSelectedDate) {
            this.secondSelectedDate = date;
        }
    }
    cancel() {
        this.cancelled.next(true);
    }
    today() {
        const date = new Date();
        date.setHours(0, 0, 0, 0);
        this.firstSelectedDate = date;
        this.secondSelectedDate = date;
        this.datesApplied.next({ startDate: date, stopDate: date });
    }
    yesterday() {
        const date = new Date();
        date.setHours(0, 0, 0, 0);
        date.setDate(date.getDate() - 1);
        this.firstSelectedDate = date;
        this.secondSelectedDate = date;
        this.datesApplied.next({ startDate: date, stopDate: date });
    }
    thisMonth() {
        const date = new Date();
        this.firstSelectedDate = new Date(date.getFullYear(), date.getMonth(), 1);
        this.secondSelectedDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        this.datesApplied.next({ startDate: this.firstSelectedDate, stopDate: this.secondSelectedDate });
    }
    lastMonth() {
        const date = new Date();
        date.setMonth(date.getMonth() - 1);
        this.firstSelectedDate = new Date(date.getFullYear(), date.getMonth(), 1);
        this.secondSelectedDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);
        this.datesApplied.next({ startDate: this.firstSelectedDate, stopDate: this.secondSelectedDate });
    }
    thisYear() {
        const date = new Date();
        this.firstSelectedDate = new Date(date.getFullYear(), 0, 1);
        this.secondSelectedDate = new Date(date.getFullYear() + 1, 0, 0);
        this.datesApplied.next({ startDate: this.firstSelectedDate, stopDate: this.secondSelectedDate });
    }
    lastYear() {
        const date = new Date();
        date.setFullYear(date.getFullYear() - 1);
        this.firstSelectedDate = new Date(date.getFullYear(), 0, 1);
        this.secondSelectedDate = new Date(date.getFullYear() + 1, 0, 0);
        this.datesApplied.next({ startDate: this.firstSelectedDate, stopDate: this.secondSelectedDate });
    }
    firstMonthPrevious() {
        this.firstMonth.setMonth(this.firstMonth.getMonth() - 1);
        this.firstMonth = new Date(this.firstMonth);
        this.setWeeks();
    }
    firstMonthNext() {
        this.firstMonth.setMonth(this.firstMonth.getMonth() + 1);
        this.firstMonth = new Date(this.firstMonth);
        if (this.firstMonth.getMonth() === this.secondMonth.getMonth()) {
            this.secondMonth.setMonth(this.secondMonth.getMonth() + 1);
            this.secondMonth = new Date(this.secondMonth);
        }
        this.setWeeks();
    }
    secondMonthPrevious() {
        this.secondMonth.setMonth(this.secondMonth.getMonth() - 1);
        this.secondMonth = new Date(this.secondMonth);
        if (this.firstMonth.getMonth() === this.secondMonth.getMonth()) {
            this.firstMonth.setMonth(this.firstMonth.getMonth() - 1);
            this.firstMonth = new Date(this.firstMonth);
        }
        this.setWeeks();
    }
    secondMonthNext() {
        this.secondMonth.setMonth(this.secondMonth.getMonth() + 1);
        this.secondMonth = new Date(this.secondMonth);
        this.setWeeks();
    }
    applyDates() {
        this.datesApplied.next({ startDate: this.firstSelectedDate, stopDate: this.secondSelectedDate });
    }
    startDateFocusOut() {
        const startDateControlValue = this.dateRange.controls['startDate'].value;
        if (this.isDate(startDateControlValue)) {
            if (this.secondSelectedDate && startDateControlValue > this.secondSelectedDate) {
                this.firstSelectedDate = this.secondSelectedDate;
                this.secondSelectedDate = startDateControlValue;
            }
            else {
                this.firstSelectedDate = startDateControlValue;
            }
        }
        else {
            this.firstSelectedDate = this.privateFirstSelectedDate;
        }
    }
    endDateFocusOut() {
        const endDateControlValue = this.dateRange.controls['endDate'].value;
        if (this.isDate(endDateControlValue)) {
            if (this.firstSelectedDate && endDateControlValue < this.firstSelectedDate) {
                this.secondSelectedDate = this.firstSelectedDate;
                this.firstSelectedDate = endDateControlValue;
            }
            else {
                this.secondSelectedDate = endDateControlValue;
            }
        }
        else {
            this.secondSelectedDate = this.privateFirstSelectedDate;
        }
    }
    isToday(month, date) {
        const today = new Date();
        return (month === date.getMonth() &&
            date.getDate() === today.getDate() &&
            date.getMonth() === today.getMonth() &&
            date.getFullYear() === today.getFullYear());
    }
    isDate(date) {
        return date instanceof Date && !Number.isNaN(date.getTime());
    }
}
DatepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DatepickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
DatepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: DatepickerComponent, selector: "dfm-datepicker", inputs: { firstSelectedDate: "firstSelectedDate", secondSelectedDate: "secondSelectedDate" }, outputs: { datesApplied: "datesApplied", cancelled: "cancelled" }, ngImport: i0, template: "<div class=\"dfm-datepicker-container d-flex\">\n  <div class=\"default-date-options-container d-flex justify-content-center\">\n    <div class=\"default-date-options\">\n      <button class=\"btn btn-tertiary-gray\" (click)=\"today()\">Today</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"yesterday()\">Yesterday</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"thisMonth()\">This month</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"lastMonth()\">Last month</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"thisYear()\">This year</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"lastYear()\">Last year</button>\n    </div>\n  </div>\n  <div class=\"datepicker d-flex flex-column\">\n    <div class=\"datepicker-months d-flex flex-wrap justify-content-center\">\n      <div class=\"datepicker-month datepicker-month-left\">\n        <div class=\"datepicker-month-header d-flex justify-content-between align-items-center\">\n          <dfm-icon name=\"chevron-left\" class=\"month-icon dfm-text-main-500\" (click)=\"firstMonthPrevious()\"></dfm-icon>\n          <div class=\"my-auto text-md-medium\">\n            {{ firstMonth | date: 'MMMM yyyy' }}\n          </div>\n          <dfm-icon name=\"chevron-right\" class=\"month-icon dfm-text-main-500\" (click)=\"firstMonthNext()\"></dfm-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"monthView; context: { weeks: firstMonthWeeks }\"></ng-container>\n      </div>\n      <div class=\"datepicker-month\">\n        <div class=\"datepicker-month-header d-flex justify-content-between align-items-center\">\n          <dfm-icon name=\"chevron-left\" class=\"month-icon dfm-text-main-500\" (click)=\"secondMonthPrevious()\"></dfm-icon>\n          <div class=\"my-auto text-md-medium\">\n            {{ secondMonth | date: 'MMMM yyyy' }}\n          </div>\n          <dfm-icon name=\"chevron-right\" class=\"month-icon dfm-text-main-500\" (click)=\"secondMonthNext()\"></dfm-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"monthView; context: { weeks: secondMonthWeeks }\"></ng-container>\n      </div>\n    </div>\n    <form [formGroup]=\"dateRange\">\n      <div class=\"actions-bar d-flex align-items-center\">\n        <div class=\"d-flex actions-bar-inputs\">\n          <div class=\"datepicker-input\">\n            <dfm-input formControlName=\"startDate\" type=\"datepicker\" placeholder=\"Start Date\" (focusout)=\"startDateFocusOut()\"></dfm-input>\n          </div>\n          <div class=\"text-center\">\n            <span class=\"datepicker-input-dash my-auto\">-</span>\n          </div>\n          <div class=\"datepicker-input\">\n            <dfm-input formControlName=\"endDate\" type=\"datepicker\" placeholder=\"End Date\" (focusout)=\"endDateFocusOut()\"></dfm-input>\n          </div>\n        </div>\n        <div class=\"d-flex actions-bar-buttons\">\n          <dfm-button color=\"secondary\" size=\"md\" (click)=\"cancel()\">Cancel</dfm-button>\n          <dfm-button size=\"md\" (click)=\"applyDates()\">Apply dates</dfm-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #monthView let-weeks=\"weeks\">\n  <table>\n    <thead>\n      <tr>\n        <th *ngFor=\"let weekName of weekNames\">{{ weekName }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let week of weeks\">\n        <td\n          class=\"text-center\"\n          [ngClass]=\"{\n            'cell-wrapper-selected': isSelectedDate(day.date) && firstSelectedDate && secondSelectedDate,\n            'cell-wrapper-selected-first': firstSelectedDate && secondSelectedDate && firstSelectedDate.getTime() !== secondSelectedDate.getTime(),\n            'cell-wrapper-selected-second': firstSelectedDate && secondSelectedDate && firstSelectedDate.getTime() !== secondSelectedDate.getTime(),\n            'cell-wrapper-between-selection': isBetweenSelection(day.date),\n            'cell-wrapper-between-selection-right': isBetweenSelection(day.date) && i === 6,\n            'cell-wrapper-between-selection-left': isBetweenSelection(day.date) && i === 0\n          }\"\n          *ngFor=\"let day of week.days; index as i\"\n          (click)=\"selectDate(day.date)\"\n        >\n          <div\n            class=\"calendar-cell d-flex justify-content-center align-items-center\"\n            [ngClass]=\"{\n              'cell-selected': isSelectedDate(day.date),\n              'cell-between-selection': isBetweenSelection(day.date) && i !== 6 && i !== 0,\n              'cell-muted': !day.isCurrentMonth,\n              'cell-today': isToday(firstMonth.getMonth(), day.date)\n            }\"\n          >\n            {{ day.date.getDate() }}\n            <span *ngIf=\"isToday(firstMonth.getMonth(), day.date)\" class=\"cell-today-dot\"></span>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n", styles: [".dfm-datepicker-container{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:400;border-radius:8px;border:1px solid var(--dfm-datepicker-border);box-shadow:0 16px 64px -12px #10182824;background-color:var(--dfm-datepicker-bg);flex-wrap:wrap;width:-moz-fit-content;width:fit-content}.dfm-datepicker-container .default-date-options-container{flex-grow:1;width:min-content;border-right:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .default-date-options-container .default-date-options{padding:12px 16px;display:flex;align-items:flex-start;flex-wrap:wrap;height:min-content}.dfm-datepicker-container .default-date-options-container .default-date-options .btn.btn-tertiary-gray{padding:10px 16px;white-space:nowrap;color:var(--dfm-datepicker-default-date-options-color)}.dfm-datepicker-container .default-date-options-container .default-date-options .btn.btn-tertiary-gray:hover{background-color:var(--dfm-datepicker-default-date-options-bg-hover)}.dfm-datepicker-container .datepicker,.dfm-datepicker-container .datepicker-months{flex-grow:1}.dfm-datepicker-container .datepicker-months .datepicker-month{padding:26px 24px 20px}.dfm-datepicker-container .datepicker-months .datepicker-month.datepicker-month-left{border-right:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .datepicker-months .datepicker-month th{font-weight:500;text-align:center;color:var(--dfm-datepicker-month-header-color)}.dfm-datepicker-container .datepicker-months .datepicker-month th,.dfm-datepicker-container .datepicker-months .datepicker-month td{overflow:hidden;width:42px;height:42px}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-month-header{padding:6px 8px;margin-bottom:6px}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-month-header .month-icon{width:20px;height:20px;cursor:pointer}.dfm-datepicker-container .datepicker-months .datepicker-month .calendar-cell{height:100%;color:var(--dfm-datepicker-cell-color)}.dfm-datepicker-container .datepicker-months .datepicker-month .calendar-cell:hover{font-weight:500;background:var(--dfm-datepicker-cell-bg-hover);color:var(--dfm-datepicker-cell-color-hover);border-radius:50%;cursor:pointer}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-muted{color:var(--dfm-datepicker-cell-color-muted)}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected{background-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected-first{border-top-right-radius:0%;border-bottom-right-radius:0%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected-second{border-top-left-radius:0%;border-bottom-left-radius:0%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection{background-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-right-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-left-color:var(--dfm-datepicker-cell-wrapper-bg-selected)}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection-right{border-bottom-right-radius:50%;border-top-right-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection-left{border-bottom-left-radius:50%;border-top-left-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-selected{font-weight:500;background:var(--dfm-datepicker-cell-bg-selected);color:var(--dfm-datepicker-cell-color-selected);border-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-between-selection{position:relative;border-radius:0}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-input{width:115px}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-today:not(.cell-selected,.calendar-cell:hover,.cell-between-selection,.cell-between-selection-right,.cell-between-selection-left){background-color:var(--dfm-datepicker-cell-bg-today);border-radius:20px;position:relative}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-today:not(.cell-selected,.calendar-cell:hover) .cell-today-dot{position:absolute;left:calc(50% - 2.5px);bottom:4px;width:5px;height:5px;border-radius:50%;background-color:var(--dfm-datepicker-cell-color-today)}.dfm-datepicker-container .actions-bar{border-top:1px solid var(--dfm-datepicker-border);padding:16px;justify-content:space-between;flex-wrap:wrap}.dfm-datepicker-container .actions-bar .actions-bar-inputs{gap:12px;align-items:center}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input{width:115px}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input-dash{font-style:normal;font-weight:400;font-size:16px;line-height:24px;color:var(--dfm-datepicker-inputs-dash-color)}.dfm-datepicker-container .actions-bar .actions-bar-buttons{gap:12px}@media (max-width: 960px){.dfm-datepicker-container .default-date-options-container{border-right:none;border-bottom:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .default-date-options-container .default-date-options{flex-direction:row;flex-wrap:wrap;justify-content:center}.dfm-datepicker-container .datepicker-months .datepicker-month.datepicker-month-left{border-right:none}}@media (max-width: 680px){.dfm-datepicker-container .actions-bar{padding:0}.dfm-datepicker-container .actions-bar .actions-bar-inputs{width:100%;padding:16px}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input{flex:1}.dfm-datepicker-container .actions-bar .actions-bar-buttons{width:100%;flex-direction:column;padding:16px 16px 24px;border-top:1px solid var(--dfm-datepicker-border)}}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: InputComponent, selector: "dfm-input", inputs: ["type", "size", "label", "placeholder", "disabled", "hint", "icon", "isInvalid", "readonly"] }, { kind: "component", type: ButtonComponent, selector: "dfm-button", inputs: ["color", "size", "disabled", "leadingIcon", "trailingIcon"], outputs: ["clicked"] }, { kind: "directive", type: i1$2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i1$2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i1$2.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }, { kind: "pipe", type: i1$1.DatePipe, name: "date" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DatepickerComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-datepicker', template: "<div class=\"dfm-datepicker-container d-flex\">\n  <div class=\"default-date-options-container d-flex justify-content-center\">\n    <div class=\"default-date-options\">\n      <button class=\"btn btn-tertiary-gray\" (click)=\"today()\">Today</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"yesterday()\">Yesterday</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"thisMonth()\">This month</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"lastMonth()\">Last month</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"thisYear()\">This year</button>\n      <button class=\"btn btn-tertiary-gray\" (click)=\"lastYear()\">Last year</button>\n    </div>\n  </div>\n  <div class=\"datepicker d-flex flex-column\">\n    <div class=\"datepicker-months d-flex flex-wrap justify-content-center\">\n      <div class=\"datepicker-month datepicker-month-left\">\n        <div class=\"datepicker-month-header d-flex justify-content-between align-items-center\">\n          <dfm-icon name=\"chevron-left\" class=\"month-icon dfm-text-main-500\" (click)=\"firstMonthPrevious()\"></dfm-icon>\n          <div class=\"my-auto text-md-medium\">\n            {{ firstMonth | date: 'MMMM yyyy' }}\n          </div>\n          <dfm-icon name=\"chevron-right\" class=\"month-icon dfm-text-main-500\" (click)=\"firstMonthNext()\"></dfm-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"monthView; context: { weeks: firstMonthWeeks }\"></ng-container>\n      </div>\n      <div class=\"datepicker-month\">\n        <div class=\"datepicker-month-header d-flex justify-content-between align-items-center\">\n          <dfm-icon name=\"chevron-left\" class=\"month-icon dfm-text-main-500\" (click)=\"secondMonthPrevious()\"></dfm-icon>\n          <div class=\"my-auto text-md-medium\">\n            {{ secondMonth | date: 'MMMM yyyy' }}\n          </div>\n          <dfm-icon name=\"chevron-right\" class=\"month-icon dfm-text-main-500\" (click)=\"secondMonthNext()\"></dfm-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"monthView; context: { weeks: secondMonthWeeks }\"></ng-container>\n      </div>\n    </div>\n    <form [formGroup]=\"dateRange\">\n      <div class=\"actions-bar d-flex align-items-center\">\n        <div class=\"d-flex actions-bar-inputs\">\n          <div class=\"datepicker-input\">\n            <dfm-input formControlName=\"startDate\" type=\"datepicker\" placeholder=\"Start Date\" (focusout)=\"startDateFocusOut()\"></dfm-input>\n          </div>\n          <div class=\"text-center\">\n            <span class=\"datepicker-input-dash my-auto\">-</span>\n          </div>\n          <div class=\"datepicker-input\">\n            <dfm-input formControlName=\"endDate\" type=\"datepicker\" placeholder=\"End Date\" (focusout)=\"endDateFocusOut()\"></dfm-input>\n          </div>\n        </div>\n        <div class=\"d-flex actions-bar-buttons\">\n          <dfm-button color=\"secondary\" size=\"md\" (click)=\"cancel()\">Cancel</dfm-button>\n          <dfm-button size=\"md\" (click)=\"applyDates()\">Apply dates</dfm-button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n\n<ng-template #monthView let-weeks=\"weeks\">\n  <table>\n    <thead>\n      <tr>\n        <th *ngFor=\"let weekName of weekNames\">{{ weekName }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let week of weeks\">\n        <td\n          class=\"text-center\"\n          [ngClass]=\"{\n            'cell-wrapper-selected': isSelectedDate(day.date) && firstSelectedDate && secondSelectedDate,\n            'cell-wrapper-selected-first': firstSelectedDate && secondSelectedDate && firstSelectedDate.getTime() !== secondSelectedDate.getTime(),\n            'cell-wrapper-selected-second': firstSelectedDate && secondSelectedDate && firstSelectedDate.getTime() !== secondSelectedDate.getTime(),\n            'cell-wrapper-between-selection': isBetweenSelection(day.date),\n            'cell-wrapper-between-selection-right': isBetweenSelection(day.date) && i === 6,\n            'cell-wrapper-between-selection-left': isBetweenSelection(day.date) && i === 0\n          }\"\n          *ngFor=\"let day of week.days; index as i\"\n          (click)=\"selectDate(day.date)\"\n        >\n          <div\n            class=\"calendar-cell d-flex justify-content-center align-items-center\"\n            [ngClass]=\"{\n              'cell-selected': isSelectedDate(day.date),\n              'cell-between-selection': isBetweenSelection(day.date) && i !== 6 && i !== 0,\n              'cell-muted': !day.isCurrentMonth,\n              'cell-today': isToday(firstMonth.getMonth(), day.date)\n            }\"\n          >\n            {{ day.date.getDate() }}\n            <span *ngIf=\"isToday(firstMonth.getMonth(), day.date)\" class=\"cell-today-dot\"></span>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-template>\n", styles: [".dfm-datepicker-container{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:400;border-radius:8px;border:1px solid var(--dfm-datepicker-border);box-shadow:0 16px 64px -12px #10182824;background-color:var(--dfm-datepicker-bg);flex-wrap:wrap;width:-moz-fit-content;width:fit-content}.dfm-datepicker-container .default-date-options-container{flex-grow:1;width:min-content;border-right:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .default-date-options-container .default-date-options{padding:12px 16px;display:flex;align-items:flex-start;flex-wrap:wrap;height:min-content}.dfm-datepicker-container .default-date-options-container .default-date-options .btn.btn-tertiary-gray{padding:10px 16px;white-space:nowrap;color:var(--dfm-datepicker-default-date-options-color)}.dfm-datepicker-container .default-date-options-container .default-date-options .btn.btn-tertiary-gray:hover{background-color:var(--dfm-datepicker-default-date-options-bg-hover)}.dfm-datepicker-container .datepicker,.dfm-datepicker-container .datepicker-months{flex-grow:1}.dfm-datepicker-container .datepicker-months .datepicker-month{padding:26px 24px 20px}.dfm-datepicker-container .datepicker-months .datepicker-month.datepicker-month-left{border-right:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .datepicker-months .datepicker-month th{font-weight:500;text-align:center;color:var(--dfm-datepicker-month-header-color)}.dfm-datepicker-container .datepicker-months .datepicker-month th,.dfm-datepicker-container .datepicker-months .datepicker-month td{overflow:hidden;width:42px;height:42px}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-month-header{padding:6px 8px;margin-bottom:6px}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-month-header .month-icon{width:20px;height:20px;cursor:pointer}.dfm-datepicker-container .datepicker-months .datepicker-month .calendar-cell{height:100%;color:var(--dfm-datepicker-cell-color)}.dfm-datepicker-container .datepicker-months .datepicker-month .calendar-cell:hover{font-weight:500;background:var(--dfm-datepicker-cell-bg-hover);color:var(--dfm-datepicker-cell-color-hover);border-radius:50%;cursor:pointer}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-muted{color:var(--dfm-datepicker-cell-color-muted)}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected{background-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected-first{border-top-right-radius:0%;border-bottom-right-radius:0%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-selected-second{border-top-left-radius:0%;border-bottom-left-radius:0%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection{background-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-right-color:var(--dfm-datepicker-cell-wrapper-bg-selected);border-left-color:var(--dfm-datepicker-cell-wrapper-bg-selected)}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection-right{border-bottom-right-radius:50%;border-top-right-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-wrapper-between-selection-left{border-bottom-left-radius:50%;border-top-left-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-selected{font-weight:500;background:var(--dfm-datepicker-cell-bg-selected);color:var(--dfm-datepicker-cell-color-selected);border-radius:50%}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-between-selection{position:relative;border-radius:0}.dfm-datepicker-container .datepicker-months .datepicker-month .datepicker-input{width:115px}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-today:not(.cell-selected,.calendar-cell:hover,.cell-between-selection,.cell-between-selection-right,.cell-between-selection-left){background-color:var(--dfm-datepicker-cell-bg-today);border-radius:20px;position:relative}.dfm-datepicker-container .datepicker-months .datepicker-month .cell-today:not(.cell-selected,.calendar-cell:hover) .cell-today-dot{position:absolute;left:calc(50% - 2.5px);bottom:4px;width:5px;height:5px;border-radius:50%;background-color:var(--dfm-datepicker-cell-color-today)}.dfm-datepicker-container .actions-bar{border-top:1px solid var(--dfm-datepicker-border);padding:16px;justify-content:space-between;flex-wrap:wrap}.dfm-datepicker-container .actions-bar .actions-bar-inputs{gap:12px;align-items:center}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input{width:115px}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input-dash{font-style:normal;font-weight:400;font-size:16px;line-height:24px;color:var(--dfm-datepicker-inputs-dash-color)}.dfm-datepicker-container .actions-bar .actions-bar-buttons{gap:12px}@media (max-width: 960px){.dfm-datepicker-container .default-date-options-container{border-right:none;border-bottom:1px solid var(--dfm-datepicker-border)}.dfm-datepicker-container .default-date-options-container .default-date-options{flex-direction:row;flex-wrap:wrap;justify-content:center}.dfm-datepicker-container .datepicker-months .datepicker-month.datepicker-month-left{border-right:none}}@media (max-width: 680px){.dfm-datepicker-container .actions-bar{padding:0}.dfm-datepicker-container .actions-bar .actions-bar-inputs{width:100%;padding:16px}.dfm-datepicker-container .actions-bar .actions-bar-inputs .datepicker-input{flex:1}.dfm-datepicker-container .actions-bar .actions-bar-buttons{width:100%;flex-direction:column;padding:16px 16px 24px;border-top:1px solid var(--dfm-datepicker-border)}}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { datesApplied: [{
                type: Output
            }], cancelled: [{
                type: Output
            }], firstSelectedDate: [{
                type: Input
            }], secondSelectedDate: [{
                type: Input
            }] } });

class DatepickerModule {
}
DatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: DatepickerModule, declarations: [DatepickerComponent], imports: [CommonModule, InputModule, ButtonModule, ReactiveFormsModule, IconModule], exports: [DatepickerComponent] });
DatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DatepickerModule, imports: [CommonModule, InputModule, ButtonModule, ReactiveFormsModule, IconModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DatepickerModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DatepickerComponent],
                    imports: [CommonModule, InputModule, ButtonModule, ReactiveFormsModule, IconModule],
                    exports: [DatepickerComponent],
                }]
        }] });

var SortOrder;
(function (SortOrder) {
    SortOrder[SortOrder["Asc"] = 0] = "Asc";
    SortOrder[SortOrder["Desc"] = 1] = "Desc";
})(SortOrder || (SortOrder = {}));

class TableHeaderCellComponent {
    constructor() {
        this.sortable = false;
        this.sort = new EventEmitter();
        this.sortOrder = SortOrder.Asc;
        this.SortOrder = SortOrder;
    }
    sortClicked() {
        if (!this.sortable) {
            return;
        }
        this.sortOrder = this.sortOrder === SortOrder.Asc ? SortOrder.Desc : SortOrder.Asc;
        this.sort.emit(this.sortOrder);
    }
}
TableHeaderCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableHeaderCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TableHeaderCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TableHeaderCellComponent, selector: "dfm-table-header-cell", inputs: { sortable: "sortable" }, outputs: { sort: "sort" }, ngImport: i0, template: "<th class=\"cell\" (click)=\"sortClicked()\" [class.sortable]=\"sortable\">\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"sortable && sortOrder === SortOrder.Asc\" name=\"arrow-up\" class=\"sort-icon\"></dfm-icon>\n  <dfm-icon *ngIf=\"sortable && sortOrder !== SortOrder.Asc\" name=\"arrow-down\" class=\"sort-icon\"></dfm-icon>\n</th>\n", styles: [":host-context(.checkbox-cell.checkbox-first-frozen)~:host:nth-child(2) .cell,:host-context(.first-frozen) :host:first-child .cell{min-width:200px;box-shadow:12px 0 8px #0000000d;position:sticky;left:0;z-index:2}:host-context(.checkbox-cell.checkbox-first-frozen) .cell{min-width:initial}:host{display:contents}.cell{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:27px 24px;background-color:var(--dfm-table-even-cell-bg);border-bottom:1px solid var(--dfm-table-border);font-weight:700;vertical-align:middle}.cell.sortable{cursor:pointer}.cell.sortable .sort-icon{display:inline-block;width:16px;height:16px;margin-left:4px}:host-context(.checkbox-cell) .cell{width:1%;padding-right:0}:host-context(.checkbox-cell)~:host:nth-child(2) .cell{padding-left:0}\n"], dependencies: [{ kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableHeaderCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-table-header-cell', template: "<th class=\"cell\" (click)=\"sortClicked()\" [class.sortable]=\"sortable\">\n  <ng-content></ng-content>\n  <dfm-icon *ngIf=\"sortable && sortOrder === SortOrder.Asc\" name=\"arrow-up\" class=\"sort-icon\"></dfm-icon>\n  <dfm-icon *ngIf=\"sortable && sortOrder !== SortOrder.Asc\" name=\"arrow-down\" class=\"sort-icon\"></dfm-icon>\n</th>\n", styles: [":host-context(.checkbox-cell.checkbox-first-frozen)~:host:nth-child(2) .cell,:host-context(.first-frozen) :host:first-child .cell{min-width:200px;box-shadow:12px 0 8px #0000000d;position:sticky;left:0;z-index:2}:host-context(.checkbox-cell.checkbox-first-frozen) .cell{min-width:initial}:host{display:contents}.cell{font-family:Montserrat;font-style:normal;font-size:12px;line-height:18px;padding:27px 24px;background-color:var(--dfm-table-even-cell-bg);border-bottom:1px solid var(--dfm-table-border);font-weight:700;vertical-align:middle}.cell.sortable{cursor:pointer}.cell.sortable .sort-icon{display:inline-block;width:16px;height:16px;margin-left:4px}:host-context(.checkbox-cell) .cell{width:1%;padding-right:0}:host-context(.checkbox-cell)~:host:nth-child(2) .cell{padding-left:0}\n"] }]
        }], propDecorators: { sortable: [{
                type: Input
            }], sort: [{
                type: Output
            }] } });

class TableBodyCellComponent {
    constructor() {
        this.propagateClick = true;
        this.contentAlign = 'left';
    }
    propagateEvent(clickEvent) {
        if (!this.propagateClick) {
            clickEvent.stopPropagation();
        }
    }
}
TableBodyCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableBodyCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TableBodyCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TableBodyCellComponent, selector: "dfm-table-body-cell", inputs: { propagateClick: "propagateClick", contentAlign: "contentAlign" }, ngImport: i0, template: "<td class=\"cell\">\n  <div\n    class=\"content\"\n    [class.content-right-align]=\"contentAlign === 'right'\"\n    [class.content-non-clickable]=\"!propagateClick\"\n    (click)=\"propagateEvent($event)\"\n  >\n    <ng-content></ng-content>\n  </div>\n</td>\n", styles: [":host-context(.checkbox-cell.checkbox-first-frozen)~:host:nth-child(2) .cell,:host-context(.first-frozen) :host:first-child .cell{box-shadow:12px 0 8px #0000000d;position:sticky;left:0}:host-context(.checkbox-cell) .cell{width:1%;padding-right:0}:host-context(.checkbox-cell)~:host:nth-child(2) .cell{padding-left:0}:host{display:contents;background-color:inherit}:host:first-child .cell{font-weight:600}:host .cell{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:400;padding:16px 24px;vertical-align:middle;background-color:inherit;max-width:40vw;overflow:hidden;text-overflow:ellipsis}:host .cell .content{width:-moz-fit-content;width:fit-content;max-width:100%}:host .cell .content-right-align{float:right}:host .cell .content-non-clickable{cursor:initial}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableBodyCellComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-table-body-cell', template: "<td class=\"cell\">\n  <div\n    class=\"content\"\n    [class.content-right-align]=\"contentAlign === 'right'\"\n    [class.content-non-clickable]=\"!propagateClick\"\n    (click)=\"propagateEvent($event)\"\n  >\n    <ng-content></ng-content>\n  </div>\n</td>\n", styles: [":host-context(.checkbox-cell.checkbox-first-frozen)~:host:nth-child(2) .cell,:host-context(.first-frozen) :host:first-child .cell{box-shadow:12px 0 8px #0000000d;position:sticky;left:0}:host-context(.checkbox-cell) .cell{width:1%;padding-right:0}:host-context(.checkbox-cell)~:host:nth-child(2) .cell{padding-left:0}:host{display:contents;background-color:inherit}:host:first-child .cell{font-weight:600}:host .cell{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:400;padding:16px 24px;vertical-align:middle;background-color:inherit;max-width:40vw;overflow:hidden;text-overflow:ellipsis}:host .cell .content{width:-moz-fit-content;width:fit-content;max-width:100%}:host .cell .content-right-align{float:right}:host .cell .content-non-clickable{cursor:initial}\n"] }]
        }], propDecorators: { propagateClick: [{
                type: Input
            }], contentAlign: [{
                type: Input
            }] } });

class TableComponent {
    constructor() {
        this.items = [];
        this.selectable = false;
        this.rowClickable = false;
        this.selected = new EventEmitter();
        this.rowClicked = new EventEmitter();
        this.tableSizeChanged$ = new Subject();
        this.isHorizontalScrollDisplayed = false;
        this.selectedItems = {};
    }
    get areAllSelected() {
        return this.items.length && Object.values(this.selectedItems).filter((v) => v).length === this.items.length;
    }
    ngOnInit() {
        this.tableSizeChanged$.pipe(debounceTime(100)).subscribe((event) => {
            const tableWrapperWidth = this.tableWrapper.nativeElement.offsetWidth;
            const tableWidth = event.newRect.width;
            this.isHorizontalScrollDisplayed = tableWrapperWidth < tableWidth;
        });
        if (this.selectable) {
            this.items.forEach((i) => (this.selectedItems[i.id] = false));
        }
        if (this.clearSelected$) {
            this.clearSelected$.subscribe(() => {
                this.selectedItems = {};
                this.selected.emit([]);
            });
        }
    }
    checkTableSize(event) {
        this.tableSizeChanged$.next(event);
    }
    selectAllItems() {
        if (!this.areAllSelected) {
            const ids = this.items.map((i) => {
                this.selectedItems[i.id] = true;
                return i.id;
            });
            this.selected.emit(ids);
        }
        else {
            this.selectedItems = {};
            this.selected.emit([]);
        }
    }
    selectItem(selected, id) {
        this.selectedItems[id] = selected;
        const ids = Object.entries(this.selectedItems)
            .filter(([, value]) => value)
            .map(([key]) => key);
        this.selected.emit(ids);
    }
    click(item) {
        this.rowClicked.emit(item);
    }
}
TableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
TableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: TableComponent, selector: "dfm-table", inputs: { items: "items", selectable: "selectable", clearSelected$: "clearSelected$", rowClickable: "rowClickable" }, outputs: { selected: "selected", rowClicked: "rowClicked" }, queries: [{ propertyName: "headerRowTemplate", first: true, predicate: ["headerRowTemplate"], descendants: true }, { propertyName: "bodyRowTemplate", first: true, predicate: ["bodyRowTemplate"], descendants: true }], viewQueries: [{ propertyName: "tableWrapper", first: true, predicate: ["tableWrapper"], descendants: true }], ngImport: i0, template: "<div class=\"dfm-table-wrapper\" #tableWrapper>\n  <table class=\"dfm-table w-100\" [class.first-frozen]=\"isHorizontalScrollDisplayed\" (resized)=\"checkTableSize($event)\">\n    <thead class=\"header\">\n      <tr>\n        <dfm-table-header-cell *ngIf=\"selectable\" class=\"checkbox-cell\" [class.checkbox-first-frozen]=\"isHorizontalScrollDisplayed\">\n          <dfm-checkbox class=\"d-flex dfm-me-2\" [ngModel]=\"areAllSelected\" (click)=\"selectAllItems()\" [disabled]=\"!items.length\"></dfm-checkbox>\n        </dfm-table-header-cell>\n        <ng-content *ngTemplateOutlet=\"headerRowTemplate\"></ng-content>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of items\" class=\"body-row\" (click)=\"click(item)\" [class.pointer]=\"rowClickable\">\n        <dfm-table-body-cell *ngIf=\"selectable\" class=\"checkbox-cell\" [class.checkbox-first-frozen]=\"isHorizontalScrollDisplayed\">\n          <dfm-checkbox class=\"d-flex dfm-me-2\" [ngModel]=\"selectedItems[item.id]\" (ngModelChange)=\"selectItem($event, item.id)\"></dfm-checkbox>\n        </dfm-table-body-cell>\n        <ng-container *ngTemplateOutlet=\"bodyRowTemplate; context: { $implicit: item }\"></ng-container>\n      </tr>\n    </tbody>\n  </table>\n</div>\n", styles: [":host{height:100%}.dfm-table-wrapper{overflow:overlay;border:1px solid var(--dfm-table-border);border-radius:8px;white-space:nowrap;max-height:100%}.dfm-table{border-collapse:separate;border-spacing:0}.dfm-table .header{position:sticky;top:0;z-index:1}.dfm-table .body-row{border-top:1px solid var(--dfm-table-border)}.dfm-table .body-row:nth-child(even){background-color:var(--dfm-table-even-cell-bg)}.dfm-table .body-row:nth-child(odd){background-color:var(--dfm-table-odd-cell-bg)}\n"], dependencies: [{ kind: "directive", type: i1$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.ResizedDirective, selector: "[resized]", outputs: ["resized"] }, { kind: "component", type: CheckboxComponent, selector: "dfm-checkbox", inputs: ["indeterminate"] }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: TableHeaderCellComponent, selector: "dfm-table-header-cell", inputs: ["sortable"], outputs: ["sort"] }, { kind: "component", type: TableBodyCellComponent, selector: "dfm-table-body-cell", inputs: ["propagateClick", "contentAlign"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-table', template: "<div class=\"dfm-table-wrapper\" #tableWrapper>\n  <table class=\"dfm-table w-100\" [class.first-frozen]=\"isHorizontalScrollDisplayed\" (resized)=\"checkTableSize($event)\">\n    <thead class=\"header\">\n      <tr>\n        <dfm-table-header-cell *ngIf=\"selectable\" class=\"checkbox-cell\" [class.checkbox-first-frozen]=\"isHorizontalScrollDisplayed\">\n          <dfm-checkbox class=\"d-flex dfm-me-2\" [ngModel]=\"areAllSelected\" (click)=\"selectAllItems()\" [disabled]=\"!items.length\"></dfm-checkbox>\n        </dfm-table-header-cell>\n        <ng-content *ngTemplateOutlet=\"headerRowTemplate\"></ng-content>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let item of items\" class=\"body-row\" (click)=\"click(item)\" [class.pointer]=\"rowClickable\">\n        <dfm-table-body-cell *ngIf=\"selectable\" class=\"checkbox-cell\" [class.checkbox-first-frozen]=\"isHorizontalScrollDisplayed\">\n          <dfm-checkbox class=\"d-flex dfm-me-2\" [ngModel]=\"selectedItems[item.id]\" (ngModelChange)=\"selectItem($event, item.id)\"></dfm-checkbox>\n        </dfm-table-body-cell>\n        <ng-container *ngTemplateOutlet=\"bodyRowTemplate; context: { $implicit: item }\"></ng-container>\n      </tr>\n    </tbody>\n  </table>\n</div>\n", styles: [":host{height:100%}.dfm-table-wrapper{overflow:overlay;border:1px solid var(--dfm-table-border);border-radius:8px;white-space:nowrap;max-height:100%}.dfm-table{border-collapse:separate;border-spacing:0}.dfm-table .header{position:sticky;top:0;z-index:1}.dfm-table .body-row{border-top:1px solid var(--dfm-table-border)}.dfm-table .body-row:nth-child(even){background-color:var(--dfm-table-even-cell-bg)}.dfm-table .body-row:nth-child(odd){background-color:var(--dfm-table-odd-cell-bg)}\n"] }]
        }], propDecorators: { items: [{
                type: Input
            }], selectable: [{
                type: Input
            }], clearSelected$: [{
                type: Input
            }], rowClickable: [{
                type: Input
            }], selected: [{
                type: Output
            }], rowClicked: [{
                type: Output
            }], headerRowTemplate: [{
                type: ContentChild,
                args: ['headerRowTemplate']
            }], bodyRowTemplate: [{
                type: ContentChild,
                args: ['bodyRowTemplate']
            }], tableWrapper: [{
                type: ViewChild,
                args: ['tableWrapper', { static: false }]
            }] } });

class TableModule {
}
TableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
TableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: TableModule, declarations: [TableComponent, TableHeaderCellComponent, TableBodyCellComponent], imports: [CommonModule, IconModule, AngularResizeEventModule, BaseCheckboxModule, FormsModule], exports: [TableComponent, TableHeaderCellComponent, TableBodyCellComponent] });
TableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableModule, imports: [CommonModule, IconModule, AngularResizeEventModule, BaseCheckboxModule, FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: TableModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TableComponent, TableHeaderCellComponent, TableBodyCellComponent],
                    imports: [CommonModule, IconModule, AngularResizeEventModule, BaseCheckboxModule, FormsModule],
                    exports: [TableComponent, TableHeaderCellComponent, TableBodyCellComponent],
                }]
        }] });

class SelectItem {
    constructor(name, value, desription = null) {
        this.name = name;
        this.value = value;
        this.description = desription;
    }
}

class ItemsCompactHelper {
    static getItemsUnion(itemsUnionName = '+100 items') {
        return new SelectItem(itemsUnionName, '');
    }
    static compactItems(itemsToCompact, containerWidth, itemsGap, itemsElementRef, itemsUnionName = 'items') {
        let items = [...itemsToCompact];
        let itemsUnionIndex = items.length - 1;
        const itemsUnion = items[itemsUnionIndex];
        const itemsCalculations = this.getItemsCalculations(itemsUnionIndex, containerWidth, itemsGap, itemsElementRef);
        const numberOfItemsToDisplay = itemsCalculations.lastVisibleIndex;
        const numberOfItemsToHide = items.length - 1 - numberOfItemsToDisplay;
        if (numberOfItemsToHide > 1) {
            const itemsUnionNamePostfix = itemsUnionName ? ` ${itemsUnionName}` : '';
            itemsUnion.name = numberOfItemsToHide > 100 ? itemsUnion.name : `${numberOfItemsToHide}${itemsUnionNamePostfix}`;
            items = [...items.slice(0, numberOfItemsToDisplay), itemsUnion];
            itemsUnionIndex = items.length - 1;
        }
        else {
            items = items.slice(0, items.length - 1);
        }
        return { items, itemsUnionIndex, containerWidth: itemsCalculations.containerWidth };
    }
    static getItemsCalculations(itemsUnionIndex, containerWidth, itemsGap, itemsElementRef) {
        let lastVisibleItemIndex = 0;
        let visibleItemsUnionIndex = 0;
        let itemsContainerWidth = 0;
        let itemsContainerWithUnionWidth = 0;
        const itemsUnionWidth = itemsElementRef.get(itemsUnionIndex).nativeElement.offsetWidth + itemsGap;
        for (let i = 0; i < itemsElementRef.length - 1; i++) {
            const selectedItemWidth = itemsElementRef.get(i).nativeElement.offsetWidth + itemsGap;
            const possibleItemsContainerWithUnionWidth = itemsContainerWidth + itemsUnionWidth;
            if (possibleItemsContainerWithUnionWidth <= containerWidth) {
                itemsContainerWithUnionWidth = possibleItemsContainerWithUnionWidth;
                visibleItemsUnionIndex = i;
            }
            itemsContainerWidth += selectedItemWidth;
            if (itemsContainerWidth <= containerWidth) {
                lastVisibleItemIndex = i;
            }
            else {
                return {
                    lastVisibleIndex: visibleItemsUnionIndex < lastVisibleItemIndex ? visibleItemsUnionIndex : lastVisibleItemIndex,
                    containerWidth: itemsContainerWithUnionWidth < itemsContainerWidth && itemsContainerWithUnionWidth !== 0
                        ? itemsContainerWithUnionWidth
                        : itemsContainerWidth,
                };
            }
        }
        return { lastVisibleIndex: lastVisibleItemIndex, containerWidth: itemsContainerWidth };
    }
}

class DomChangeDirective {
    constructor(elementRef) {
        this.elementRef = elementRef;
        this.dfmDomChange = new EventEmitter();
        const element = this.elementRef.nativeElement;
        this.changes = new MutationObserver((mutations) => {
            mutations.forEach((mutation) => this.dfmDomChange.emit(mutation));
        });
        this.changes.observe(element, {
            attributes: true,
            childList: true,
            characterData: true,
        });
    }
    ngOnDestroy() {
        this.changes.disconnect();
    }
}
DomChangeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DomChangeDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
DomChangeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.2.12", type: DomChangeDirective, selector: "[dfmDomChange]", outputs: { dfmDomChange: "dfmDomChange" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DomChangeDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[dfmDomChange]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { dfmDomChange: [{
                type: Output
            }] } });

class InputDropdownComponent extends BaseControlValueAccessor {
    constructor(changeDetectionRef, control, eRef) {
        super();
        this.changeDetectionRef = changeDetectionRef;
        this.control = control;
        this.eRef = eRef;
        this.items = [];
        this.label = '';
        this.placeholder = '';
        this.hint = '';
        this.showDescription = true;
        this.multiple = false;
        this.size = 'md';
        this.icon = '';
        this.minQueryLength = 0;
        this.typeToSearch = false;
        this.typeToSearchText = '';
        this.loading = false;
        this.asyncSearch = false;
        this.searchInput = new EventEmitter();
        this.menuClosed = new EventEmitter();
        this.search = '';
        this.selectedItemTags = [];
        this.selectedItemTagsUnionIndex = null;
        this.filteredItems = [];
        this.defaultMultipleDropdownPaddingRight = 8;
        this.multipleDropdownWithIconPaddingRight = 51;
        this.isDropdownClosed = true;
        this.selectedItems = [];
        this.wasInside = false;
        this.value = null;
        if (this.control) {
            this.control.valueAccessor = this;
        }
    }
    clickInside() {
        this.wasInside = true;
    }
    clickout() {
        var _a;
        if (!this.wasInside) {
            (_a = this.dropdownInstance) === null || _a === void 0 ? void 0 : _a.hide();
        }
        this.wasInside = false;
    }
    ngOnInit() {
        if (this.minQueryLength && !this.typeToSearchText) {
            this.typeToSearchText = `Please enter ${this.minQueryLength} or more characters`;
        }
        this.filteredItems = [...this.items];
    }
    ngAfterViewInit() {
        this.dropdownInstance = Dropdown.getOrCreateInstance(this.dropdownRef.nativeElement, {
            offset: [0, 3],
        });
    }
    ngOnChanges(changes) {
        var _a, _b;
        if (((_a = changes['items']) === null || _a === void 0 ? void 0 : _a.previousValue) !== ((_b = changes['items']) === null || _b === void 0 ? void 0 : _b.currentValue)) {
            this.filteredItems = [...changes['items'].currentValue];
        }
    }
    writeValue(value) {
        this.resetInputDropdown();
        if (!this.multiple) {
            const item = this.items.find((i) => i.value === value);
            if (item) {
                this.updateInputDropdown(item, true);
            }
        }
        else if (value && value.length) {
            const items = this.items.filter((i) => value.includes(i.value));
            items.forEach((i) => this.updateInputDropdown(i, false));
        }
    }
    updateSearch(query) {
        this.search = query;
        if (!this.multiple && this.value) {
            this.value = null;
        }
        if (query && query.length >= this.minQueryLength) {
            this.searchInput.emit(query);
        }
        else {
            this.filteredItems = this.asyncSearch ? [] : [...this.items];
        }
    }
    searchItems(query) {
        const lowerCaseQuery = query.toLowerCase();
        this.filteredItems = this.items.filter((i) => {
            var _a;
            return i.name.toLowerCase().includes(lowerCaseQuery) ||
                i.value.toLowerCase().includes(lowerCaseQuery) ||
                ((_a = i.description) === null || _a === void 0 ? void 0 : _a.toLowerCase().includes(lowerCaseQuery));
        });
    }
    selectItem(item) {
        const isSelected = this.multiple ? this.value && this.value.includes(item.value) : this.value === item.value;
        this.updateInputDropdown(item, isSelected);
    }
    removeItem(item) {
        this.updateMultiInputDropdown(item, true);
    }
    updateSelectedItems() {
        const itemsUnion = ItemsCompactHelper.getItemsUnion();
        this.selectedItemTags = [...this.selectedItems, itemsUnion];
        this.changeDetectionRef.detectChanges();
        const { items, itemsUnionIndex, containerWidth } = ItemsCompactHelper.compactItems(this.selectedItemTags, this.searchInputRef.nativeElement.offsetWidth - 210, 8, this.selectedItemsRef);
        this.selectedItemTags = [...items];
        this.selectedItemTagsUnionIndex = itemsUnionIndex;
        const paddingRight = this.typeToSearch ? this.defaultMultipleDropdownPaddingRight : this.multipleDropdownWithIconPaddingRight;
        this.searchInputRef.nativeElement.querySelector('.dfm-input').style.paddingRight = `${containerWidth + paddingRight}px`;
    }
    openDropdown() {
        var _a;
        (_a = this.dropdownInstance) === null || _a === void 0 ? void 0 : _a.show();
    }
    checkIfDropdownIsClosed(mutationRecord) {
        if (mutationRecord.type === 'attributes' && mutationRecord.attributeName === 'class') {
            this.isDropdownClosed = !this.isDropdownClosed;
            if (this.isDropdownClosed) {
                this.menuClosed.emit();
            }
        }
    }
    updateInputDropdown(item, isSelected) {
        if (this.multiple) {
            this.updateMultiInputDropdown(item, isSelected);
        }
        else {
            this.updateSingleInputDropdown(item);
        }
    }
    updateMultiInputDropdown(item, isSelected) {
        if (isSelected) {
            this.value = this.value.filter((i) => i !== item.value);
            this.selectedItems = this.selectedItems.filter((i) => i.value !== item.value);
        }
        else {
            this.value = this.value && this.value.length ? [...this.value, item.value] : [item.value];
            this.selectedItems.push(item);
        }
        this.updateSelectedItems();
        this.filteredItems = this.asyncSearch ? [] : [...this.items];
        this.search = '';
    }
    updateSingleInputDropdown(item) {
        this.setSingleInputDropdown(item);
    }
    setSingleInputDropdown(item) {
        var _a;
        this.value = item.value;
        this.search = item.name;
        if (this.asyncSearch) {
            this.filteredItems = [item];
        }
        (_a = this.dropdownInstance) === null || _a === void 0 ? void 0 : _a.hide();
    }
    resetInputDropdown() {
        this.value = null;
        this.search = '';
        this.selectedItems = [];
        this.filteredItems = this.asyncSearch ? [] : [...this.items];
    }
    focusout(value) {
        setTimeout(() => {
            if (!this.search) {
                this.onTouch(value);
            }
        }, 250);
    }
}
InputDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$2.NgControl, optional: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
InputDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: InputDropdownComponent, selector: "dfm-input-dropdown", inputs: { items: "items", label: "label", placeholder: "placeholder", hint: "hint", showDescription: "showDescription", multiple: "multiple", size: "size", icon: "icon", minQueryLength: "minQueryLength", typeToSearch: "typeToSearch", typeToSearchText: "typeToSearchText", loading: "loading", asyncSearch: "asyncSearch" }, outputs: { searchInput: "searchInput", menuClosed: "menuClosed" }, host: { listeners: { "click": "clickInside()", "document:click": "clickout($event)" } }, viewQueries: [{ propertyName: "selectedItemsContainerRef", first: true, predicate: ["selectedItemsContainerRef"], descendants: true }, { propertyName: "searchInputRef", first: true, predicate: ["searchInputRef"], descendants: true, read: ElementRef }, { propertyName: "dropdownRef", first: true, predicate: ["dropdown"], descendants: true }, { propertyName: "selectedItemsRef", predicate: ["selectedItemRef"], descendants: true, read: ElementRef }], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: "<div class=\"dropdown input-dropdown input-dropdown-{{ size }}\">\n  <div #dropdown>\n    <div class=\"input-container\">\n      <dfm-input\n        [placeholder]=\"placeholder\"\n        [icon]=\"icon\"\n        [size]=\"size\"\n        [ngModel]=\"search\"\n        (ngModelChange)=\"updateSearch($event)\"\n        (focusout)=\"focusout($event)\"\n        [isInvalid]=\"!!(control && control.touched && !control.valid)\"\n        [readonly]=\"!typeToSearch\"\n        [label]=\"label\"\n        (click)=\"openDropdown()\"\n        #searchInputRef\n      ></dfm-input>\n      <dfm-icon name=\"chevron-down\" *ngIf=\"!typeToSearch\" class=\"dropdown-icon\"></dfm-icon>\n    </div>\n  </div>\n  <div *ngIf=\"selectedItemTags.length\" class=\"selected-items\" [class.selected-items-with-dropdown-icon]=\"!typeToSearch\" #selectedItemsContainerRef>\n    <dfm-tag\n      *ngFor=\"let selectedItem of selectedItemTags; let i = index\"\n      color=\"brown\"\n      [action]=\"selectedItemTagsUnionIndex === i ? null : 'close'\"\n      size=\"lg\"\n      (closeAction)=\"removeItem(selectedItem)\"\n      #selectedItemRef\n      >{{ selectedItem.name }}</dfm-tag\n    >\n  </div>\n  <span *ngIf=\"hint\" class=\"dfm-input-hint\">{{ hint }}</span>\n  <dfm-error [control]=\"control\"></dfm-error>\n  <div class=\"dropdown-menu dropdown-menu-end w-100 p-0\" (dfmDomChange)=\"checkIfDropdownIsClosed($event)\">\n    <ng-container *ngIf=\"loading; then loadingTemplate; else searchTemplate\"></ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"input-dropdown-item\">Loading...</div>\n    </ng-template>\n\n    <ng-template #searchTemplate>\n      <div *ngIf=\"search.length < minQueryLength\" class=\"input-dropdown-item type-to-search\">{{ typeToSearchText }}</div>\n      <ng-container *ngIf=\"search.length >= minQueryLength\">\n        <ng-container *ngIf=\"filteredItems && filteredItems.length; then itemsTemplate; else noItemsTemplate\"> </ng-container>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #itemsTemplate>\n      <div *ngFor=\"let item of filteredItems\" (click)=\"selectItem(item)\" clickable class=\"input-dropdown-item option\">\n        <div class=\"option-content\">\n          {{ item.name }}\n          <span *ngIf=\"showDescription\" class=\"option-description\">{{ item.description }}</span>\n        </div>\n        <dfm-icon\n          *ngIf=\"value && ((!multiple && value === item.value) || (multiple && value.includes(item.value)))\"\n          name=\"check\"\n          class=\"option-selected\"\n        ></dfm-icon>\n      </div>\n    </ng-template>\n\n    <ng-template #noItemsTemplate>\n      <div class=\"input-dropdown-item\">No items found</div>\n    </ng-template>\n  </div>\n</div>\n", styles: [".input-dropdown{position:relative}.input-dropdown .input-dropdown-item{padding:10px 14px}.input-dropdown .option{display:flex;justify-content:space-between;cursor:pointer}.input-dropdown .option:hover{background-color:var(--dfm-input-dropdown-option-bg-hover)}.input-dropdown .option:hover:first-child{border-top-left-radius:8px;border-top-right-radius:8px}.input-dropdown .option:hover:last-child{border-bottom-left-radius:8px;border-bottom-right-radius:8px}.input-dropdown .option .option-content{display:flex;align-items:center;gap:8px}.input-dropdown .option .option-description{color:var(--dfm-input-dropdown-option-description-color);font-size:14px;font-weight:400;line-height:20px}.input-dropdown .option .option-selected{width:20px;height:20px;color:var(--dfm-input-dropdown-option-selected-color)}.input-dropdown .selected-items{position:absolute;top:7px;right:8px;display:flex;justify-content:flex-end;flex-wrap:wrap;gap:8px;max-width:calc(100% - 200px)}.input-dropdown .selected-items-with-dropdown-icon{right:43px}.input-dropdown .input-container{position:relative}.input-dropdown .input-container .dropdown-icon{position:absolute;display:block;right:15px;bottom:12px;width:20px;height:20px;color:var(--dfm-input-dropdown-chevron-icon-color);cursor:pointer}.input-dropdown.input-dropdown-sm .input-container .dropdown-icon{bottom:8px;right:14px}\n"], dependencies: [{ kind: "directive", type: i1$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1$2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i1$2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }, { kind: "component", type: InputComponent, selector: "dfm-input", inputs: ["type", "size", "label", "placeholder", "disabled", "hint", "icon", "isInvalid", "readonly"] }, { kind: "component", type: TagComponent, selector: "dfm-tag", inputs: ["color", "size", "action", "count", "icon"], outputs: ["closeAction"] }, { kind: "component", type: ErrorComponent, selector: "dfm-error", inputs: ["control"] }, { kind: "directive", type: DomChangeDirective, selector: "[dfmDomChange]", outputs: ["dfmDomChange"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-input-dropdown', template: "<div class=\"dropdown input-dropdown input-dropdown-{{ size }}\">\n  <div #dropdown>\n    <div class=\"input-container\">\n      <dfm-input\n        [placeholder]=\"placeholder\"\n        [icon]=\"icon\"\n        [size]=\"size\"\n        [ngModel]=\"search\"\n        (ngModelChange)=\"updateSearch($event)\"\n        (focusout)=\"focusout($event)\"\n        [isInvalid]=\"!!(control && control.touched && !control.valid)\"\n        [readonly]=\"!typeToSearch\"\n        [label]=\"label\"\n        (click)=\"openDropdown()\"\n        #searchInputRef\n      ></dfm-input>\n      <dfm-icon name=\"chevron-down\" *ngIf=\"!typeToSearch\" class=\"dropdown-icon\"></dfm-icon>\n    </div>\n  </div>\n  <div *ngIf=\"selectedItemTags.length\" class=\"selected-items\" [class.selected-items-with-dropdown-icon]=\"!typeToSearch\" #selectedItemsContainerRef>\n    <dfm-tag\n      *ngFor=\"let selectedItem of selectedItemTags; let i = index\"\n      color=\"brown\"\n      [action]=\"selectedItemTagsUnionIndex === i ? null : 'close'\"\n      size=\"lg\"\n      (closeAction)=\"removeItem(selectedItem)\"\n      #selectedItemRef\n      >{{ selectedItem.name }}</dfm-tag\n    >\n  </div>\n  <span *ngIf=\"hint\" class=\"dfm-input-hint\">{{ hint }}</span>\n  <dfm-error [control]=\"control\"></dfm-error>\n  <div class=\"dropdown-menu dropdown-menu-end w-100 p-0\" (dfmDomChange)=\"checkIfDropdownIsClosed($event)\">\n    <ng-container *ngIf=\"loading; then loadingTemplate; else searchTemplate\"></ng-container>\n\n    <ng-template #loadingTemplate>\n      <div class=\"input-dropdown-item\">Loading...</div>\n    </ng-template>\n\n    <ng-template #searchTemplate>\n      <div *ngIf=\"search.length < minQueryLength\" class=\"input-dropdown-item type-to-search\">{{ typeToSearchText }}</div>\n      <ng-container *ngIf=\"search.length >= minQueryLength\">\n        <ng-container *ngIf=\"filteredItems && filteredItems.length; then itemsTemplate; else noItemsTemplate\"> </ng-container>\n      </ng-container>\n    </ng-template>\n\n    <ng-template #itemsTemplate>\n      <div *ngFor=\"let item of filteredItems\" (click)=\"selectItem(item)\" clickable class=\"input-dropdown-item option\">\n        <div class=\"option-content\">\n          {{ item.name }}\n          <span *ngIf=\"showDescription\" class=\"option-description\">{{ item.description }}</span>\n        </div>\n        <dfm-icon\n          *ngIf=\"value && ((!multiple && value === item.value) || (multiple && value.includes(item.value)))\"\n          name=\"check\"\n          class=\"option-selected\"\n        ></dfm-icon>\n      </div>\n    </ng-template>\n\n    <ng-template #noItemsTemplate>\n      <div class=\"input-dropdown-item\">No items found</div>\n    </ng-template>\n  </div>\n</div>\n", styles: [".input-dropdown{position:relative}.input-dropdown .input-dropdown-item{padding:10px 14px}.input-dropdown .option{display:flex;justify-content:space-between;cursor:pointer}.input-dropdown .option:hover{background-color:var(--dfm-input-dropdown-option-bg-hover)}.input-dropdown .option:hover:first-child{border-top-left-radius:8px;border-top-right-radius:8px}.input-dropdown .option:hover:last-child{border-bottom-left-radius:8px;border-bottom-right-radius:8px}.input-dropdown .option .option-content{display:flex;align-items:center;gap:8px}.input-dropdown .option .option-description{color:var(--dfm-input-dropdown-option-description-color);font-size:14px;font-weight:400;line-height:20px}.input-dropdown .option .option-selected{width:20px;height:20px;color:var(--dfm-input-dropdown-option-selected-color)}.input-dropdown .selected-items{position:absolute;top:7px;right:8px;display:flex;justify-content:flex-end;flex-wrap:wrap;gap:8px;max-width:calc(100% - 200px)}.input-dropdown .selected-items-with-dropdown-icon{right:43px}.input-dropdown .input-container{position:relative}.input-dropdown .input-container .dropdown-icon{position:absolute;display:block;right:15px;bottom:12px;width:20px;height:20px;color:var(--dfm-input-dropdown-chevron-icon-color);cursor:pointer}.input-dropdown.input-dropdown-sm .input-container .dropdown-icon{bottom:8px;right:14px}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i0.ChangeDetectorRef }, { type: i1$2.NgControl, decorators: [{
                        type: Optional
                    }] }, { type: i0.ElementRef }];
    }, propDecorators: { items: [{
                type: Input
            }], label: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], hint: [{
                type: Input
            }], showDescription: [{
                type: Input
            }], multiple: [{
                type: Input
            }], size: [{
                type: Input
            }], icon: [{
                type: Input
            }], minQueryLength: [{
                type: Input
            }], typeToSearch: [{
                type: Input
            }], typeToSearchText: [{
                type: Input
            }], loading: [{
                type: Input
            }], asyncSearch: [{
                type: Input
            }], searchInput: [{
                type: Output
            }], menuClosed: [{
                type: Output
            }], selectedItemsContainerRef: [{
                type: ViewChild,
                args: ['selectedItemsContainerRef']
            }], selectedItemsRef: [{
                type: ViewChildren,
                args: ['selectedItemRef', { read: ElementRef }]
            }], searchInputRef: [{
                type: ViewChild,
                args: ['searchInputRef', { read: ElementRef }]
            }], dropdownRef: [{
                type: ViewChild,
                args: ['dropdown']
            }], clickInside: [{
                type: HostListener,
                args: ['click']
            }], clickout: [{
                type: HostListener,
                args: ['document:click', ['$event']]
            }] } });

class DirectivesModule {
}
DirectivesModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DirectivesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DirectivesModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: DirectivesModule, declarations: [DomChangeDirective], exports: [DomChangeDirective] });
DirectivesModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DirectivesModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DirectivesModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [DomChangeDirective],
                    exports: [DomChangeDirective],
                }]
        }] });

class InputDropdownModule {
}
InputDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
InputDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownModule, declarations: [InputDropdownComponent], imports: [CommonModule, FormsModule, IconModule, InputModule, TagModule, ErrorModule, DirectivesModule], exports: [InputDropdownComponent] });
InputDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownModule, imports: [CommonModule, FormsModule, IconModule, InputModule, TagModule, ErrorModule, DirectivesModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: InputDropdownModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [InputDropdownComponent],
                    imports: [CommonModule, FormsModule, IconModule, InputModule, TagModule, ErrorModule, DirectivesModule],
                    exports: [InputDropdownComponent],
                }]
        }] });

class NavigationBarComponent {
    constructor() {
        this.content = null;
        this.isCollapsed = false;
    }
    ngAfterViewInit() {
        if (this.content) {
            this.content.onscroll = (e) => (this.isCollapsed = e.target.scrollTop > 64);
        }
    }
}
NavigationBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NavigationBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: NavigationBarComponent, selector: "dfm-navigation-bar", inputs: { content: "content" }, queries: [{ propertyName: "navigationItems", first: true, predicate: ["navigationItems"], descendants: true }, { propertyName: "profileItems", first: true, predicate: ["profileItems"], descendants: true }], ngImport: i0, template: "<div class=\"dfm-navigation-bar\" [class.collapsed]=\"isCollapsed\">\n  <img src=\"assets/images/logo.svg\" class=\"logo\" routerLink=\"/\" />\n  <div class=\"navigation-items\">\n    <ng-container *ngTemplateOutlet=\"navigationItems\"></ng-container>\n  </div>\n  <div class=\"profile-items\">\n    <ng-container *ngTemplateOutlet=\"profileItems\"></ng-container>\n  </div>\n</div>\n\n<div class=\"dfm-navigation-bar-mobile\">\n  <ng-container *ngTemplateOutlet=\"navigationItems\"></ng-container>\n</div>\n", styles: [".dfm-navigation-bar{position:sticky;top:0;z-index:100;display:flex;background-color:var(--dfm-navbar-bg);padding:8px 18px 8px 32px;filter:drop-shadow(0px 4px 4px rgba(0,0,0,.1));transition:all .2s ease-in-out}.dfm-navigation-bar.collapsed{padding:0 18px 0 32px}.dfm-navigation-bar.collapsed .logo{margin-right:27px}.dfm-navigation-bar .logo{margin-right:45px;cursor:pointer}.dfm-navigation-bar .navigation-items{display:flex}.dfm-navigation-bar .profile-items{display:flex;flex:1;justify-content:flex-end}.dfm-navigation-bar-mobile{display:none}@media (max-width: 1440px){.dfm-navigation-bar,.dfm-navigation-bar.collapsed{padding:0 18px 0 32px}.dfm-navigation-bar .logo,.dfm-navigation-bar.collapsed .logo{margin-right:27px}}@media (max-width: 680px){.dfm-navigation-bar,.dfm-navigation-bar.collapsed{padding:9px 16px 9px 18px}.dfm-navigation-bar .navigation-items,.dfm-navigation-bar.collapsed .navigation-items{display:none}.dfm-navigation-bar .profile-items,.dfm-navigation-bar.collapsed .profile-items{gap:30px}.dfm-navigation-bar-mobile{display:flex;position:fixed;left:0;bottom:0;right:0;z-index:100;background-color:var(--dfm-navbar-bg);gap:8px;justify-content:center;padding:9px 16px 8px;filter:drop-shadow(0px -4px 2px rgba(0,0,0,.05))}}\n"], dependencies: [{ kind: "directive", type: i1$1.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2$1.RouterLink, selector: ":not(a):not(area)[routerLink]", inputs: ["queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-navigation-bar', template: "<div class=\"dfm-navigation-bar\" [class.collapsed]=\"isCollapsed\">\n  <img src=\"assets/images/logo.svg\" class=\"logo\" routerLink=\"/\" />\n  <div class=\"navigation-items\">\n    <ng-container *ngTemplateOutlet=\"navigationItems\"></ng-container>\n  </div>\n  <div class=\"profile-items\">\n    <ng-container *ngTemplateOutlet=\"profileItems\"></ng-container>\n  </div>\n</div>\n\n<div class=\"dfm-navigation-bar-mobile\">\n  <ng-container *ngTemplateOutlet=\"navigationItems\"></ng-container>\n</div>\n", styles: [".dfm-navigation-bar{position:sticky;top:0;z-index:100;display:flex;background-color:var(--dfm-navbar-bg);padding:8px 18px 8px 32px;filter:drop-shadow(0px 4px 4px rgba(0,0,0,.1));transition:all .2s ease-in-out}.dfm-navigation-bar.collapsed{padding:0 18px 0 32px}.dfm-navigation-bar.collapsed .logo{margin-right:27px}.dfm-navigation-bar .logo{margin-right:45px;cursor:pointer}.dfm-navigation-bar .navigation-items{display:flex}.dfm-navigation-bar .profile-items{display:flex;flex:1;justify-content:flex-end}.dfm-navigation-bar-mobile{display:none}@media (max-width: 1440px){.dfm-navigation-bar,.dfm-navigation-bar.collapsed{padding:0 18px 0 32px}.dfm-navigation-bar .logo,.dfm-navigation-bar.collapsed .logo{margin-right:27px}}@media (max-width: 680px){.dfm-navigation-bar,.dfm-navigation-bar.collapsed{padding:9px 16px 9px 18px}.dfm-navigation-bar .navigation-items,.dfm-navigation-bar.collapsed .navigation-items{display:none}.dfm-navigation-bar .profile-items,.dfm-navigation-bar.collapsed .profile-items{gap:30px}.dfm-navigation-bar-mobile{display:flex;position:fixed;left:0;bottom:0;right:0;z-index:100;background-color:var(--dfm-navbar-bg);gap:8px;justify-content:center;padding:9px 16px 8px;filter:drop-shadow(0px -4px 2px rgba(0,0,0,.05))}}\n"] }]
        }], propDecorators: { content: [{
                type: Input
            }], navigationItems: [{
                type: ContentChild,
                args: ['navigationItems']
            }], profileItems: [{
                type: ContentChild,
                args: ['profileItems']
            }] } });

class NavigationItemComponent {
    constructor() {
        this.title = '';
        this.icon = '';
        this.routerLink = null;
        this.exact = false;
    }
}
NavigationItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationItemComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NavigationItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: NavigationItemComponent, selector: "dfm-navigation-item", inputs: { title: "title", icon: "icon", routerLink: "routerLink", exact: "exact" }, ngImport: i0, template: "<a class=\"dfm-navigation-item\" [routerLink]=\"routerLink\" routerLinkActive=\"dfm-navigation-item-selected\" [routerLinkActiveOptions]=\"{ exact: exact }\">\n  <dfm-icon [name]=\"icon\" class=\"navigation-item-icon\"></dfm-icon>\n  <span class=\"navigation-label\">{{ title }}</span>\n</a>\n", styles: [".dfm-navigation-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:24px;display:flex;color:var(--dfm-navbar-item-color);background-color:var(--dfm-navbar-item-bg);width:-moz-fit-content;width:fit-content;padding:14px 16px;gap:8px;text-decoration:none;transition:all .2s ease-in-out}.dfm-navigation-item-selected{background-color:var(--dfm-navbar-item-selected-bg);box-shadow:0 1px 2px #1018280d}.dfm-navigation-item:hover{cursor:pointer;background-color:var(--dfm-navbar-item-hover-bg)}.dfm-navigation-item .navigation-item-icon{display:block;width:20px;height:20px}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:8px 14px;border-radius:0}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item .navigation-label{display:none}@media (max-width: 1440px){.dfm-navigation-item{padding:8px 14px;border-radius:0}.dfm-navigation-item .navigation-label{display:none}}@media (max-width: 680px){:host-context(.dfm-navigation-bar-mobile) .dfm-navigation-item{padding:14px;border-radius:24px}:host-context(.dfm-navigation-bar) .dfm-navigation-item,:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:0}}\n"], dependencies: [{ kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }, { kind: "directive", type: i2$1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "directive", type: i2$1.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "ariaCurrentWhenActive", "routerLinkActive"], outputs: ["isActiveChange"], exportAs: ["routerLinkActive"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationItemComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-navigation-item', template: "<a class=\"dfm-navigation-item\" [routerLink]=\"routerLink\" routerLinkActive=\"dfm-navigation-item-selected\" [routerLinkActiveOptions]=\"{ exact: exact }\">\n  <dfm-icon [name]=\"icon\" class=\"navigation-item-icon\"></dfm-icon>\n  <span class=\"navigation-label\">{{ title }}</span>\n</a>\n", styles: [".dfm-navigation-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:24px;display:flex;color:var(--dfm-navbar-item-color);background-color:var(--dfm-navbar-item-bg);width:-moz-fit-content;width:fit-content;padding:14px 16px;gap:8px;text-decoration:none;transition:all .2s ease-in-out}.dfm-navigation-item-selected{background-color:var(--dfm-navbar-item-selected-bg);box-shadow:0 1px 2px #1018280d}.dfm-navigation-item:hover{cursor:pointer;background-color:var(--dfm-navbar-item-hover-bg)}.dfm-navigation-item .navigation-item-icon{display:block;width:20px;height:20px}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:8px 14px;border-radius:0}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item .navigation-label{display:none}@media (max-width: 1440px){.dfm-navigation-item{padding:8px 14px;border-radius:0}.dfm-navigation-item .navigation-label{display:none}}@media (max-width: 680px){:host-context(.dfm-navigation-bar-mobile) .dfm-navigation-item{padding:14px;border-radius:24px}:host-context(.dfm-navigation-bar) .dfm-navigation-item,:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:0}}\n"] }]
        }], propDecorators: { title: [{
                type: Input
            }], icon: [{
                type: Input
            }], routerLink: [{
                type: Input
            }], exact: [{
                type: Input
            }] } });

class NavigationItemTenantComponent {
    constructor() {
        this.tenants = [];
        this.currentTenantValue = '';
        this.tenantChanged = new EventEmitter();
        this.currentTenant = null;
    }
    ngOnInit() {
        if (this.currentTenantValue) {
            this.currentTenant = this.tenants.find((t) => t.value === this.currentTenantValue) || null;
        }
    }
    select(tenant) {
        if (this.currentTenantValue === tenant.value) {
            return;
        }
        this.currentTenantValue = tenant.value;
        this.currentTenant = tenant;
        this.tenantChanged.emit(this.currentTenantValue);
    }
}
NavigationItemTenantComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationItemTenantComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
NavigationItemTenantComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: NavigationItemTenantComponent, selector: "dfm-navigation-item-tenant", inputs: { tenants: "tenants", currentTenantValue: "currentTenantValue" }, outputs: { tenantChanged: "tenantChanged" }, ngImport: i0, template: "<div *ngIf=\"currentTenant\">\n  <div class=\"dfm-navigation-item dfm-navigaion-item-tenant dropdown\" *ngIf=\"currentTenant\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    {{ currentTenant.name }}\n    <dfm-icon name=\"chevron-down\" class=\"dropdown-icon\"></dfm-icon>\n  </div>\n\n  <div class=\"dropdown-menu dropdown-menu-end dfm-tenants-dropdown-menu\">\n    <div *ngFor=\"let tenant of tenants\" class=\"dropdown-item\" (click)=\"select(tenant)\" class=\"option\">\n      {{ tenant.name }}\n      <dfm-icon *ngIf=\"currentTenant.value === tenant.value\" name=\"check\" class=\"option-selected\"></dfm-icon>\n    </div>\n  </div>\n</div>\n", styles: [".dfm-navigation-item .dropdown-icon{display:inline-block;width:20px;height:20px}.dfm-tenants-dropdown-menu{padding:0}.dfm-tenants-dropdown-menu .option{display:flex;justify-content:space-between;cursor:pointer;padding:10px 14px}.dfm-tenants-dropdown-menu .option:hover{background-color:var(--dfm-input-dropdown-option-bg-hover)}.dfm-tenants-dropdown-menu .option:hover:first-child{border-top-left-radius:8px;border-top-right-radius:8px}.dfm-tenants-dropdown-menu .option:hover:last-child{border-bottom-left-radius:8px;border-bottom-right-radius:8px}.dfm-tenants-dropdown-menu .option .option-selected{width:20px;height:20px;color:var(--dfm-input-dropdown-option-selected-color)}\n", ".dfm-navigation-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:24px;display:flex;color:var(--dfm-navbar-item-color);background-color:var(--dfm-navbar-item-bg);width:-moz-fit-content;width:fit-content;padding:14px 16px;gap:8px;text-decoration:none;transition:all .2s ease-in-out}.dfm-navigation-item-selected{background-color:var(--dfm-navbar-item-selected-bg);box-shadow:0 1px 2px #1018280d}.dfm-navigation-item:hover{cursor:pointer;background-color:var(--dfm-navbar-item-hover-bg)}.dfm-navigation-item .navigation-item-icon{display:block;width:20px;height:20px}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:8px 14px;border-radius:0}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item .navigation-label{display:none}@media (max-width: 1440px){.dfm-navigation-item{padding:8px 14px;border-radius:0}.dfm-navigation-item .navigation-label{display:none}}@media (max-width: 680px){:host-context(.dfm-navigation-bar-mobile) .dfm-navigation-item{padding:14px;border-radius:24px}:host-context(.dfm-navigation-bar) .dfm-navigation-item,:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:0}}\n"], dependencies: [{ kind: "directive", type: i1$1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1$1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationItemTenantComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-navigation-item-tenant', template: "<div *ngIf=\"currentTenant\">\n  <div class=\"dfm-navigation-item dfm-navigaion-item-tenant dropdown\" *ngIf=\"currentTenant\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n    {{ currentTenant.name }}\n    <dfm-icon name=\"chevron-down\" class=\"dropdown-icon\"></dfm-icon>\n  </div>\n\n  <div class=\"dropdown-menu dropdown-menu-end dfm-tenants-dropdown-menu\">\n    <div *ngFor=\"let tenant of tenants\" class=\"dropdown-item\" (click)=\"select(tenant)\" class=\"option\">\n      {{ tenant.name }}\n      <dfm-icon *ngIf=\"currentTenant.value === tenant.value\" name=\"check\" class=\"option-selected\"></dfm-icon>\n    </div>\n  </div>\n</div>\n", styles: [".dfm-navigation-item .dropdown-icon{display:inline-block;width:20px;height:20px}.dfm-tenants-dropdown-menu{padding:0}.dfm-tenants-dropdown-menu .option{display:flex;justify-content:space-between;cursor:pointer;padding:10px 14px}.dfm-tenants-dropdown-menu .option:hover{background-color:var(--dfm-input-dropdown-option-bg-hover)}.dfm-tenants-dropdown-menu .option:hover:first-child{border-top-left-radius:8px;border-top-right-radius:8px}.dfm-tenants-dropdown-menu .option:hover:last-child{border-bottom-left-radius:8px;border-bottom-right-radius:8px}.dfm-tenants-dropdown-menu .option .option-selected{width:20px;height:20px;color:var(--dfm-input-dropdown-option-selected-color)}\n", ".dfm-navigation-item{font-family:Montserrat;font-style:normal;font-size:14px;line-height:20px;font-weight:500;border-radius:24px;display:flex;color:var(--dfm-navbar-item-color);background-color:var(--dfm-navbar-item-bg);width:-moz-fit-content;width:fit-content;padding:14px 16px;gap:8px;text-decoration:none;transition:all .2s ease-in-out}.dfm-navigation-item-selected{background-color:var(--dfm-navbar-item-selected-bg);box-shadow:0 1px 2px #1018280d}.dfm-navigation-item:hover{cursor:pointer;background-color:var(--dfm-navbar-item-hover-bg)}.dfm-navigation-item .navigation-item-icon{display:block;width:20px;height:20px}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:8px 14px;border-radius:0}:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item .navigation-label{display:none}@media (max-width: 1440px){.dfm-navigation-item{padding:8px 14px;border-radius:0}.dfm-navigation-item .navigation-label{display:none}}@media (max-width: 680px){:host-context(.dfm-navigation-bar-mobile) .dfm-navigation-item{padding:14px;border-radius:24px}:host-context(.dfm-navigation-bar) .dfm-navigation-item,:host-context(.dfm-navigation-bar.collapsed) .dfm-navigation-item{padding:0}}\n"] }]
        }], propDecorators: { tenants: [{
                type: Input
            }], currentTenantValue: [{
                type: Input
            }], tenantChanged: [{
                type: Output
            }] } });

class NavigationBarModule {
}
NavigationBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NavigationBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarModule, declarations: [NavigationBarComponent, NavigationItemComponent, NavigationItemTenantComponent], imports: [CommonModule, IconModule, RouterModule], exports: [NavigationBarComponent, NavigationItemComponent, NavigationItemTenantComponent] });
NavigationBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarModule, imports: [CommonModule, IconModule, RouterModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: NavigationBarModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [NavigationBarComponent, NavigationItemComponent, NavigationItemTenantComponent],
                    imports: [CommonModule, IconModule, RouterModule],
                    exports: [NavigationBarComponent, NavigationItemComponent, NavigationItemTenantComponent],
                }]
        }] });

class ClipboardService {
    constructor(translationService) {
        this.translationService = translationService;
        this.copySubject = new Subject();
        this.copySubject
            .pipe(debounceTime$1(300), map((x) => this.copyToClipboard(x)))
            .subscribe();
    }
    emitToClipboard(value) {
        this.copySubject.next(value);
    }
    copyToClipboard(value) {
        // https://stackoverflow.com/questions/49102724/angular-5-copy-to-clipboard
        const selBox = document.createElement('textarea');
        selBox.style.position = 'fixed';
        selBox.style.left = '0';
        selBox.style.top = '0';
        selBox.style.opacity = '0';
        selBox.value = value;
        document.body.appendChild(selBox);
        selBox.focus();
        selBox.select();
        document.execCommand('copy');
        document.body.removeChild(selBox);
    }
}
ClipboardService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardService, deps: [{ token: i1$3.TranslateService }], target: i0.ɵɵFactoryTarget.Injectable });
ClipboardService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1$3.TranslateService }]; } });

class ClipboardComponent {
    constructor(clipboardSerice, translateService) {
        this.clipboardSerice = clipboardSerice;
        this.translateService = translateService;
        this.clip = '';
        this.alwaysVisible = false;
        this.isCopied = false;
        this.copyToClipboardText = 'Copy to clipboard';
        this.copiedToClipboardText = 'Copied!';
        this.copyToClipboardTextKey = 'DESIGN_SYSTEM.MODULES.CLIPBOARD.COPY_TEXT';
        this.copiedToClipboardTextKey = 'DESIGN_SYSTEM.MODULES.CLIPBOARD.COPIED_TEXT';
        this.tooltips = [];
    }
    ngOnInit() {
        this.translateService.get(this.copyToClipboardTextKey).subscribe((t) => {
            if (t !== this.copyToClipboardTextKey) {
                this.copyToClipboardText = t;
            }
        });
        this.translateService.get(this.copiedToClipboardTextKey).subscribe((t) => {
            if (t !== this.copiedToClipboardTextKey) {
                this.copiedToClipboardText = t;
            }
        });
    }
    ngAfterViewInit() {
        const copyTooltip = new Tooltip(this.copyIcon.nativeElement, { title: this.copyToClipboardText });
        const copiedTooltip = new Tooltip(this.copiedIcon.nativeElement, { title: this.copiedToClipboardText });
        this.tooltips.push(copyTooltip, copiedTooltip);
    }
    ngOnDestroy() {
        this.tooltips.forEach((t) => t.dispose());
    }
    copyToClipboard() {
        this.clipboardSerice.emitToClipboard(this.clip);
        this.isCopied = true;
        setTimeout(() => {
            this.isCopied = false;
        }, 1000);
    }
}
ClipboardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardComponent, deps: [{ token: ClipboardService }, { token: i1$3.TranslateService }], target: i0.ɵɵFactoryTarget.Component });
ClipboardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: ClipboardComponent, selector: "dfm-clipboard", inputs: { clip: "clip", alwaysVisible: "alwaysVisible" }, viewQueries: [{ propertyName: "copyIcon", first: true, predicate: ["copyIcon"], descendants: true, read: ElementRef }, { propertyName: "copiedIcon", first: true, predicate: ["copiedIcon"], descendants: true, read: ElementRef }], ngImport: i0, template: `
    <div class="d-flex dfm-gap-8 show-hidden">
      <div><ng-content></ng-content></div>
      <dfm-icon
        #copyIcon
        (click)="copyToClipboard(); $event.stopPropagation()"
        class="dfm-clipboard pointer icon-15 align-self-center"
        [ngClass]="{ hide: !alwaysVisible, 'd-none': isCopied }"
        name="copy-06"
      >
      </dfm-icon>
      <dfm-icon
        #copiedIcon
        (click)="$event.stopPropagation()"
        name="check"
        class="dfm-clipboard-copied pointer icon-15 align-self-center"
        [ngClass]="{ hide: !alwaysVisible, 'd-none': !isCopied }"
      ></dfm-icon>
    </div>
  `, isInline: true, styles: [".dfm-clipboard{color:var(--dfm-clipboard-color)}.dfm-clipboard:hover{color:var(--dfm-clipboard-color-hover)}.dfm-clipboard.hidden{display:none}.dfm-clipboard-copied{color:var(--dfm-clipboard-color-copied)}.dfm-clipboard-copied.hidden{display:none}\n"], dependencies: [{ kind: "directive", type: i1$1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: IconComponent, selector: "dfm-icon", inputs: ["name"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dfm-clipboard', template: `
    <div class="d-flex dfm-gap-8 show-hidden">
      <div><ng-content></ng-content></div>
      <dfm-icon
        #copyIcon
        (click)="copyToClipboard(); $event.stopPropagation()"
        class="dfm-clipboard pointer icon-15 align-self-center"
        [ngClass]="{ hide: !alwaysVisible, 'd-none': isCopied }"
        name="copy-06"
      >
      </dfm-icon>
      <dfm-icon
        #copiedIcon
        (click)="$event.stopPropagation()"
        name="check"
        class="dfm-clipboard-copied pointer icon-15 align-self-center"
        [ngClass]="{ hide: !alwaysVisible, 'd-none': !isCopied }"
      ></dfm-icon>
    </div>
  `, styles: [".dfm-clipboard{color:var(--dfm-clipboard-color)}.dfm-clipboard:hover{color:var(--dfm-clipboard-color-hover)}.dfm-clipboard.hidden{display:none}.dfm-clipboard-copied{color:var(--dfm-clipboard-color-copied)}.dfm-clipboard-copied.hidden{display:none}\n"] }]
        }], ctorParameters: function () { return [{ type: ClipboardService }, { type: i1$3.TranslateService }]; }, propDecorators: { clip: [{
                type: Input
            }], alwaysVisible: [{
                type: Input
            }], copyIcon: [{
                type: ViewChild,
                args: ['copyIcon', { read: ElementRef }]
            }], copiedIcon: [{
                type: ViewChild,
                args: ['copiedIcon', { read: ElementRef }]
            }] } });

class ClipboardModule {
}
ClipboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ClipboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: ClipboardModule, declarations: [ClipboardComponent], imports: [CommonModule, IconModule, i1$3.TranslateModule], exports: [ClipboardComponent] });
ClipboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardModule, imports: [CommonModule, IconModule, TranslateModule.forChild()] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: ClipboardModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [ClipboardComponent],
                    imports: [CommonModule, IconModule, TranslateModule.forChild()],
                    exports: [ClipboardComponent],
                }]
        }] });

class DesignSystemModule {
}
DesignSystemModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DesignSystemModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemModule, imports: [CommonModule,
        IconModule,
        BadgeModule,
        InputModule,
        ErrorModule,
        TagModule,
        BaseCheckboxModule,
        TextAreaModule,
        InputDropdownModule,
        DatepickerModule,
        TableModule,
        CardModule,
        NavigationBarModule,
        NotificationModule,
        DirectivesModule,
        ClipboardModule], exports: [ButtonModule,
        IconModule,
        BadgeModule,
        InputModule,
        ErrorModule,
        TagModule,
        BaseCheckboxModule,
        TextAreaModule,
        InputDropdownModule,
        DatepickerModule,
        TableModule,
        CardModule,
        NavigationBarModule,
        NotificationModule,
        DirectivesModule,
        ClipboardModule] });
DesignSystemModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemModule, imports: [CommonModule,
        IconModule,
        BadgeModule,
        InputModule,
        ErrorModule,
        TagModule,
        BaseCheckboxModule,
        TextAreaModule,
        InputDropdownModule,
        DatepickerModule,
        TableModule,
        CardModule,
        NavigationBarModule,
        NotificationModule,
        DirectivesModule,
        ClipboardModule, ButtonModule,
        IconModule,
        BadgeModule,
        InputModule,
        ErrorModule,
        TagModule,
        BaseCheckboxModule,
        TextAreaModule,
        InputDropdownModule,
        DatepickerModule,
        TableModule,
        CardModule,
        NavigationBarModule,
        NotificationModule,
        DirectivesModule,
        ClipboardModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        IconModule,
                        BadgeModule,
                        InputModule,
                        ErrorModule,
                        TagModule,
                        BaseCheckboxModule,
                        TextAreaModule,
                        InputDropdownModule,
                        DatepickerModule,
                        TableModule,
                        CardModule,
                        NavigationBarModule,
                        NotificationModule,
                        DirectivesModule,
                        ClipboardModule,
                    ],
                    exports: [
                        ButtonModule,
                        IconModule,
                        BadgeModule,
                        InputModule,
                        ErrorModule,
                        TagModule,
                        BaseCheckboxModule,
                        TextAreaModule,
                        InputDropdownModule,
                        DatepickerModule,
                        TableModule,
                        CardModule,
                        NavigationBarModule,
                        NotificationModule,
                        DirectivesModule,
                        ClipboardModule,
                    ],
                }]
        }] });

class IconCoreModule {
}
IconCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
IconCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: IconCoreModule, imports: [CommonModule, i1.AngularSvgIconModule, i2$2.AngularSvgIconPreloaderModule] });
IconCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconCoreModule, imports: [CommonModule,
        AngularSvgIconModule.forRoot({}),
        AngularSvgIconPreloaderModule.forRoot({ configUrl: '../../assets/jsons/icons-config.json' })] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: IconCoreModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        CommonModule,
                        AngularSvgIconModule.forRoot({}),
                        AngularSvgIconPreloaderModule.forRoot({ configUrl: '../../assets/jsons/icons-config.json' }),
                    ],
                }]
        }] });

class DesignSystemCoreModule {
}
DesignSystemCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DesignSystemCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemCoreModule, imports: [IconCoreModule] });
DesignSystemCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemCoreModule, imports: [IconCoreModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: DesignSystemCoreModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [IconCoreModule],
                }]
        }] });

class DiflexmoNotification {
    constructor(type, headerText, bodyText = '', sticky = false) {
        this.type = type;
        this.headerText = headerText;
        this.bodyText = bodyText;
        this.sticky = sticky;
        this.sticky = sticky;
        this.type = type;
        this.headerText = headerText;
        this.bodyText = bodyText;
    }
}

/**
 * Generated bundle index. Do not edit.
 */

export { BadgeComponent, BadgeIconComponent, BadgeModule, BaseCheckboxComponent, BaseCheckboxModule, ButtonComponent, ButtonGroupComponent, ButtonGroupItemComponent, ButtonIconComponent, ButtonModule, CardComponent, CardModule, CheckboxComponent, ClipboardComponent, ClipboardModule, DatepickerComponent, DatepickerModule, DesignSystemCoreModule, DesignSystemModule, DiflexmoNotification, DirectivesModule, DomChangeDirective, ErrorComponent, ErrorModule, FeaturedIconComponent, IconComponent, IconCoreModule, IconModule, InputComponent, InputDropdownComponent, InputDropdownModule, InputModule, ItemsCompactHelper, NavigationBarComponent, NavigationBarModule, NavigationItemComponent, NavigationItemTenantComponent, NotificationComponent, NotificationModule, NotificationService, NotificationType, PositionType, RadioButtonComponent, SelectItem, SortOrder, TableBodyCellComponent, TableComponent, TableHeaderCellComponent, TableModule, TagComponent, TagModule, TextAreaComponent, TextAreaModule, ToggleComponent, iconsConfig };
//# sourceMappingURL=diflexmo-angular-design.mjs.map
